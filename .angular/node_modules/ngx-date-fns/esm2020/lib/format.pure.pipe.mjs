import { NgModule, Pipe } from '@angular/core';
import format from 'date-fns/format';
import { calculateLocale } from './date-fns-configuration.service';
import { isValidDate } from './utils';
import * as i0 from "@angular/core";
import * as i1 from "./date-fns-configuration.service";
export class FormatPurePipe {
    constructor(config) {
        this.config = config;
    }
    transform(date, dateFormat, options) {
        if (isValidDate(date)) {
            return format(date, dateFormat, calculateLocale(options, this.config));
        }
        return '';
    }
}
FormatPurePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatPurePipe, deps: [{ token: i1.DateFnsConfigurationService }], target: i0.ɵɵFactoryTarget.Pipe });
FormatPurePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatPurePipe, name: "dfnsFormatPure" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatPurePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsFormatPure' }]
        }], ctorParameters: function () { return [{ type: i1.DateFnsConfigurationService }]; } });
export class FormatPurePipeModule {
}
FormatPurePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatPurePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
FormatPurePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatPurePipeModule, declarations: [FormatPurePipe], exports: [FormatPurePipe] });
FormatPurePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatPurePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatPurePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [FormatPurePipe],
                    exports: [FormatPurePipe]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWF0LnB1cmUucGlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2xpYi9zcmMvbGliL2Zvcm1hdC5wdXJlLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBRTlELE9BQU8sTUFBTSxNQUFNLGlCQUFpQixDQUFDO0FBRXJDLE9BQU8sRUFFTCxlQUFlLEVBQ2hCLE1BQU0sa0NBQWtDLENBQUM7QUFDMUMsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLFNBQVMsQ0FBQzs7O0FBR3RDLE1BQU0sT0FBTyxjQUFjO0lBQ3pCLFlBQW1CLE1BQW1DO1FBQW5DLFdBQU0sR0FBTixNQUFNLENBQTZCO0lBQUcsQ0FBQztJQUUxRCxTQUFTLENBQ1AsSUFBeUMsRUFDekMsVUFBa0IsRUFDbEIsT0FNQztRQUVELElBQUksV0FBVyxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ3JCLE9BQU8sTUFBTSxDQUFDLElBQUksRUFBRSxVQUFVLEVBQUUsZUFBZSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztTQUN4RTtRQUNELE9BQU8sRUFBRSxDQUFDO0lBQ1osQ0FBQzs7MkdBbEJVLGNBQWM7eUdBQWQsY0FBYzsyRkFBZCxjQUFjO2tCQUQxQixJQUFJO21CQUFDLEVBQUUsSUFBSSxFQUFFLGdCQUFnQixFQUFFOztBQTBCaEMsTUFBTSxPQUFPLG9CQUFvQjs7aUhBQXBCLG9CQUFvQjtrSEFBcEIsb0JBQW9CLGlCQXpCcEIsY0FBYyxhQUFkLGNBQWM7a0hBeUJkLG9CQUFvQjsyRkFBcEIsb0JBQW9CO2tCQUpoQyxRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRSxDQUFDLGNBQWMsQ0FBQztvQkFDOUIsT0FBTyxFQUFFLENBQUMsY0FBYyxDQUFDO2lCQUMxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBMb2NhbGUgfSBmcm9tICdkYXRlLWZucyc7XG5pbXBvcnQgZm9ybWF0IGZyb20gJ2RhdGUtZm5zL2Zvcm1hdCc7XG5pbXBvcnQgeyBEYXRlRm5zSW5wdXREYXRlIH0gZnJvbSAnLi90eXBlcyc7XG5pbXBvcnQge1xuICBEYXRlRm5zQ29uZmlndXJhdGlvblNlcnZpY2UsXG4gIGNhbGN1bGF0ZUxvY2FsZVxufSBmcm9tICcuL2RhdGUtZm5zLWNvbmZpZ3VyYXRpb24uc2VydmljZSc7XG5pbXBvcnQgeyBpc1ZhbGlkRGF0ZSB9IGZyb20gJy4vdXRpbHMnO1xuXG5AUGlwZSh7IG5hbWU6ICdkZm5zRm9ybWF0UHVyZScgfSlcbmV4cG9ydCBjbGFzcyBGb3JtYXRQdXJlUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgY29uZmlnOiBEYXRlRm5zQ29uZmlndXJhdGlvblNlcnZpY2UpIHt9XG5cbiAgdHJhbnNmb3JtKFxuICAgIGRhdGU6IERhdGVGbnNJbnB1dERhdGUgfCBudWxsIHwgdW5kZWZpbmVkLFxuICAgIGRhdGVGb3JtYXQ6IHN0cmluZyxcbiAgICBvcHRpb25zPzoge1xuICAgICAgbG9jYWxlPzogTG9jYWxlO1xuICAgICAgd2Vla1N0YXJ0c09uPzogMCB8IDEgfCAyIHwgMyB8IDQgfCA1IHwgNjtcbiAgICAgIGZpcnN0V2Vla0NvbnRhaW5zRGF0ZT86IG51bWJlcjtcbiAgICAgIHVzZUFkZGl0aW9uYWxXZWVrWWVhclRva2Vucz86IGJvb2xlYW47XG4gICAgICB1c2VBZGRpdGlvbmFsRGF5T2ZZZWFyVG9rZW5zPzogYm9vbGVhbjtcbiAgICB9XG4gICk6IHN0cmluZyB7XG4gICAgaWYgKGlzVmFsaWREYXRlKGRhdGUpKSB7XG4gICAgICByZXR1cm4gZm9ybWF0KGRhdGUsIGRhdGVGb3JtYXQsIGNhbGN1bGF0ZUxvY2FsZShvcHRpb25zLCB0aGlzLmNvbmZpZykpO1xuICAgIH1cbiAgICByZXR1cm4gJyc7XG4gIH1cbn1cblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbRm9ybWF0UHVyZVBpcGVdLFxuICBleHBvcnRzOiBbRm9ybWF0UHVyZVBpcGVdXG59KVxuZXhwb3J0IGNsYXNzIEZvcm1hdFB1cmVQaXBlTW9kdWxlIHt9XG4iXX0=