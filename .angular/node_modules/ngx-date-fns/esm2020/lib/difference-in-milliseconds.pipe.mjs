import { NgModule, Pipe } from '@angular/core';
import differenceInMilliseconds from 'date-fns/differenceInMilliseconds';
import * as i0 from "@angular/core";
export class DifferenceInMillisecondsPipe {
    transform(dateLeft, dateRight) {
        return differenceInMilliseconds(dateLeft, dateRight);
    }
}
DifferenceInMillisecondsPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMillisecondsPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
DifferenceInMillisecondsPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMillisecondsPipe, name: "dfnsDifferenceInMilliseconds" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMillisecondsPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsDifferenceInMilliseconds' }]
        }] });
export class DifferenceInMillisecondsPipeModule {
}
DifferenceInMillisecondsPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMillisecondsPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DifferenceInMillisecondsPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMillisecondsPipeModule, declarations: [DifferenceInMillisecondsPipe], exports: [DifferenceInMillisecondsPipe] });
DifferenceInMillisecondsPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMillisecondsPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMillisecondsPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [DifferenceInMillisecondsPipe],
                    exports: [DifferenceInMillisecondsPipe]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlmZmVyZW5jZS1pbi1taWxsaXNlY29uZHMucGlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2xpYi9zcmMvbGliL2RpZmZlcmVuY2UtaW4tbWlsbGlzZWNvbmRzLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBRTlELE9BQU8sd0JBQXdCLE1BQU0sbUNBQW1DLENBQUM7O0FBR3pFLE1BQU0sT0FBTyw0QkFBNEI7SUFDdkMsU0FBUyxDQUFDLFFBQTBCLEVBQUUsU0FBMkI7UUFDL0QsT0FBTyx3QkFBd0IsQ0FBQyxRQUFRLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDdkQsQ0FBQzs7eUhBSFUsNEJBQTRCO3VIQUE1Qiw0QkFBNEI7MkZBQTVCLDRCQUE0QjtrQkFEeEMsSUFBSTttQkFBQyxFQUFFLElBQUksRUFBRSw4QkFBOEIsRUFBRTs7QUFXOUMsTUFBTSxPQUFPLGtDQUFrQzs7K0hBQWxDLGtDQUFrQztnSUFBbEMsa0NBQWtDLGlCQVZsQyw0QkFBNEIsYUFBNUIsNEJBQTRCO2dJQVU1QixrQ0FBa0M7MkZBQWxDLGtDQUFrQztrQkFKOUMsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsQ0FBQyw0QkFBNEIsQ0FBQztvQkFDNUMsT0FBTyxFQUFFLENBQUMsNEJBQTRCLENBQUM7aUJBQ3hDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERhdGVGbnNJbnB1dERhdGUgfSBmcm9tICcuL3R5cGVzJztcbmltcG9ydCBkaWZmZXJlbmNlSW5NaWxsaXNlY29uZHMgZnJvbSAnZGF0ZS1mbnMvZGlmZmVyZW5jZUluTWlsbGlzZWNvbmRzJztcblxuQFBpcGUoeyBuYW1lOiAnZGZuc0RpZmZlcmVuY2VJbk1pbGxpc2Vjb25kcycgfSlcbmV4cG9ydCBjbGFzcyBEaWZmZXJlbmNlSW5NaWxsaXNlY29uZHNQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gIHRyYW5zZm9ybShkYXRlTGVmdDogRGF0ZUZuc0lucHV0RGF0ZSwgZGF0ZVJpZ2h0OiBEYXRlRm5zSW5wdXREYXRlKTogbnVtYmVyIHtcbiAgICByZXR1cm4gZGlmZmVyZW5jZUluTWlsbGlzZWNvbmRzKGRhdGVMZWZ0LCBkYXRlUmlnaHQpO1xuICB9XG59XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW0RpZmZlcmVuY2VJbk1pbGxpc2Vjb25kc1BpcGVdLFxuICBleHBvcnRzOiBbRGlmZmVyZW5jZUluTWlsbGlzZWNvbmRzUGlwZV1cbn0pXG5leHBvcnQgY2xhc3MgRGlmZmVyZW5jZUluTWlsbGlzZWNvbmRzUGlwZU1vZHVsZSB7fVxuIl19