import * as i0 from '@angular/core';
import { Pipe, NgModule, Injectable } from '@angular/core';
import addBusinessDays from 'date-fns/addBusinessDays';
import addDays from 'date-fns/addDays';
import addHours from 'date-fns/addHours';
import addISOWeekYears from 'date-fns/addISOWeekYears';
import addMilliseconds from 'date-fns/addMilliseconds';
import addMinutes from 'date-fns/addMinutes';
import addMonths from 'date-fns/addMonths';
import addQuarters from 'date-fns/addQuarters';
import addSeconds from 'date-fns/addSeconds';
import addWeeks from 'date-fns/addWeeks';
import addYears from 'date-fns/addYears';
import closestTo from 'date-fns/closestTo';
import { Subject } from 'rxjs';
import format from 'date-fns/format';
import isValid from 'date-fns/isValid';
import formatRelative from 'date-fns/formatRelative';
import differenceInCalendarDays from 'date-fns/differenceInCalendarDays';
import differenceInCalendarISOWeeks from 'date-fns/differenceInCalendarISOWeeks';
import differenceInCalendarISOWeekYears from 'date-fns/differenceInCalendarISOWeekYears';
import differenceInCalendarMonths from 'date-fns/differenceInCalendarMonths';
import differenceInCalendarWeeks from 'date-fns/differenceInCalendarWeeks';
import differenceInCalendarYears from 'date-fns/differenceInCalendarYears';
import differenceInDays from 'date-fns/differenceInDays';
import differenceInHours from 'date-fns/differenceInHours';
import differenceInISOWeekYears from 'date-fns/differenceInISOWeekYears';
import differenceInMilliseconds from 'date-fns/differenceInMilliseconds';
import differenceInMinutes from 'date-fns/differenceInMinutes';
import differenceInMonths from 'date-fns/differenceInMonths';
import differenceInQuarters from 'date-fns/differenceInQuarters';
import differenceInSeconds from 'date-fns/differenceInSeconds';
import differenceInWeeks from 'date-fns/differenceInWeeks';
import differenceInYears from 'date-fns/differenceInYears';
import differenceInBusinessDays from 'date-fns/differenceInBusinessDays';
import formatDistance from 'date-fns/formatDistance';
import formatDistanceStrict from 'date-fns/formatDistanceStrict';
import formatDistanceToNow from 'date-fns/formatDistanceToNow';
import formatDistanceToNowStrict from 'date-fns/formatDistanceToNowStrict';
import endOfDay from 'date-fns/endOfDay';
import endOfHour from 'date-fns/endOfHour';
import endOfISOWeek from 'date-fns/endOfISOWeek';
import endOfISOWeekYear from 'date-fns/endOfISOWeekYear';
import endOfMinute from 'date-fns/endOfMinute';
import endOfMonth from 'date-fns/endOfMonth';
import endOfQuarter from 'date-fns/endOfQuarter';
import endOfSecond from 'date-fns/endOfSecond';
import endOfToday from 'date-fns/endOfToday';
import endOfTomorrow from 'date-fns/endOfTomorrow';
import endOfWeek from 'date-fns/endOfWeek';
import endOfYear from 'date-fns/endOfYear';
import endOfYesterday from 'date-fns/endOfYesterday';
import getDate from 'date-fns/getDate';
import getDayOfYear from 'date-fns/getDayOfYear';
import getDay from 'date-fns/getDay';
import getDaysInMonth from 'date-fns/getDaysInMonth';
import getDaysInYear from 'date-fns/getDaysInYear';
import getHours from 'date-fns/getHours';
import getISODay from 'date-fns/getISODay';
import getISOWeek from 'date-fns/getISOWeek';
import getISOWeeksInYear from 'date-fns/getISOWeeksInYear';
import getMilliseconds from 'date-fns/getMilliseconds';
import getMinutes from 'date-fns/getMinutes';
import getMonth from 'date-fns/getMonth';
import getOverlappingDaysInIntervals from 'date-fns/getOverlappingDaysInIntervals';
import getQuarter from 'date-fns/getQuarter';
import getSeconds from 'date-fns/getSeconds';
import getTime from 'date-fns/getTime';
import getYear from 'date-fns/getYear';
import getUnixTime from 'date-fns/getUnixTime';
import getWeek from 'date-fns/getWeek';
import getWeekOfMonth from 'date-fns/getWeekOfMonth';
import getWeeksInMonth from 'date-fns/getWeeksInMonth';
import getDecade from 'date-fns/getDecade';
import getWeekYear from 'date-fns/getWeekYear';
import lastDayOfISOWeek from 'date-fns/lastDayOfISOWeek';
import lastDayOfISOWeekYear from 'date-fns/lastDayOfISOWeekYear';
import lastDayOfMonth from 'date-fns/lastDayOfMonth';
import lastDayOfQuarter from 'date-fns/lastDayOfQuarter';
import lastDayOfWeek from 'date-fns/lastDayOfWeek';
import lastDayOfYear from 'date-fns/lastDayOfYear';
import lastDayOfDecade from 'date-fns/lastDayOfDecade';
import max from 'date-fns/max';
import min from 'date-fns/min';
import startOfDay from 'date-fns/startOfDay';
import startOfHour from 'date-fns/startOfHour';
import startOfISOWeek from 'date-fns/startOfISOWeek';
import startOfISOWeekYear from 'date-fns/startOfISOWeekYear';
import startOfMinute from 'date-fns/startOfMinute';
import startOfMonth from 'date-fns/startOfMonth';
import startOfQuarter from 'date-fns/startOfQuarter';
import startOfSecond from 'date-fns/startOfSecond';
import startOfToday from 'date-fns/startOfToday';
import startOfTomorrow from 'date-fns/startOfTomorrow';
import startOfWeek from 'date-fns/startOfWeek';
import startOfYear from 'date-fns/startOfYear';
import startOfYesterday from 'date-fns/startOfYesterday';
import startOfDecade from 'date-fns/startOfDecade';
import startOfWeekYear from 'date-fns/startOfWeekYear';
import subDays from 'date-fns/subDays';
import subHours from 'date-fns/subHours';
import subISOWeekYears from 'date-fns/subISOWeekYears';
import subMilliseconds from 'date-fns/subMilliseconds';
import subMinutes from 'date-fns/subMinutes';
import subMonths from 'date-fns/subMonths';
import subQuarters from 'date-fns/subQuarters';
import subSeconds from 'date-fns/subSeconds';
import subWeeks from 'date-fns/subWeeks';
import subYears from 'date-fns/subYears';
import isAfter from 'date-fns/isAfter';
import isBefore from 'date-fns/isBefore';
import isDate from 'date-fns/isDate';
import isEqual from 'date-fns/isEqual';
import isFuture from 'date-fns/isFuture';
import isPast from 'date-fns/isPast';
import isToday from 'date-fns/isToday';
import isWeekend from 'date-fns/isWeekend';
import isSameMonth from 'date-fns/isSameMonth';
import parse from 'date-fns/parse';
import eachDayOfInterval from 'date-fns/eachDayOfInterval';
import isSameYear from 'date-fns/isSameYear';
import differenceInCalendarQuarters from 'date-fns/differenceInCalendarQuarters';
import getISOWeekYear from 'date-fns/getISOWeekYear';
import parseISO from 'date-fns/parseISO';
import formatDuration from 'date-fns/formatDuration';
import isExists from 'date-fns/isExists';
import isFirstDayOfMonth from 'date-fns/isFirstDayOfMonth';
import isFriday from 'date-fns/isFriday';
import isLastDayOfMonth from 'date-fns/isLastDayOfMonth';
import isLeapYear from 'date-fns/isLeapYear';
import { isMatch, isThisWeek } from 'date-fns';
import isMatch$1 from 'date-fns/isMatch';
import isMonday from 'date-fns/isMonday';
import isSameDay from 'date-fns/isSameDay';
import isSameHour from 'date-fns/isSameHour';
import isSameISOWeekYear from 'date-fns/isSameISOWeekYear';
import isSameISOWeek from 'date-fns/isSameISOWeek';
import isSameDay$1 from 'date-fns/isSameMinute';
import isSameQuarter from 'date-fns/isSameQuarter';
import isSameSecond from 'date-fns/isSameSecond';
import isSameWeek from 'date-fns/isSameWeek';
import isSaturday from 'date-fns/isSaturday';
import isSunday from 'date-fns/isSunday';
import isThisHour from 'date-fns/isThisHour';
import isThisISOWeek from 'date-fns/isThisISOWeek';
import isThisMinute from 'date-fns/isThisMinute';
import isThisMonth from 'date-fns/isThisMonth';
import isThisQuarter from 'date-fns/isThisQuarter';
import isThisSecond from 'date-fns/isThisSecond';
import isThisWeek$1 from 'date-fns/isThisWeek';
import isThisYear from 'date-fns/isThisYear';
import isThursday from 'date-fns/isThursday';
import isTomorrow from 'date-fns/isTomorrow';
import isTuesday from 'date-fns/isTuesday';
import isWednesday from 'date-fns/isWednesday';
import isWithinInterval from 'date-fns/isWithinInterval';
import isYesterday from 'date-fns/isYesterday';

class AddBusinessDaysPipe {
    transform(date, amount) {
        return addBusinessDays(date, amount);
    }
}
AddBusinessDaysPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddBusinessDaysPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
AddBusinessDaysPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddBusinessDaysPipe, name: "dfnsAddBusinessDays" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddBusinessDaysPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsAddBusinessDays' }]
        }] });
class AddBusinessDaysPipeModule {
}
AddBusinessDaysPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddBusinessDaysPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
AddBusinessDaysPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddBusinessDaysPipeModule, declarations: [AddBusinessDaysPipe], exports: [AddBusinessDaysPipe] });
AddBusinessDaysPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddBusinessDaysPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddBusinessDaysPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [AddBusinessDaysPipe],
                    exports: [AddBusinessDaysPipe]
                }]
        }] });

class AddDaysPipe {
    transform(date, amount) {
        return addDays(date, amount);
    }
}
AddDaysPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddDaysPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
AddDaysPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddDaysPipe, name: "dfnsAddDays" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddDaysPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsAddDays' }]
        }] });
class AddDaysPipeModule {
}
AddDaysPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddDaysPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
AddDaysPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddDaysPipeModule, declarations: [AddDaysPipe], exports: [AddDaysPipe] });
AddDaysPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddDaysPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddDaysPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [AddDaysPipe],
                    exports: [AddDaysPipe]
                }]
        }] });

class AddHoursPipe {
    transform(date, amount) {
        return addHours(date, amount);
    }
}
AddHoursPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddHoursPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
AddHoursPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddHoursPipe, name: "dfnsAddHours" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddHoursPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsAddHours' }]
        }] });
class AddHoursPipeModule {
}
AddHoursPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddHoursPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
AddHoursPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddHoursPipeModule, declarations: [AddHoursPipe], exports: [AddHoursPipe] });
AddHoursPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddHoursPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddHoursPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [AddHoursPipe],
                    exports: [AddHoursPipe]
                }]
        }] });

class AddISOWeekYearsPipe {
    transform(date, amount) {
        return addISOWeekYears(date, amount);
    }
}
AddISOWeekYearsPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddISOWeekYearsPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
AddISOWeekYearsPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddISOWeekYearsPipe, name: "dfnsAddISOWeekYears" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddISOWeekYearsPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsAddISOWeekYears' }]
        }] });
class AddISOWeekYearsPipeModule {
}
AddISOWeekYearsPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddISOWeekYearsPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
AddISOWeekYearsPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddISOWeekYearsPipeModule, declarations: [AddISOWeekYearsPipe], exports: [AddISOWeekYearsPipe] });
AddISOWeekYearsPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddISOWeekYearsPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddISOWeekYearsPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [AddISOWeekYearsPipe],
                    exports: [AddISOWeekYearsPipe]
                }]
        }] });

class AddMillisecondsPipe {
    transform(date, amount) {
        return addMilliseconds(date, amount);
    }
}
AddMillisecondsPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddMillisecondsPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
AddMillisecondsPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddMillisecondsPipe, name: "dfnsAddMilliseconds" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddMillisecondsPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsAddMilliseconds' }]
        }] });
class AddMillisecondsPipeModule {
}
AddMillisecondsPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddMillisecondsPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
AddMillisecondsPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddMillisecondsPipeModule, declarations: [AddMillisecondsPipe], exports: [AddMillisecondsPipe] });
AddMillisecondsPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddMillisecondsPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddMillisecondsPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [AddMillisecondsPipe],
                    exports: [AddMillisecondsPipe]
                }]
        }] });

class AddMinutesPipe {
    transform(date, amount) {
        return addMinutes(date, amount);
    }
}
AddMinutesPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddMinutesPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
AddMinutesPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddMinutesPipe, name: "dfnsAddMinutes" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddMinutesPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsAddMinutes' }]
        }] });
class AddMinutesPipeModule {
}
AddMinutesPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddMinutesPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
AddMinutesPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddMinutesPipeModule, declarations: [AddMinutesPipe], exports: [AddMinutesPipe] });
AddMinutesPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddMinutesPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddMinutesPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [AddMinutesPipe],
                    exports: [AddMinutesPipe]
                }]
        }] });

class AddMonthsPipe {
    transform(date, amount) {
        return addMonths(date, amount);
    }
}
AddMonthsPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddMonthsPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
AddMonthsPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddMonthsPipe, name: "dfnsAddMonths" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddMonthsPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsAddMonths' }]
        }] });
class AddMonthsPipeModule {
}
AddMonthsPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddMonthsPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
AddMonthsPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddMonthsPipeModule, declarations: [AddMonthsPipe], exports: [AddMonthsPipe] });
AddMonthsPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddMonthsPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddMonthsPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [AddMonthsPipe],
                    exports: [AddMonthsPipe]
                }]
        }] });

class AddQuartersPipe {
    transform(date, amount) {
        return addQuarters(date, amount);
    }
}
AddQuartersPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddQuartersPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
AddQuartersPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddQuartersPipe, name: "dfnsAddQuarters" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddQuartersPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsAddQuarters' }]
        }] });
class AddQuartersPipeModule {
}
AddQuartersPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddQuartersPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
AddQuartersPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddQuartersPipeModule, declarations: [AddQuartersPipe], exports: [AddQuartersPipe] });
AddQuartersPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddQuartersPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddQuartersPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [AddQuartersPipe],
                    exports: [AddQuartersPipe]
                }]
        }] });

class AddSecondsPipe {
    transform(date, amount) {
        return addSeconds(date, amount);
    }
}
AddSecondsPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddSecondsPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
AddSecondsPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddSecondsPipe, name: "dfnsAddSeconds" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddSecondsPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsAddSeconds' }]
        }] });
class AddSecondsPipeModule {
}
AddSecondsPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddSecondsPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
AddSecondsPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddSecondsPipeModule, declarations: [AddSecondsPipe], exports: [AddSecondsPipe] });
AddSecondsPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddSecondsPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddSecondsPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [AddSecondsPipe],
                    exports: [AddSecondsPipe]
                }]
        }] });

class AddWeeksPipe {
    transform(date, amount) {
        return addWeeks(date, amount);
    }
}
AddWeeksPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddWeeksPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
AddWeeksPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddWeeksPipe, name: "dfnsAddWeeks" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddWeeksPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsAddWeeks' }]
        }] });
class AddWeeksPipeModule {
}
AddWeeksPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddWeeksPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
AddWeeksPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddWeeksPipeModule, declarations: [AddWeeksPipe], exports: [AddWeeksPipe] });
AddWeeksPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddWeeksPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddWeeksPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [AddWeeksPipe],
                    exports: [AddWeeksPipe]
                }]
        }] });

class AddYearsPipe {
    transform(date, amount) {
        return addYears(date, amount);
    }
}
AddYearsPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddYearsPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
AddYearsPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddYearsPipe, name: "dfnsAddYears" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddYearsPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsAddYears' }]
        }] });
class AddYearsPipeModule {
}
AddYearsPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddYearsPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
AddYearsPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddYearsPipeModule, declarations: [AddYearsPipe], exports: [AddYearsPipe] });
AddYearsPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddYearsPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddYearsPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [AddYearsPipe],
                    exports: [AddYearsPipe]
                }]
        }] });

class ClosestToPipe {
    transform(dateToCompare, datesArray) {
        return closestTo(dateToCompare, datesArray);
    }
}
ClosestToPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ClosestToPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
ClosestToPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ClosestToPipe, name: "dfnsClosestTo" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ClosestToPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsClosestTo' }]
        }] });
class ClosestToPipeModule {
}
ClosestToPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ClosestToPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ClosestToPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ClosestToPipeModule, declarations: [ClosestToPipe], exports: [ClosestToPipe] });
ClosestToPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ClosestToPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ClosestToPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [ClosestToPipe],
                    exports: [ClosestToPipe]
                }]
        }] });

class DateFnsConfigurationService {
    constructor() {
        this.localeChanged = new Subject();
    }
    locale() {
        return this.locale$;
    }
    setLocale(locale) {
        this.locale$ = locale;
        this.localeChanged.next();
    }
}
DateFnsConfigurationService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DateFnsConfigurationService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
DateFnsConfigurationService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DateFnsConfigurationService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DateFnsConfigurationService, decorators: [{
            type: Injectable,
            args: [{ providedIn: 'root' }]
        }] });
/**
 * Helper function used by all pipes to calculate locale
 */
const calculateLocale = (options, config) => {
    const configLocale = config.locale();
    if (!options && configLocale) {
        return { locale: configLocale };
    }
    if (options && !options.locale && configLocale) {
        return Object.assign(Object.assign({}, options), { locale: configLocale });
    }
    return options;
};

const isValidDate = (date) => !(date === undefined || date === null || !isValid(date));

class FormatPipe {
    constructor(config, cd) {
        this.config = config;
        this.cd = cd;
        this.localeChanged$ = this.config.localeChanged.subscribe(_ => this.cd.markForCheck());
    }
    ngOnDestroy() {
        this.localeChanged$.unsubscribe();
    }
    transform(date, dateFormat, options) {
        if (isValidDate(date)) {
            return format(date, dateFormat, calculateLocale(options, this.config));
        }
        return '';
    }
}
FormatPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatPipe, deps: [{ token: DateFnsConfigurationService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Pipe });
FormatPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatPipe, name: "dfnsFormat", pure: false });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsFormat', pure: false }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }, { type: i0.ChangeDetectorRef }]; } });
class FormatPipeModule {
}
FormatPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
FormatPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatPipeModule, declarations: [FormatPipe], exports: [FormatPipe] });
FormatPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [FormatPipe],
                    exports: [FormatPipe]
                }]
        }] });

class FormatRelativePipe {
    constructor(config, cd) {
        this.config = config;
        this.cd = cd;
        this.localeChanged$ = this.config.localeChanged.subscribe(_ => this.cd.markForCheck());
    }
    ngOnDestroy() {
        this.localeChanged$.unsubscribe();
    }
    transform(date, dateToCompare, options) {
        if (isValidDate(date) && isValidDate(dateToCompare)) {
            return formatRelative(date, dateToCompare, calculateLocale(options, this.config));
        }
        return '';
    }
}
FormatRelativePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativePipe, deps: [{ token: DateFnsConfigurationService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Pipe });
FormatRelativePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativePipe, name: "dfnsFormatRelative", pure: false });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsFormatRelative', pure: false }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }, { type: i0.ChangeDetectorRef }]; } });
class FormatRelativePipeModule {
}
FormatRelativePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
FormatRelativePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativePipeModule, declarations: [FormatRelativePipe], exports: [FormatRelativePipe] });
FormatRelativePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [FormatRelativePipe],
                    exports: [FormatRelativePipe]
                }]
        }] });

class DifferenceInCalendarDaysPipe {
    transform(dateLeft, dateRight) {
        return differenceInCalendarDays(dateLeft, dateRight);
    }
}
DifferenceInCalendarDaysPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarDaysPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
DifferenceInCalendarDaysPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarDaysPipe, name: "dfnsDifferenceInCalendarDays" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarDaysPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsDifferenceInCalendarDays' }]
        }] });
class DifferenceInCalendarDaysPipeModule {
}
DifferenceInCalendarDaysPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarDaysPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DifferenceInCalendarDaysPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarDaysPipeModule, declarations: [DifferenceInCalendarDaysPipe], exports: [DifferenceInCalendarDaysPipe] });
DifferenceInCalendarDaysPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarDaysPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarDaysPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [DifferenceInCalendarDaysPipe],
                    exports: [DifferenceInCalendarDaysPipe]
                }]
        }] });

class DifferenceInCalendarISOWeeksPipe {
    transform(dateLeft, dateRight) {
        return differenceInCalendarISOWeeks(dateLeft, dateRight);
    }
}
DifferenceInCalendarISOWeeksPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarISOWeeksPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
DifferenceInCalendarISOWeeksPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarISOWeeksPipe, name: "dfnsDifferenceInCalendarISOWeeks" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarISOWeeksPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsDifferenceInCalendarISOWeeks' }]
        }] });
class DifferenceInCalendarISOWeeksPipeModule {
}
DifferenceInCalendarISOWeeksPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarISOWeeksPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DifferenceInCalendarISOWeeksPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarISOWeeksPipeModule, declarations: [DifferenceInCalendarISOWeeksPipe], exports: [DifferenceInCalendarISOWeeksPipe] });
DifferenceInCalendarISOWeeksPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarISOWeeksPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarISOWeeksPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [DifferenceInCalendarISOWeeksPipe],
                    exports: [DifferenceInCalendarISOWeeksPipe]
                }]
        }] });

class DifferenceInCalendarISOWeekYearsPipe {
    transform(dateLeft, dateRight) {
        return differenceInCalendarISOWeekYears(dateLeft, dateRight);
    }
}
DifferenceInCalendarISOWeekYearsPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarISOWeekYearsPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
DifferenceInCalendarISOWeekYearsPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarISOWeekYearsPipe, name: "dfnsDifferenceInCalendarISOWeekYears" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarISOWeekYearsPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsDifferenceInCalendarISOWeekYears' }]
        }] });
class DifferenceInCalendarISOWeekYearsPipeModule {
}
DifferenceInCalendarISOWeekYearsPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarISOWeekYearsPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DifferenceInCalendarISOWeekYearsPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarISOWeekYearsPipeModule, declarations: [DifferenceInCalendarISOWeekYearsPipe], exports: [DifferenceInCalendarISOWeekYearsPipe] });
DifferenceInCalendarISOWeekYearsPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarISOWeekYearsPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarISOWeekYearsPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [DifferenceInCalendarISOWeekYearsPipe],
                    exports: [DifferenceInCalendarISOWeekYearsPipe]
                }]
        }] });

class DifferenceInCalendarMonthsPipe {
    transform(dateLeft, dateRight) {
        return differenceInCalendarMonths(dateLeft, dateRight);
    }
}
DifferenceInCalendarMonthsPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarMonthsPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
DifferenceInCalendarMonthsPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarMonthsPipe, name: "dfnsDifferenceInCalendarMonths" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarMonthsPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsDifferenceInCalendarMonths' }]
        }] });
class DifferenceInCalendarMonthsPipeModule {
}
DifferenceInCalendarMonthsPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarMonthsPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DifferenceInCalendarMonthsPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarMonthsPipeModule, declarations: [DifferenceInCalendarMonthsPipe], exports: [DifferenceInCalendarMonthsPipe] });
DifferenceInCalendarMonthsPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarMonthsPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarMonthsPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [DifferenceInCalendarMonthsPipe],
                    exports: [DifferenceInCalendarMonthsPipe]
                }]
        }] });

class DifferenceInCalendarWeeksPipe {
    transform(dateLeft, dateRight, options) {
        return differenceInCalendarWeeks(dateLeft, dateRight, options);
    }
}
DifferenceInCalendarWeeksPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarWeeksPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
DifferenceInCalendarWeeksPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarWeeksPipe, name: "dfnsDifferenceInCalendarWeeks" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarWeeksPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsDifferenceInCalendarWeeks' }]
        }] });
class DifferenceInCalendarWeeksPipeModule {
}
DifferenceInCalendarWeeksPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarWeeksPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DifferenceInCalendarWeeksPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarWeeksPipeModule, declarations: [DifferenceInCalendarWeeksPipe], exports: [DifferenceInCalendarWeeksPipe] });
DifferenceInCalendarWeeksPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarWeeksPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarWeeksPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [DifferenceInCalendarWeeksPipe],
                    exports: [DifferenceInCalendarWeeksPipe]
                }]
        }] });

class DifferenceInCalendarYearsPipe {
    transform(dateLeft, dateRight) {
        return differenceInCalendarYears(dateLeft, dateRight);
    }
}
DifferenceInCalendarYearsPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarYearsPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
DifferenceInCalendarYearsPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarYearsPipe, name: "dfnsDifferenceInCalendarYears" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarYearsPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsDifferenceInCalendarYears' }]
        }] });
class DifferenceInCalendarYearsPipeModule {
}
DifferenceInCalendarYearsPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarYearsPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DifferenceInCalendarYearsPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarYearsPipeModule, declarations: [DifferenceInCalendarYearsPipe], exports: [DifferenceInCalendarYearsPipe] });
DifferenceInCalendarYearsPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarYearsPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarYearsPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [DifferenceInCalendarYearsPipe],
                    exports: [DifferenceInCalendarYearsPipe]
                }]
        }] });

class DifferenceInDaysPipe {
    transform(dateLeft, dateRight) {
        return differenceInDays(dateLeft, dateRight);
    }
}
DifferenceInDaysPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInDaysPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
DifferenceInDaysPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInDaysPipe, name: "dfnsDifferenceInDays" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInDaysPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsDifferenceInDays' }]
        }] });
class DifferenceInDaysPipeModule {
}
DifferenceInDaysPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInDaysPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DifferenceInDaysPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInDaysPipeModule, declarations: [DifferenceInDaysPipe], exports: [DifferenceInDaysPipe] });
DifferenceInDaysPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInDaysPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInDaysPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [DifferenceInDaysPipe],
                    exports: [DifferenceInDaysPipe]
                }]
        }] });

class DifferenceInHoursPipe {
    transform(dateLeft, dateRight) {
        return differenceInHours(dateLeft, dateRight);
    }
}
DifferenceInHoursPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInHoursPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
DifferenceInHoursPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInHoursPipe, name: "dfnsDifferenceInHours" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInHoursPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsDifferenceInHours' }]
        }] });
class DifferenceInHoursPipeModule {
}
DifferenceInHoursPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInHoursPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DifferenceInHoursPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInHoursPipeModule, declarations: [DifferenceInHoursPipe], exports: [DifferenceInHoursPipe] });
DifferenceInHoursPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInHoursPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInHoursPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [DifferenceInHoursPipe],
                    exports: [DifferenceInHoursPipe]
                }]
        }] });

class DifferenceInISOWeekYearsPipe {
    transform(dateLeft, dateRight) {
        return differenceInISOWeekYears(dateLeft, dateRight);
    }
}
DifferenceInISOWeekYearsPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInISOWeekYearsPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
DifferenceInISOWeekYearsPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInISOWeekYearsPipe, name: "dfnsDifferenceInISOWeekYears" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInISOWeekYearsPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsDifferenceInISOWeekYears' }]
        }] });
class DifferenceInISOWeekYearsPipeModule {
}
DifferenceInISOWeekYearsPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInISOWeekYearsPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DifferenceInISOWeekYearsPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInISOWeekYearsPipeModule, declarations: [DifferenceInISOWeekYearsPipe], exports: [DifferenceInISOWeekYearsPipe] });
DifferenceInISOWeekYearsPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInISOWeekYearsPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInISOWeekYearsPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [DifferenceInISOWeekYearsPipe],
                    exports: [DifferenceInISOWeekYearsPipe]
                }]
        }] });

class DifferenceInMillisecondsPipe {
    transform(dateLeft, dateRight) {
        return differenceInMilliseconds(dateLeft, dateRight);
    }
}
DifferenceInMillisecondsPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMillisecondsPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
DifferenceInMillisecondsPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMillisecondsPipe, name: "dfnsDifferenceInMilliseconds" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMillisecondsPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsDifferenceInMilliseconds' }]
        }] });
class DifferenceInMillisecondsPipeModule {
}
DifferenceInMillisecondsPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMillisecondsPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DifferenceInMillisecondsPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMillisecondsPipeModule, declarations: [DifferenceInMillisecondsPipe], exports: [DifferenceInMillisecondsPipe] });
DifferenceInMillisecondsPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMillisecondsPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMillisecondsPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [DifferenceInMillisecondsPipe],
                    exports: [DifferenceInMillisecondsPipe]
                }]
        }] });

class DifferenceInMinutesPipe {
    transform(dateLeft, dateRight) {
        return differenceInMinutes(dateLeft, dateRight);
    }
}
DifferenceInMinutesPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMinutesPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
DifferenceInMinutesPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMinutesPipe, name: "dfnsDifferenceInMinutes" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMinutesPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsDifferenceInMinutes' }]
        }] });
class DifferenceInMinutesPipeModule {
}
DifferenceInMinutesPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMinutesPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DifferenceInMinutesPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMinutesPipeModule, declarations: [DifferenceInMinutesPipe], exports: [DifferenceInMinutesPipe] });
DifferenceInMinutesPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMinutesPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMinutesPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [DifferenceInMinutesPipe],
                    exports: [DifferenceInMinutesPipe]
                }]
        }] });

class DifferenceInMonthsPipe {
    transform(dateLeft, dateRight) {
        return differenceInMonths(dateLeft, dateRight);
    }
}
DifferenceInMonthsPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMonthsPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
DifferenceInMonthsPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMonthsPipe, name: "dfnsDifferenceInMonths" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMonthsPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsDifferenceInMonths' }]
        }] });
class DifferenceInMonthsPipeModule {
}
DifferenceInMonthsPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMonthsPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DifferenceInMonthsPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMonthsPipeModule, declarations: [DifferenceInMonthsPipe], exports: [DifferenceInMonthsPipe] });
DifferenceInMonthsPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMonthsPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMonthsPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [DifferenceInMonthsPipe],
                    exports: [DifferenceInMonthsPipe]
                }]
        }] });

class DifferenceInQuartersPipe {
    transform(dateLeft, dateRight) {
        return differenceInQuarters(dateLeft, dateRight);
    }
}
DifferenceInQuartersPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInQuartersPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
DifferenceInQuartersPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInQuartersPipe, name: "dfnsDifferenceInQuarters" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInQuartersPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsDifferenceInQuarters' }]
        }] });
class DifferenceInQuartersPipeModule {
}
DifferenceInQuartersPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInQuartersPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DifferenceInQuartersPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInQuartersPipeModule, declarations: [DifferenceInQuartersPipe], exports: [DifferenceInQuartersPipe] });
DifferenceInQuartersPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInQuartersPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInQuartersPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [DifferenceInQuartersPipe],
                    exports: [DifferenceInQuartersPipe]
                }]
        }] });

class DifferenceInSecondsPipe {
    transform(dateLeft, dateRight) {
        return differenceInSeconds(dateLeft, dateRight);
    }
}
DifferenceInSecondsPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInSecondsPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
DifferenceInSecondsPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInSecondsPipe, name: "dfnsDifferenceInSeconds" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInSecondsPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsDifferenceInSeconds' }]
        }] });
class DifferenceInSecondsPipeModule {
}
DifferenceInSecondsPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInSecondsPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DifferenceInSecondsPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInSecondsPipeModule, declarations: [DifferenceInSecondsPipe], exports: [DifferenceInSecondsPipe] });
DifferenceInSecondsPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInSecondsPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInSecondsPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [DifferenceInSecondsPipe],
                    exports: [DifferenceInSecondsPipe]
                }]
        }] });

class DifferenceInWeeksPipe {
    transform(dateLeft, dateRight) {
        return differenceInWeeks(dateLeft, dateRight);
    }
}
DifferenceInWeeksPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInWeeksPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
DifferenceInWeeksPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInWeeksPipe, name: "dfnsDifferenceInWeeks" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInWeeksPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsDifferenceInWeeks' }]
        }] });
class DifferenceInWeeksPipeModule {
}
DifferenceInWeeksPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInWeeksPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DifferenceInWeeksPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInWeeksPipeModule, declarations: [DifferenceInWeeksPipe], exports: [DifferenceInWeeksPipe] });
DifferenceInWeeksPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInWeeksPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInWeeksPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [DifferenceInWeeksPipe],
                    exports: [DifferenceInWeeksPipe]
                }]
        }] });

class DifferenceInYearsPipe {
    transform(dateLeft, dateRight) {
        return differenceInYears(dateLeft, dateRight);
    }
}
DifferenceInYearsPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInYearsPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
DifferenceInYearsPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInYearsPipe, name: "dfnsDifferenceInYears" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInYearsPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsDifferenceInYears' }]
        }] });
class DifferenceInYearsPipeModule {
}
DifferenceInYearsPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInYearsPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DifferenceInYearsPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInYearsPipeModule, declarations: [DifferenceInYearsPipe], exports: [DifferenceInYearsPipe] });
DifferenceInYearsPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInYearsPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInYearsPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [DifferenceInYearsPipe],
                    exports: [DifferenceInYearsPipe]
                }]
        }] });

class DifferenceInBusinessDaysPipe {
    transform(dateLeft, dateRight) {
        return differenceInBusinessDays(dateLeft, dateRight);
    }
}
DifferenceInBusinessDaysPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInBusinessDaysPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
DifferenceInBusinessDaysPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInBusinessDaysPipe, name: "dfnsDifferenceInBusinessDays" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInBusinessDaysPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsDifferenceInBusinessDays' }]
        }] });
class DifferenceInBusinessDaysPipeModule {
}
DifferenceInBusinessDaysPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInBusinessDaysPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DifferenceInBusinessDaysPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInBusinessDaysPipeModule, declarations: [DifferenceInBusinessDaysPipe], exports: [DifferenceInBusinessDaysPipe] });
DifferenceInBusinessDaysPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInBusinessDaysPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInBusinessDaysPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [DifferenceInBusinessDaysPipe],
                    exports: [DifferenceInBusinessDaysPipe]
                }]
        }] });

class FormatDistancePipe {
    constructor(config, cd) {
        this.config = config;
        this.cd = cd;
        this.localeChanged$ = this.config.localeChanged.subscribe(_ => this.cd.markForCheck());
    }
    ngOnDestroy() {
        this.localeChanged$.unsubscribe();
    }
    transform(date, dateToCompare, options) {
        if (isValidDate(date) && isValidDate(dateToCompare)) {
            return formatDistance(date, dateToCompare, calculateLocale(options, this.config));
        }
        return '';
    }
}
FormatDistancePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistancePipe, deps: [{ token: DateFnsConfigurationService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Pipe });
FormatDistancePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistancePipe, name: "dfnsFormatDistance", pure: false });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistancePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsFormatDistance', pure: false }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }, { type: i0.ChangeDetectorRef }]; } });
class FormatDistancePipeModule {
}
FormatDistancePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistancePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
FormatDistancePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistancePipeModule, declarations: [FormatDistancePipe], exports: [FormatDistancePipe] });
FormatDistancePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistancePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistancePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [FormatDistancePipe],
                    exports: [FormatDistancePipe]
                }]
        }] });

class FormatDistanceStrictPipe {
    constructor(config, cd) {
        this.config = config;
        this.cd = cd;
        this.localeChanged$ = this.config.localeChanged.subscribe(_ => this.cd.markForCheck());
    }
    ngOnDestroy() {
        this.localeChanged$.unsubscribe();
    }
    transform(date, dateToCompare, options) {
        if (isValidDate(date) && isValidDate(dateToCompare)) {
            return formatDistanceStrict(date, dateToCompare, calculateLocale(options, this.config));
        }
        return '';
    }
}
FormatDistanceStrictPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceStrictPipe, deps: [{ token: DateFnsConfigurationService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Pipe });
FormatDistanceStrictPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceStrictPipe, name: "dfnsFormatDistanceStrict", pure: false });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceStrictPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsFormatDistanceStrict', pure: false }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }, { type: i0.ChangeDetectorRef }]; } });
class FormatDistanceStrictPipeModule {
}
FormatDistanceStrictPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceStrictPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
FormatDistanceStrictPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceStrictPipeModule, declarations: [FormatDistanceStrictPipe], exports: [FormatDistanceStrictPipe] });
FormatDistanceStrictPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceStrictPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceStrictPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [FormatDistanceStrictPipe],
                    exports: [FormatDistanceStrictPipe]
                }]
        }] });

class FormatDistanceToNowPipe {
    constructor(config, cd) {
        this.config = config;
        this.cd = cd;
        this.localeChanged$ = this.config.localeChanged.subscribe(_ => this.cd.markForCheck());
    }
    ngOnDestroy() {
        this.localeChanged$.unsubscribe();
    }
    transform(date, options) {
        if (isValidDate(date)) {
            return formatDistanceToNow(date, calculateLocale(options, this.config));
        }
        return '';
    }
}
FormatDistanceToNowPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowPipe, deps: [{ token: DateFnsConfigurationService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Pipe });
FormatDistanceToNowPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowPipe, name: "dfnsFormatDistanceToNow", pure: false });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsFormatDistanceToNow', pure: false }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }, { type: i0.ChangeDetectorRef }]; } });
class FormatDistanceToNowPipeModule {
}
FormatDistanceToNowPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
FormatDistanceToNowPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowPipeModule, declarations: [FormatDistanceToNowPipe], exports: [FormatDistanceToNowPipe] });
FormatDistanceToNowPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [FormatDistanceToNowPipe],
                    exports: [FormatDistanceToNowPipe]
                }]
        }] });

class FormatDistanceToNowStrictPipe {
    constructor(config, cd) {
        this.config = config;
        this.cd = cd;
        this.localeChanged$ = this.config.localeChanged.subscribe(_ => this.cd.markForCheck());
    }
    ngOnDestroy() {
        this.localeChanged$.unsubscribe();
    }
    transform(date, options) {
        if (isValidDate(date)) {
            return formatDistanceToNowStrict(date, calculateLocale(options, this.config));
        }
        return '';
    }
}
FormatDistanceToNowStrictPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowStrictPipe, deps: [{ token: DateFnsConfigurationService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Pipe });
FormatDistanceToNowStrictPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowStrictPipe, name: "dfnsFormatDistanceToNowStrict", pure: false });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowStrictPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsFormatDistanceToNowStrict', pure: false }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }, { type: i0.ChangeDetectorRef }]; } });
class FormatDistanceToNowStrictPipeModule {
}
FormatDistanceToNowStrictPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowStrictPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
FormatDistanceToNowStrictPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowStrictPipeModule, declarations: [FormatDistanceToNowStrictPipe], exports: [FormatDistanceToNowStrictPipe] });
FormatDistanceToNowStrictPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowStrictPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowStrictPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [FormatDistanceToNowStrictPipe],
                    exports: [FormatDistanceToNowStrictPipe]
                }]
        }] });

class EndOfDayPipe {
    transform(date) {
        return endOfDay(date);
    }
}
EndOfDayPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfDayPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
EndOfDayPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfDayPipe, name: "dfnsEndOfDay" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfDayPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsEndOfDay' }]
        }] });
class EndOfDayPipeModule {
}
EndOfDayPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfDayPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
EndOfDayPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfDayPipeModule, declarations: [EndOfDayPipe], exports: [EndOfDayPipe] });
EndOfDayPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfDayPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfDayPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [EndOfDayPipe],
                    exports: [EndOfDayPipe]
                }]
        }] });

class EndOfHourPipe {
    transform(date) {
        return endOfHour(date);
    }
}
EndOfHourPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfHourPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
EndOfHourPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfHourPipe, name: "dfnsEndOfHour" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfHourPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsEndOfHour' }]
        }] });
class EndOfHourPipeModule {
}
EndOfHourPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfHourPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
EndOfHourPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfHourPipeModule, declarations: [EndOfHourPipe], exports: [EndOfHourPipe] });
EndOfHourPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfHourPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfHourPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [EndOfHourPipe],
                    exports: [EndOfHourPipe]
                }]
        }] });

class EndOfISOWeekPipe {
    transform(date) {
        return endOfISOWeek(date);
    }
}
EndOfISOWeekPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfISOWeekPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
EndOfISOWeekPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfISOWeekPipe, name: "dfnsEndOfISOWeek" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfISOWeekPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsEndOfISOWeek' }]
        }] });
class EndOfISOWeekPipeModule {
}
EndOfISOWeekPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfISOWeekPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
EndOfISOWeekPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfISOWeekPipeModule, declarations: [EndOfISOWeekPipe], exports: [EndOfISOWeekPipe] });
EndOfISOWeekPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfISOWeekPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfISOWeekPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [EndOfISOWeekPipe],
                    exports: [EndOfISOWeekPipe]
                }]
        }] });

class EndOfISOWeekYearPipe {
    transform(date) {
        return endOfISOWeekYear(date);
    }
}
EndOfISOWeekYearPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfISOWeekYearPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
EndOfISOWeekYearPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfISOWeekYearPipe, name: "dfnsEndOfISOWeekYear" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfISOWeekYearPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsEndOfISOWeekYear' }]
        }] });
class EndOfISOWeekYearPipeModule {
}
EndOfISOWeekYearPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfISOWeekYearPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
EndOfISOWeekYearPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfISOWeekYearPipeModule, declarations: [EndOfISOWeekYearPipe], exports: [EndOfISOWeekYearPipe] });
EndOfISOWeekYearPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfISOWeekYearPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfISOWeekYearPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [EndOfISOWeekYearPipe],
                    exports: [EndOfISOWeekYearPipe]
                }]
        }] });

class EndOfMinutePipe {
    transform(date) {
        return endOfMinute(date);
    }
}
EndOfMinutePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfMinutePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
EndOfMinutePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfMinutePipe, name: "dfnsEndOfMinute" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfMinutePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsEndOfMinute' }]
        }] });
class EndOfMinutePipeModule {
}
EndOfMinutePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfMinutePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
EndOfMinutePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfMinutePipeModule, declarations: [EndOfMinutePipe], exports: [EndOfMinutePipe] });
EndOfMinutePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfMinutePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfMinutePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [EndOfMinutePipe],
                    exports: [EndOfMinutePipe]
                }]
        }] });

class EndOfMonthPipe {
    transform(date) {
        return endOfMonth(date);
    }
}
EndOfMonthPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfMonthPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
EndOfMonthPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfMonthPipe, name: "dfnsEndOfMonth" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfMonthPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsEndOfMonth' }]
        }] });
class EndOfMonthPipeModule {
}
EndOfMonthPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfMonthPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
EndOfMonthPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfMonthPipeModule, declarations: [EndOfMonthPipe], exports: [EndOfMonthPipe] });
EndOfMonthPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfMonthPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfMonthPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [EndOfMonthPipe],
                    exports: [EndOfMonthPipe]
                }]
        }] });

class EndOfQuarterPipe {
    transform(date) {
        return endOfQuarter(date);
    }
}
EndOfQuarterPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfQuarterPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
EndOfQuarterPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfQuarterPipe, name: "dfnsEndOfQuarter" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfQuarterPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsEndOfQuarter' }]
        }] });
class EndOfQuarterPipeModule {
}
EndOfQuarterPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfQuarterPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
EndOfQuarterPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfQuarterPipeModule, declarations: [EndOfQuarterPipe], exports: [EndOfQuarterPipe] });
EndOfQuarterPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfQuarterPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfQuarterPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [EndOfQuarterPipe],
                    exports: [EndOfQuarterPipe]
                }]
        }] });

class EndOfSecondPipe {
    transform(date) {
        return endOfSecond(date);
    }
}
EndOfSecondPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfSecondPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
EndOfSecondPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfSecondPipe, name: "dfnsEndOfSecond" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfSecondPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsEndOfSecond' }]
        }] });
class EndOfSecondPipeModule {
}
EndOfSecondPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfSecondPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
EndOfSecondPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfSecondPipeModule, declarations: [EndOfSecondPipe], exports: [EndOfSecondPipe] });
EndOfSecondPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfSecondPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfSecondPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [EndOfSecondPipe],
                    exports: [EndOfSecondPipe]
                }]
        }] });

class EndOfTodayPipe {
    transform() {
        return endOfToday();
    }
}
EndOfTodayPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfTodayPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
EndOfTodayPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfTodayPipe, name: "dfnsEndOfToday" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfTodayPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsEndOfToday' }]
        }] });
class EndOfTodayPipeModule {
}
EndOfTodayPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfTodayPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
EndOfTodayPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfTodayPipeModule, declarations: [EndOfTodayPipe], exports: [EndOfTodayPipe] });
EndOfTodayPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfTodayPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfTodayPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [EndOfTodayPipe],
                    exports: [EndOfTodayPipe]
                }]
        }] });

class EndOfTomorrowPipe {
    transform() {
        return endOfTomorrow();
    }
}
EndOfTomorrowPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfTomorrowPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
EndOfTomorrowPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfTomorrowPipe, name: "dfnsEndOfTomorrow" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfTomorrowPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsEndOfTomorrow' }]
        }] });
class EndOfTomorrowPipeModule {
}
EndOfTomorrowPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfTomorrowPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
EndOfTomorrowPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfTomorrowPipeModule, declarations: [EndOfTomorrowPipe], exports: [EndOfTomorrowPipe] });
EndOfTomorrowPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfTomorrowPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfTomorrowPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [EndOfTomorrowPipe],
                    exports: [EndOfTomorrowPipe]
                }]
        }] });

class EndOfWeekPipe {
    transform(date, options) {
        return endOfWeek(date, options);
    }
}
EndOfWeekPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfWeekPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
EndOfWeekPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfWeekPipe, name: "dfnsEndOfWeek" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfWeekPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsEndOfWeek' }]
        }] });
class EndOfWeekPipeModule {
}
EndOfWeekPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfWeekPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
EndOfWeekPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfWeekPipeModule, declarations: [EndOfWeekPipe], exports: [EndOfWeekPipe] });
EndOfWeekPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfWeekPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfWeekPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [EndOfWeekPipe],
                    exports: [EndOfWeekPipe]
                }]
        }] });

class EndOfYearPipe {
    transform(date) {
        return endOfYear(date);
    }
}
EndOfYearPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfYearPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
EndOfYearPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfYearPipe, name: "dfnsEndOfYear" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfYearPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsEndOfYear' }]
        }] });
class EndOfYearPipeModule {
}
EndOfYearPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfYearPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
EndOfYearPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfYearPipeModule, declarations: [EndOfYearPipe], exports: [EndOfYearPipe] });
EndOfYearPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfYearPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfYearPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [EndOfYearPipe],
                    exports: [EndOfYearPipe]
                }]
        }] });

class EndOfYesterdayPipe {
    transform() {
        return endOfYesterday();
    }
}
EndOfYesterdayPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfYesterdayPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
EndOfYesterdayPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfYesterdayPipe, name: "dfnsEndOfYesterday" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfYesterdayPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsEndOfYesterday' }]
        }] });
class EndOfYesterdayPipeModule {
}
EndOfYesterdayPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfYesterdayPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
EndOfYesterdayPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfYesterdayPipeModule, declarations: [EndOfYesterdayPipe], exports: [EndOfYesterdayPipe] });
EndOfYesterdayPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfYesterdayPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: EndOfYesterdayPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [EndOfYesterdayPipe],
                    exports: [EndOfYesterdayPipe]
                }]
        }] });

class GetDatePipe {
    transform(date) {
        return getDate(date);
    }
}
GetDatePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDatePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
GetDatePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDatePipe, name: "dfnsGetDate" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDatePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsGetDate' }]
        }] });
class GetDatePipeModule {
}
GetDatePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDatePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
GetDatePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDatePipeModule, declarations: [GetDatePipe], exports: [GetDatePipe] });
GetDatePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDatePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDatePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [GetDatePipe],
                    exports: [GetDatePipe]
                }]
        }] });

class GetDayOfYearPipe {
    transform(date) {
        return getDayOfYear(date);
    }
}
GetDayOfYearPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDayOfYearPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
GetDayOfYearPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDayOfYearPipe, name: "dfnsGetDayOfYear" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDayOfYearPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsGetDayOfYear' }]
        }] });
class GetDayOfYearPipeModule {
}
GetDayOfYearPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDayOfYearPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
GetDayOfYearPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDayOfYearPipeModule, declarations: [GetDayOfYearPipe], exports: [GetDayOfYearPipe] });
GetDayOfYearPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDayOfYearPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDayOfYearPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [GetDayOfYearPipe],
                    exports: [GetDayOfYearPipe]
                }]
        }] });

class GetDayPipe {
    transform(date) {
        return getDay(date);
    }
}
GetDayPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDayPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
GetDayPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDayPipe, name: "dfnsGetDay" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDayPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsGetDay' }]
        }] });
class GetDayPipeModule {
}
GetDayPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDayPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
GetDayPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDayPipeModule, declarations: [GetDayPipe], exports: [GetDayPipe] });
GetDayPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDayPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDayPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [GetDayPipe],
                    exports: [GetDayPipe]
                }]
        }] });

class GetDaysInMonthPipe {
    transform(date) {
        return getDaysInMonth(date);
    }
}
GetDaysInMonthPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDaysInMonthPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
GetDaysInMonthPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDaysInMonthPipe, name: "dfnsGetDaysInMonth" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDaysInMonthPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsGetDaysInMonth' }]
        }] });
class GetDaysInMonthPipeModule {
}
GetDaysInMonthPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDaysInMonthPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
GetDaysInMonthPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDaysInMonthPipeModule, declarations: [GetDaysInMonthPipe], exports: [GetDaysInMonthPipe] });
GetDaysInMonthPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDaysInMonthPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDaysInMonthPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [GetDaysInMonthPipe],
                    exports: [GetDaysInMonthPipe]
                }]
        }] });

class GetDaysInYearPipe {
    transform(date) {
        return getDaysInYear(date);
    }
}
GetDaysInYearPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDaysInYearPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
GetDaysInYearPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDaysInYearPipe, name: "dfnsGetDaysInYear" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDaysInYearPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsGetDaysInYear' }]
        }] });
class GetDaysInYearPipeModule {
}
GetDaysInYearPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDaysInYearPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
GetDaysInYearPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDaysInYearPipeModule, declarations: [GetDaysInYearPipe], exports: [GetDaysInYearPipe] });
GetDaysInYearPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDaysInYearPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDaysInYearPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [GetDaysInYearPipe],
                    exports: [GetDaysInYearPipe]
                }]
        }] });

class GetHoursPipe {
    transform(date) {
        return getHours(date);
    }
}
GetHoursPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetHoursPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
GetHoursPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetHoursPipe, name: "dfnsGetHours" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetHoursPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsGetHours' }]
        }] });
class GetHoursPipeModule {
}
GetHoursPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetHoursPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
GetHoursPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetHoursPipeModule, declarations: [GetHoursPipe], exports: [GetHoursPipe] });
GetHoursPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetHoursPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetHoursPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [GetHoursPipe],
                    exports: [GetHoursPipe]
                }]
        }] });

class GetISODayPipe {
    transform(date) {
        return getISODay(date);
    }
}
GetISODayPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetISODayPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
GetISODayPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetISODayPipe, name: "dfnsGetISODay" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetISODayPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsGetISODay' }]
        }] });
class GetISODayPipeModule {
}
GetISODayPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetISODayPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
GetISODayPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetISODayPipeModule, declarations: [GetISODayPipe], exports: [GetISODayPipe] });
GetISODayPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetISODayPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetISODayPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [GetISODayPipe],
                    exports: [GetISODayPipe]
                }]
        }] });

class GetISOWeekPipe {
    transform(date) {
        return getISOWeek(date);
    }
}
GetISOWeekPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetISOWeekPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
GetISOWeekPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetISOWeekPipe, name: "dfnsGetISOWeek" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetISOWeekPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsGetISOWeek' }]
        }] });
class GetISOWeekPipeModule {
}
GetISOWeekPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetISOWeekPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
GetISOWeekPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetISOWeekPipeModule, declarations: [GetISOWeekPipe], exports: [GetISOWeekPipe] });
GetISOWeekPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetISOWeekPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetISOWeekPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [GetISOWeekPipe],
                    exports: [GetISOWeekPipe]
                }]
        }] });

class GetISOWeeksInYearPipe {
    transform(date) {
        return getISOWeeksInYear(date);
    }
}
GetISOWeeksInYearPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetISOWeeksInYearPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
GetISOWeeksInYearPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetISOWeeksInYearPipe, name: "dfnsGetISOWeeksInYear" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetISOWeeksInYearPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsGetISOWeeksInYear' }]
        }] });
class GetISOWeeksInYearPipeModule {
}
GetISOWeeksInYearPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetISOWeeksInYearPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
GetISOWeeksInYearPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetISOWeeksInYearPipeModule, declarations: [GetISOWeeksInYearPipe], exports: [GetISOWeeksInYearPipe] });
GetISOWeeksInYearPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetISOWeeksInYearPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetISOWeeksInYearPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [GetISOWeeksInYearPipe],
                    exports: [GetISOWeeksInYearPipe]
                }]
        }] });

class GetMillisecondsPipe {
    transform(date) {
        return getMilliseconds(date);
    }
}
GetMillisecondsPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetMillisecondsPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
GetMillisecondsPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetMillisecondsPipe, name: "dfnsGetMilliseconds" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetMillisecondsPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsGetMilliseconds' }]
        }] });
class GetMillisecondsPipeModule {
}
GetMillisecondsPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetMillisecondsPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
GetMillisecondsPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetMillisecondsPipeModule, declarations: [GetMillisecondsPipe], exports: [GetMillisecondsPipe] });
GetMillisecondsPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetMillisecondsPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetMillisecondsPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [GetMillisecondsPipe],
                    exports: [GetMillisecondsPipe]
                }]
        }] });

class GetMinutesPipe {
    transform(date) {
        return getMinutes(date);
    }
}
GetMinutesPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetMinutesPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
GetMinutesPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetMinutesPipe, name: "dfnsGetMinutes" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetMinutesPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsGetMinutes' }]
        }] });
class GetMinutesPipeModule {
}
GetMinutesPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetMinutesPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
GetMinutesPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetMinutesPipeModule, declarations: [GetMinutesPipe], exports: [GetMinutesPipe] });
GetMinutesPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetMinutesPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetMinutesPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [GetMinutesPipe],
                    exports: [GetMinutesPipe]
                }]
        }] });

class GetMonthPipe {
    transform(date) {
        return getMonth(date);
    }
}
GetMonthPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetMonthPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
GetMonthPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetMonthPipe, name: "dfnsGetMonth" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetMonthPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsGetMonth' }]
        }] });
class GetMonthPipeModule {
}
GetMonthPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetMonthPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
GetMonthPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetMonthPipeModule, declarations: [GetMonthPipe], exports: [GetMonthPipe] });
GetMonthPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetMonthPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetMonthPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [GetMonthPipe],
                    exports: [GetMonthPipe]
                }]
        }] });

class GetOverlappingDaysInIntervalsPipe {
    transform(intervalLeft, intervalRight) {
        return getOverlappingDaysInIntervals(intervalLeft, intervalRight);
    }
}
GetOverlappingDaysInIntervalsPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetOverlappingDaysInIntervalsPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
GetOverlappingDaysInIntervalsPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetOverlappingDaysInIntervalsPipe, name: "dfnsGetOverlappingDaysInIntervals" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetOverlappingDaysInIntervalsPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsGetOverlappingDaysInIntervals' }]
        }] });
class GetOverlappingDaysInIntervalsPipeModule {
}
GetOverlappingDaysInIntervalsPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetOverlappingDaysInIntervalsPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
GetOverlappingDaysInIntervalsPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetOverlappingDaysInIntervalsPipeModule, declarations: [GetOverlappingDaysInIntervalsPipe], exports: [GetOverlappingDaysInIntervalsPipe] });
GetOverlappingDaysInIntervalsPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetOverlappingDaysInIntervalsPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetOverlappingDaysInIntervalsPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [GetOverlappingDaysInIntervalsPipe],
                    exports: [GetOverlappingDaysInIntervalsPipe]
                }]
        }] });

class GetQuarterPipe {
    transform(date) {
        return getQuarter(date);
    }
}
GetQuarterPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetQuarterPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
GetQuarterPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetQuarterPipe, name: "dfnsGetQuarter" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetQuarterPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsGetQuarter' }]
        }] });
class GetQuarterPipeModule {
}
GetQuarterPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetQuarterPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
GetQuarterPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetQuarterPipeModule, declarations: [GetQuarterPipe], exports: [GetQuarterPipe] });
GetQuarterPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetQuarterPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetQuarterPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [GetQuarterPipe],
                    exports: [GetQuarterPipe]
                }]
        }] });

class GetSecondsPipe {
    transform(date) {
        return getSeconds(date);
    }
}
GetSecondsPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetSecondsPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
GetSecondsPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetSecondsPipe, name: "dfnsGetSeconds" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetSecondsPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsGetSeconds' }]
        }] });
class GetSecondsPipeModule {
}
GetSecondsPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetSecondsPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
GetSecondsPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetSecondsPipeModule, declarations: [GetSecondsPipe], exports: [GetSecondsPipe] });
GetSecondsPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetSecondsPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetSecondsPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [GetSecondsPipe],
                    exports: [GetSecondsPipe]
                }]
        }] });

class GetTimePipe {
    transform(date) {
        return getTime(date);
    }
}
GetTimePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetTimePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
GetTimePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetTimePipe, name: "dfnsGetTime" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetTimePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsGetTime' }]
        }] });
class GetTimePipeModule {
}
GetTimePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetTimePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
GetTimePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetTimePipeModule, declarations: [GetTimePipe], exports: [GetTimePipe] });
GetTimePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetTimePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetTimePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [GetTimePipe],
                    exports: [GetTimePipe]
                }]
        }] });

class GetYearPipe {
    transform(date) {
        return getYear(date);
    }
}
GetYearPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetYearPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
GetYearPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetYearPipe, name: "dfnsGetYear" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetYearPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsGetYear' }]
        }] });
class GetYearPipeModule {
}
GetYearPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetYearPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
GetYearPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetYearPipeModule, declarations: [GetYearPipe], exports: [GetYearPipe] });
GetYearPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetYearPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetYearPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [GetYearPipe],
                    exports: [GetYearPipe]
                }]
        }] });

class GetUnixTimePipe {
    transform(date) {
        return getUnixTime(date);
    }
}
GetUnixTimePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetUnixTimePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
GetUnixTimePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetUnixTimePipe, name: "dfnsGetUnixTime" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetUnixTimePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsGetUnixTime' }]
        }] });
class GetUnixTimePipeModule {
}
GetUnixTimePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetUnixTimePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
GetUnixTimePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetUnixTimePipeModule, declarations: [GetUnixTimePipe], exports: [GetUnixTimePipe] });
GetUnixTimePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetUnixTimePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetUnixTimePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [GetUnixTimePipe],
                    exports: [GetUnixTimePipe]
                }]
        }] });

class GetWeekPipe {
    constructor(config, cd) {
        this.config = config;
        this.cd = cd;
        this.localeChanged$ = this.config.localeChanged.subscribe(_ => this.cd.markForCheck());
    }
    ngOnDestroy() {
        this.localeChanged$.unsubscribe();
    }
    transform(date, options) {
        return getWeek(date, calculateLocale(options, this.config));
    }
}
GetWeekPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekPipe, deps: [{ token: DateFnsConfigurationService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Pipe });
GetWeekPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekPipe, name: "dfnsGetWeek", pure: false });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsGetWeek', pure: false }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }, { type: i0.ChangeDetectorRef }]; } });
class GetWeekPipeModule {
}
GetWeekPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
GetWeekPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekPipeModule, declarations: [GetWeekPipe], exports: [GetWeekPipe] });
GetWeekPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [GetWeekPipe],
                    exports: [GetWeekPipe]
                }]
        }] });

class GetWeekOfMonthPipe {
    constructor(config, cd) {
        this.config = config;
        this.cd = cd;
        this.localeChanged$ = this.config.localeChanged.subscribe(_ => this.cd.markForCheck());
    }
    ngOnDestroy() {
        this.localeChanged$.unsubscribe();
    }
    transform(date, options) {
        return getWeekOfMonth(date, calculateLocale(options, this.config));
    }
}
GetWeekOfMonthPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekOfMonthPipe, deps: [{ token: DateFnsConfigurationService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Pipe });
GetWeekOfMonthPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekOfMonthPipe, name: "dfnsGetWeekOfMonth", pure: false });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekOfMonthPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsGetWeekOfMonth', pure: false }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }, { type: i0.ChangeDetectorRef }]; } });
class GetWeekOfMonthPipeModule {
}
GetWeekOfMonthPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekOfMonthPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
GetWeekOfMonthPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekOfMonthPipeModule, declarations: [GetWeekOfMonthPipe], exports: [GetWeekOfMonthPipe] });
GetWeekOfMonthPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekOfMonthPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekOfMonthPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [GetWeekOfMonthPipe],
                    exports: [GetWeekOfMonthPipe]
                }]
        }] });

class GetWeeksInMonthPipe {
    constructor(config, cd) {
        this.config = config;
        this.cd = cd;
        this.localeChanged$ = this.config.localeChanged.subscribe(_ => this.cd.markForCheck());
    }
    ngOnDestroy() {
        this.localeChanged$.unsubscribe();
    }
    transform(date, options) {
        return getWeeksInMonth(date, calculateLocale(options, this.config));
    }
}
GetWeeksInMonthPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeeksInMonthPipe, deps: [{ token: DateFnsConfigurationService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Pipe });
GetWeeksInMonthPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeeksInMonthPipe, name: "dfnsGetWeeksInMonth", pure: false });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeeksInMonthPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsGetWeeksInMonth', pure: false }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }, { type: i0.ChangeDetectorRef }]; } });
class GetWeeksInMonthPipeModule {
}
GetWeeksInMonthPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeeksInMonthPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
GetWeeksInMonthPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeeksInMonthPipeModule, declarations: [GetWeeksInMonthPipe], exports: [GetWeeksInMonthPipe] });
GetWeeksInMonthPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeeksInMonthPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeeksInMonthPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [GetWeeksInMonthPipe],
                    exports: [GetWeeksInMonthPipe]
                }]
        }] });

class GetDecadePipe {
    transform(date) {
        return getDecade(date);
    }
}
GetDecadePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDecadePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
GetDecadePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDecadePipe, name: "dfnsGetDecade" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDecadePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsGetDecade' }]
        }] });
class GetDecadePipeModule {
}
GetDecadePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDecadePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
GetDecadePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDecadePipeModule, declarations: [GetDecadePipe], exports: [GetDecadePipe] });
GetDecadePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDecadePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetDecadePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [GetDecadePipe],
                    exports: [GetDecadePipe]
                }]
        }] });

class GetWeekYearPipe {
    constructor(config, cd) {
        this.config = config;
        this.cd = cd;
        this.localeChanged$ = this.config.localeChanged.subscribe(_ => this.cd.markForCheck());
    }
    ngOnDestroy() {
        this.localeChanged$.unsubscribe();
    }
    transform(date, options) {
        return getWeekYear(date, calculateLocale(options, this.config));
    }
}
GetWeekYearPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekYearPipe, deps: [{ token: DateFnsConfigurationService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Pipe });
GetWeekYearPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekYearPipe, name: "dfnsGetWeekYear", pure: false });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekYearPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsGetWeekYear', pure: false }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }, { type: i0.ChangeDetectorRef }]; } });
class GetWeekYearPipeModule {
}
GetWeekYearPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekYearPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
GetWeekYearPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekYearPipeModule, declarations: [GetWeekYearPipe], exports: [GetWeekYearPipe] });
GetWeekYearPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekYearPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekYearPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [GetWeekYearPipe],
                    exports: [GetWeekYearPipe]
                }]
        }] });

class LastDayOfISOWeekPipe {
    transform(date) {
        return lastDayOfISOWeek(date);
    }
}
LastDayOfISOWeekPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfISOWeekPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
LastDayOfISOWeekPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfISOWeekPipe, name: "dfnsLastDayOfISOWeek" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfISOWeekPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsLastDayOfISOWeek' }]
        }] });
class LastDayOfISOWeekPipeModule {
}
LastDayOfISOWeekPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfISOWeekPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
LastDayOfISOWeekPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfISOWeekPipeModule, declarations: [LastDayOfISOWeekPipe], exports: [LastDayOfISOWeekPipe] });
LastDayOfISOWeekPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfISOWeekPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfISOWeekPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LastDayOfISOWeekPipe],
                    exports: [LastDayOfISOWeekPipe]
                }]
        }] });

class LastDayOfISOWeekYearPipe {
    transform(date) {
        return lastDayOfISOWeekYear(date);
    }
}
LastDayOfISOWeekYearPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfISOWeekYearPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
LastDayOfISOWeekYearPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfISOWeekYearPipe, name: "dfnsLastDayOfISOWeekYear" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfISOWeekYearPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsLastDayOfISOWeekYear' }]
        }] });
class LastDayOfISOWeekYearPipeModule {
}
LastDayOfISOWeekYearPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfISOWeekYearPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
LastDayOfISOWeekYearPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfISOWeekYearPipeModule, declarations: [LastDayOfISOWeekYearPipe], exports: [LastDayOfISOWeekYearPipe] });
LastDayOfISOWeekYearPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfISOWeekYearPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfISOWeekYearPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LastDayOfISOWeekYearPipe],
                    exports: [LastDayOfISOWeekYearPipe]
                }]
        }] });

class LastDayOfMonthPipe {
    transform(date) {
        return lastDayOfMonth(date);
    }
}
LastDayOfMonthPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfMonthPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
LastDayOfMonthPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfMonthPipe, name: "dfnsLastDayOfMonth" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfMonthPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsLastDayOfMonth' }]
        }] });
class LastDayOfMonthPipeModule {
}
LastDayOfMonthPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfMonthPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
LastDayOfMonthPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfMonthPipeModule, declarations: [LastDayOfMonthPipe], exports: [LastDayOfMonthPipe] });
LastDayOfMonthPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfMonthPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfMonthPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LastDayOfMonthPipe],
                    exports: [LastDayOfMonthPipe]
                }]
        }] });

class LastDayOfQuarterPipe {
    transform(date) {
        return lastDayOfQuarter(date);
    }
}
LastDayOfQuarterPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfQuarterPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
LastDayOfQuarterPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfQuarterPipe, name: "dfnsLastDayOfQuarter" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfQuarterPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsLastDayOfQuarter' }]
        }] });
class LastDayOfQuarterPipeModule {
}
LastDayOfQuarterPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfQuarterPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
LastDayOfQuarterPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfQuarterPipeModule, declarations: [LastDayOfQuarterPipe], exports: [LastDayOfQuarterPipe] });
LastDayOfQuarterPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfQuarterPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfQuarterPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LastDayOfQuarterPipe],
                    exports: [LastDayOfQuarterPipe]
                }]
        }] });

class LastDayOfWeekPipe {
    constructor(config, cd) {
        this.config = config;
        this.cd = cd;
        this.localeChanged$ = this.config.localeChanged.subscribe(_ => this.cd.markForCheck());
    }
    ngOnDestroy() {
        this.localeChanged$.unsubscribe();
    }
    transform(date, options) {
        return lastDayOfWeek(date, calculateLocale(options, this.config));
    }
}
LastDayOfWeekPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfWeekPipe, deps: [{ token: DateFnsConfigurationService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Pipe });
LastDayOfWeekPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfWeekPipe, name: "dfnsLastDayOfWeek", pure: false });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfWeekPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsLastDayOfWeek', pure: false }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }, { type: i0.ChangeDetectorRef }]; } });
class LastDayOfWeekPipeModule {
}
LastDayOfWeekPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfWeekPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
LastDayOfWeekPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfWeekPipeModule, declarations: [LastDayOfWeekPipe], exports: [LastDayOfWeekPipe] });
LastDayOfWeekPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfWeekPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfWeekPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LastDayOfWeekPipe],
                    exports: [LastDayOfWeekPipe]
                }]
        }] });

class LastDayOfYearPipe {
    transform(date) {
        return lastDayOfYear(date);
    }
}
LastDayOfYearPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfYearPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
LastDayOfYearPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfYearPipe, name: "dfnsLastDayOfYear" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfYearPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsLastDayOfYear' }]
        }] });
class LastDayOfYearPipeModule {
}
LastDayOfYearPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfYearPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
LastDayOfYearPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfYearPipeModule, declarations: [LastDayOfYearPipe], exports: [LastDayOfYearPipe] });
LastDayOfYearPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfYearPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfYearPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LastDayOfYearPipe],
                    exports: [LastDayOfYearPipe]
                }]
        }] });

class LastDayOfDecadePipe {
    transform(date) {
        return lastDayOfDecade(date);
    }
}
LastDayOfDecadePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfDecadePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
LastDayOfDecadePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfDecadePipe, name: "dfnsLastDayOfDecade" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfDecadePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsLastDayOfDecade' }]
        }] });
class LastDayOfDecadePipeModule {
}
LastDayOfDecadePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfDecadePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
LastDayOfDecadePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfDecadePipeModule, declarations: [LastDayOfDecadePipe], exports: [LastDayOfDecadePipe] });
LastDayOfDecadePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfDecadePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfDecadePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LastDayOfDecadePipe],
                    exports: [LastDayOfDecadePipe]
                }]
        }] });

class MaxPipe {
    transform(dates) {
        return max(dates);
    }
}
MaxPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: MaxPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
MaxPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: MaxPipe, name: "dfnsMax" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: MaxPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsMax' }]
        }] });
class MaxPipeModule {
}
MaxPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: MaxPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
MaxPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: MaxPipeModule, declarations: [MaxPipe], exports: [MaxPipe] });
MaxPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: MaxPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: MaxPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [MaxPipe],
                    exports: [MaxPipe]
                }]
        }] });

class MinPipe {
    transform(dates) {
        return min(dates);
    }
}
MinPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: MinPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
MinPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: MinPipe, name: "dfnsMin" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: MinPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsMin' }]
        }] });
class MinPipeModule {
}
MinPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: MinPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
MinPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: MinPipeModule, declarations: [MinPipe], exports: [MinPipe] });
MinPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: MinPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: MinPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [MinPipe],
                    exports: [MinPipe]
                }]
        }] });

class StartOfDayPipe {
    transform(date) {
        return startOfDay(date);
    }
}
StartOfDayPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfDayPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
StartOfDayPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfDayPipe, name: "dfnsStartOfDay" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfDayPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsStartOfDay' }]
        }] });
class StartOfDayPipeModule {
}
StartOfDayPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfDayPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
StartOfDayPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfDayPipeModule, declarations: [StartOfDayPipe], exports: [StartOfDayPipe] });
StartOfDayPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfDayPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfDayPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [StartOfDayPipe],
                    exports: [StartOfDayPipe]
                }]
        }] });

class StartOfHourPipe {
    transform(date) {
        return startOfHour(date);
    }
}
StartOfHourPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfHourPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
StartOfHourPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfHourPipe, name: "dfnsStartOfHour" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfHourPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsStartOfHour' }]
        }] });
class StartOfHourPipeModule {
}
StartOfHourPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfHourPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
StartOfHourPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfHourPipeModule, declarations: [StartOfHourPipe], exports: [StartOfHourPipe] });
StartOfHourPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfHourPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfHourPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [StartOfHourPipe],
                    exports: [StartOfHourPipe]
                }]
        }] });

class StartOfISOWeekPipe {
    transform(date) {
        return startOfISOWeek(date);
    }
}
StartOfISOWeekPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfISOWeekPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
StartOfISOWeekPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfISOWeekPipe, name: "dfnsStartOfISOWeek" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfISOWeekPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsStartOfISOWeek' }]
        }] });
class StartOfISOWeekPipeModule {
}
StartOfISOWeekPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfISOWeekPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
StartOfISOWeekPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfISOWeekPipeModule, declarations: [StartOfISOWeekPipe], exports: [StartOfISOWeekPipe] });
StartOfISOWeekPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfISOWeekPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfISOWeekPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [StartOfISOWeekPipe],
                    exports: [StartOfISOWeekPipe]
                }]
        }] });

class StartOfISOWeekYearPipe {
    transform(date) {
        return startOfISOWeekYear(date);
    }
}
StartOfISOWeekYearPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfISOWeekYearPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
StartOfISOWeekYearPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfISOWeekYearPipe, name: "dfnsStartOfISOWeekYear" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfISOWeekYearPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsStartOfISOWeekYear' }]
        }] });
class StartOfISOWeekYearPipeModule {
}
StartOfISOWeekYearPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfISOWeekYearPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
StartOfISOWeekYearPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfISOWeekYearPipeModule, declarations: [StartOfISOWeekYearPipe], exports: [StartOfISOWeekYearPipe] });
StartOfISOWeekYearPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfISOWeekYearPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfISOWeekYearPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [StartOfISOWeekYearPipe],
                    exports: [StartOfISOWeekYearPipe]
                }]
        }] });

class StartOfMinutePipe {
    transform(date) {
        return startOfMinute(date);
    }
}
StartOfMinutePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfMinutePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
StartOfMinutePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfMinutePipe, name: "dfnsStartOfMinute" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfMinutePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsStartOfMinute' }]
        }] });
class StartOfMinutePipeModule {
}
StartOfMinutePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfMinutePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
StartOfMinutePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfMinutePipeModule, declarations: [StartOfMinutePipe], exports: [StartOfMinutePipe] });
StartOfMinutePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfMinutePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfMinutePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [StartOfMinutePipe],
                    exports: [StartOfMinutePipe]
                }]
        }] });

class StartOfMonthPipe {
    transform(date) {
        return startOfMonth(date);
    }
}
StartOfMonthPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfMonthPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
StartOfMonthPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfMonthPipe, name: "dfnsStartOfMonth" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfMonthPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsStartOfMonth' }]
        }] });
class StartOfMonthPipeModule {
}
StartOfMonthPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfMonthPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
StartOfMonthPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfMonthPipeModule, declarations: [StartOfMonthPipe], exports: [StartOfMonthPipe] });
StartOfMonthPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfMonthPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfMonthPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [StartOfMonthPipe],
                    exports: [StartOfMonthPipe]
                }]
        }] });

class StartOfQuarterPipe {
    transform(date) {
        return startOfQuarter(date);
    }
}
StartOfQuarterPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfQuarterPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
StartOfQuarterPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfQuarterPipe, name: "dfnsStartOfQuarter" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfQuarterPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsStartOfQuarter' }]
        }] });
class StartOfQuarterPipeModule {
}
StartOfQuarterPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfQuarterPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
StartOfQuarterPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfQuarterPipeModule, declarations: [StartOfQuarterPipe], exports: [StartOfQuarterPipe] });
StartOfQuarterPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfQuarterPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfQuarterPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [StartOfQuarterPipe],
                    exports: [StartOfQuarterPipe]
                }]
        }] });

class StartOfSecondPipe {
    transform(date) {
        return startOfSecond(date);
    }
}
StartOfSecondPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfSecondPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
StartOfSecondPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfSecondPipe, name: "dfnsStartOfSecond" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfSecondPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsStartOfSecond' }]
        }] });
class StartOfSecondPipeModule {
}
StartOfSecondPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfSecondPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
StartOfSecondPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfSecondPipeModule, declarations: [StartOfSecondPipe], exports: [StartOfSecondPipe] });
StartOfSecondPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfSecondPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfSecondPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [StartOfSecondPipe],
                    exports: [StartOfSecondPipe]
                }]
        }] });

class StartOfTodayPipe {
    transform() {
        return startOfToday();
    }
}
StartOfTodayPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfTodayPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
StartOfTodayPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfTodayPipe, name: "dfnsStartOfToday" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfTodayPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsStartOfToday' }]
        }] });
class StartOfTodayPipeModule {
}
StartOfTodayPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfTodayPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
StartOfTodayPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfTodayPipeModule, declarations: [StartOfTodayPipe], exports: [StartOfTodayPipe] });
StartOfTodayPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfTodayPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfTodayPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [StartOfTodayPipe],
                    exports: [StartOfTodayPipe]
                }]
        }] });

class StartOfTomorrowPipe {
    transform() {
        return startOfTomorrow();
    }
}
StartOfTomorrowPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfTomorrowPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
StartOfTomorrowPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfTomorrowPipe, name: "dfnsStartOfTomorrow" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfTomorrowPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsStartOfTomorrow' }]
        }] });
class StartOfTomorrowPipeModule {
}
StartOfTomorrowPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfTomorrowPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
StartOfTomorrowPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfTomorrowPipeModule, declarations: [StartOfTomorrowPipe], exports: [StartOfTomorrowPipe] });
StartOfTomorrowPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfTomorrowPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfTomorrowPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [StartOfTomorrowPipe],
                    exports: [StartOfTomorrowPipe]
                }]
        }] });

class StartOfWeekPipe {
    constructor(config, cd) {
        this.config = config;
        this.cd = cd;
        this.localeChanged$ = this.config.localeChanged.subscribe(_ => this.cd.markForCheck());
    }
    ngOnDestroy() {
        this.localeChanged$.unsubscribe();
    }
    transform(date, options) {
        return startOfWeek(date, calculateLocale(options, this.config));
    }
}
StartOfWeekPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekPipe, deps: [{ token: DateFnsConfigurationService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Pipe });
StartOfWeekPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekPipe, name: "dfnsStartOfWeek", pure: false });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsStartOfWeek', pure: false }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }, { type: i0.ChangeDetectorRef }]; } });
class StartOfWeekPipeModule {
}
StartOfWeekPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
StartOfWeekPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekPipeModule, declarations: [StartOfWeekPipe], exports: [StartOfWeekPipe] });
StartOfWeekPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [StartOfWeekPipe],
                    exports: [StartOfWeekPipe]
                }]
        }] });

class StartOfYearPipe {
    transform(date) {
        return startOfYear(date);
    }
}
StartOfYearPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfYearPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
StartOfYearPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfYearPipe, name: "dfnsStartOfYear" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfYearPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsStartOfYear' }]
        }] });
class StartOfYearPipeModule {
}
StartOfYearPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfYearPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
StartOfYearPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfYearPipeModule, declarations: [StartOfYearPipe], exports: [StartOfYearPipe] });
StartOfYearPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfYearPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfYearPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [StartOfYearPipe],
                    exports: [StartOfYearPipe]
                }]
        }] });

class StartOfYesterdayPipe {
    transform() {
        return startOfYesterday();
    }
}
StartOfYesterdayPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfYesterdayPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
StartOfYesterdayPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfYesterdayPipe, name: "dfnsStartOfYesterday" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfYesterdayPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsStartOfYesterday' }]
        }] });
class StartOfYesterdayPipeModule {
}
StartOfYesterdayPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfYesterdayPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
StartOfYesterdayPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfYesterdayPipeModule, declarations: [StartOfYesterdayPipe], exports: [StartOfYesterdayPipe] });
StartOfYesterdayPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfYesterdayPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfYesterdayPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [StartOfYesterdayPipe],
                    exports: [StartOfYesterdayPipe]
                }]
        }] });

class StartOfDecadePipe {
    transform(date) {
        return startOfDecade(date);
    }
}
StartOfDecadePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfDecadePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
StartOfDecadePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfDecadePipe, name: "dfnsStartOfDecade" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfDecadePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsStartOfDecade' }]
        }] });
class StartOfDecadePipeModule {
}
StartOfDecadePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfDecadePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
StartOfDecadePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfDecadePipeModule, declarations: [StartOfDecadePipe], exports: [StartOfDecadePipe] });
StartOfDecadePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfDecadePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfDecadePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [StartOfDecadePipe],
                    exports: [StartOfDecadePipe]
                }]
        }] });

class StartOfWeekYearPipe {
    constructor(config, cd) {
        this.config = config;
        this.cd = cd;
        this.localeChanged$ = this.config.localeChanged.subscribe(_ => this.cd.markForCheck());
    }
    ngOnDestroy() {
        this.localeChanged$.unsubscribe();
    }
    transform(date, options) {
        return startOfWeekYear(date, calculateLocale(options, this.config));
    }
}
StartOfWeekYearPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekYearPipe, deps: [{ token: DateFnsConfigurationService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Pipe });
StartOfWeekYearPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekYearPipe, name: "dfnsStartOfWeekYear", pure: false });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekYearPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsStartOfWeekYear', pure: false }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }, { type: i0.ChangeDetectorRef }]; } });
class StartOfWeekYearPipeModule {
}
StartOfWeekYearPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekYearPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
StartOfWeekYearPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekYearPipeModule, declarations: [StartOfWeekYearPipe], exports: [StartOfWeekYearPipe] });
StartOfWeekYearPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekYearPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekYearPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [StartOfWeekYearPipe],
                    exports: [StartOfWeekYearPipe]
                }]
        }] });

class SubDaysPipe {
    transform(date, amount) {
        return subDays(date, amount);
    }
}
SubDaysPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubDaysPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
SubDaysPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubDaysPipe, name: "dfnsSubDays" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubDaysPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsSubDays' }]
        }] });
class SubDaysPipeModule {
}
SubDaysPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubDaysPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
SubDaysPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubDaysPipeModule, declarations: [SubDaysPipe], exports: [SubDaysPipe] });
SubDaysPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubDaysPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubDaysPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [SubDaysPipe],
                    exports: [SubDaysPipe]
                }]
        }] });

class SubHoursPipe {
    transform(date, amount) {
        return subHours(date, amount);
    }
}
SubHoursPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubHoursPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
SubHoursPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubHoursPipe, name: "dfnsSubHours" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubHoursPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsSubHours' }]
        }] });
class SubHoursPipeModule {
}
SubHoursPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubHoursPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
SubHoursPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubHoursPipeModule, declarations: [SubHoursPipe], exports: [SubHoursPipe] });
SubHoursPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubHoursPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubHoursPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [SubHoursPipe],
                    exports: [SubHoursPipe]
                }]
        }] });

class SubISOWeekYearsPipe {
    transform(date, amount) {
        return subISOWeekYears(date, amount);
    }
}
SubISOWeekYearsPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubISOWeekYearsPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
SubISOWeekYearsPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubISOWeekYearsPipe, name: "dfnsSubISOWeekYears" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubISOWeekYearsPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsSubISOWeekYears' }]
        }] });
class SubISOWeekYearsPipeModule {
}
SubISOWeekYearsPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubISOWeekYearsPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
SubISOWeekYearsPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubISOWeekYearsPipeModule, declarations: [SubISOWeekYearsPipe], exports: [SubISOWeekYearsPipe] });
SubISOWeekYearsPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubISOWeekYearsPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubISOWeekYearsPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [SubISOWeekYearsPipe],
                    exports: [SubISOWeekYearsPipe]
                }]
        }] });

class SubMillisecondsPipe {
    transform(date, amount) {
        return subMilliseconds(date, amount);
    }
}
SubMillisecondsPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubMillisecondsPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
SubMillisecondsPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubMillisecondsPipe, name: "dfnsSubMilliseconds" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubMillisecondsPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsSubMilliseconds' }]
        }] });
class SubMillisecondsPipeModule {
}
SubMillisecondsPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubMillisecondsPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
SubMillisecondsPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubMillisecondsPipeModule, declarations: [SubMillisecondsPipe], exports: [SubMillisecondsPipe] });
SubMillisecondsPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubMillisecondsPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubMillisecondsPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [SubMillisecondsPipe],
                    exports: [SubMillisecondsPipe]
                }]
        }] });

class SubMinutesPipe {
    transform(date, amount) {
        return subMinutes(date, amount);
    }
}
SubMinutesPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubMinutesPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
SubMinutesPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubMinutesPipe, name: "dfnsSubMinutes" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubMinutesPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsSubMinutes' }]
        }] });
class SubMinutesPipeModule {
}
SubMinutesPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubMinutesPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
SubMinutesPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubMinutesPipeModule, declarations: [SubMinutesPipe], exports: [SubMinutesPipe] });
SubMinutesPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubMinutesPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubMinutesPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [SubMinutesPipe],
                    exports: [SubMinutesPipe]
                }]
        }] });

class SubMonthsPipe {
    transform(date, amount) {
        return subMonths(date, amount);
    }
}
SubMonthsPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubMonthsPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
SubMonthsPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubMonthsPipe, name: "dfnsSubMonths" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubMonthsPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsSubMonths' }]
        }] });
class SubMonthsPipeModule {
}
SubMonthsPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubMonthsPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
SubMonthsPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubMonthsPipeModule, declarations: [SubMonthsPipe], exports: [SubMonthsPipe] });
SubMonthsPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubMonthsPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubMonthsPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [SubMonthsPipe],
                    exports: [SubMonthsPipe]
                }]
        }] });

class SubQuartersPipe {
    transform(date, amount) {
        return subQuarters(date, amount);
    }
}
SubQuartersPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubQuartersPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
SubQuartersPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubQuartersPipe, name: "dfnsSubQuarters" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubQuartersPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsSubQuarters' }]
        }] });
class SubQuartersPipeModule {
}
SubQuartersPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubQuartersPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
SubQuartersPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubQuartersPipeModule, declarations: [SubQuartersPipe], exports: [SubQuartersPipe] });
SubQuartersPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubQuartersPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubQuartersPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [SubQuartersPipe],
                    exports: [SubQuartersPipe]
                }]
        }] });

class SubSecondsPipe {
    transform(date, amount) {
        return subSeconds(date, amount);
    }
}
SubSecondsPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubSecondsPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
SubSecondsPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubSecondsPipe, name: "dfnsSubSeconds" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubSecondsPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsSubSeconds' }]
        }] });
class SubSecondsPipeModule {
}
SubSecondsPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubSecondsPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
SubSecondsPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubSecondsPipeModule, declarations: [SubSecondsPipe], exports: [SubSecondsPipe] });
SubSecondsPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubSecondsPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubSecondsPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [SubSecondsPipe],
                    exports: [SubSecondsPipe]
                }]
        }] });

class SubWeeksPipe {
    transform(date, amount) {
        return subWeeks(date, amount);
    }
}
SubWeeksPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubWeeksPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
SubWeeksPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubWeeksPipe, name: "dfnsSubWeeks" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubWeeksPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsSubWeeks' }]
        }] });
class SubWeeksPipeModule {
}
SubWeeksPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubWeeksPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
SubWeeksPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubWeeksPipeModule, declarations: [SubWeeksPipe], exports: [SubWeeksPipe] });
SubWeeksPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubWeeksPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubWeeksPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [SubWeeksPipe],
                    exports: [SubWeeksPipe]
                }]
        }] });

class SubYearsPipe {
    transform(date, amount) {
        return subYears(date, amount);
    }
}
SubYearsPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubYearsPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
SubYearsPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubYearsPipe, name: "dfnsSubYears" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubYearsPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsSubYears' }]
        }] });
class SubYearsPipeModule {
}
SubYearsPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubYearsPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
SubYearsPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubYearsPipeModule, declarations: [SubYearsPipe], exports: [SubYearsPipe] });
SubYearsPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubYearsPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubYearsPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [SubYearsPipe],
                    exports: [SubYearsPipe]
                }]
        }] });

class IsAfterPipe {
    transform(date, dateToCompare) {
        return isAfter(date, dateToCompare);
    }
}
IsAfterPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsAfterPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsAfterPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsAfterPipe, name: "dfnsIsAfter" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsAfterPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsIsAfter' }]
        }] });
class IsAfterPipeModule {
}
IsAfterPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsAfterPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsAfterPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsAfterPipeModule, declarations: [IsAfterPipe], exports: [IsAfterPipe] });
IsAfterPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsAfterPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsAfterPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsAfterPipe],
                    exports: [IsAfterPipe]
                }]
        }] });

class IsBeforePipe {
    transform(date, dateToCompare) {
        return isBefore(date, dateToCompare);
    }
}
IsBeforePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsBeforePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsBeforePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsBeforePipe, name: "dfnsIsBefore" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsBeforePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsIsBefore' }]
        }] });
class IsBeforePipeModule {
}
IsBeforePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsBeforePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsBeforePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsBeforePipeModule, declarations: [IsBeforePipe], exports: [IsBeforePipe] });
IsBeforePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsBeforePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsBeforePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsBeforePipe],
                    exports: [IsBeforePipe]
                }]
        }] });

class IsDatePipe {
    transform(date) {
        return isDate(date);
    }
}
IsDatePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsDatePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsDatePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsDatePipe, name: "dfnsIsDate" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsDatePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsIsDate' }]
        }] });
class IsDatePipeModule {
}
IsDatePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsDatePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsDatePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsDatePipeModule, declarations: [IsDatePipe], exports: [IsDatePipe] });
IsDatePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsDatePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsDatePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsDatePipe],
                    exports: [IsDatePipe]
                }]
        }] });

class IsEqualPipe {
    transform(dateLeft, dateRight) {
        return isEqual(dateLeft, dateRight);
    }
}
IsEqualPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsEqualPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsEqualPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsEqualPipe, name: "dfnsIsEqual" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsEqualPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsIsEqual' }]
        }] });
class IsEqualPipeModule {
}
IsEqualPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsEqualPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsEqualPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsEqualPipeModule, declarations: [IsEqualPipe], exports: [IsEqualPipe] });
IsEqualPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsEqualPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsEqualPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsEqualPipe],
                    exports: [IsEqualPipe]
                }]
        }] });

class IsFuturePipe {
    transform(date) {
        return isFuture(date);
    }
}
IsFuturePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsFuturePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsFuturePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsFuturePipe, name: "dfnsIsFuture" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsFuturePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsIsFuture' }]
        }] });
class IsFuturePipeModule {
}
IsFuturePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsFuturePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsFuturePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsFuturePipeModule, declarations: [IsFuturePipe], exports: [IsFuturePipe] });
IsFuturePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsFuturePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsFuturePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsFuturePipe],
                    exports: [IsFuturePipe]
                }]
        }] });

class IsPastPipe {
    transform(date) {
        return isPast(date);
    }
}
IsPastPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsPastPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsPastPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsPastPipe, name: "dfnsIsPast" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsPastPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsIsPast' }]
        }] });
class IsPastPipeModule {
}
IsPastPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsPastPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsPastPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsPastPipeModule, declarations: [IsPastPipe], exports: [IsPastPipe] });
IsPastPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsPastPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsPastPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsPastPipe],
                    exports: [IsPastPipe]
                }]
        }] });

class IsValidPipe {
    transform(date) {
        return isValid(date);
    }
}
IsValidPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsValidPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsValidPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsValidPipe, name: "dfnsIsValid" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsValidPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsIsValid' }]
        }] });
class IsValidPipeModule {
}
IsValidPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsValidPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsValidPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsValidPipeModule, declarations: [IsValidPipe], exports: [IsValidPipe] });
IsValidPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsValidPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsValidPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsValidPipe],
                    exports: [IsValidPipe]
                }]
        }] });

class IsTodayPipe {
    transform(date) {
        return isToday(date);
    }
}
IsTodayPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsTodayPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsTodayPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsTodayPipe, name: "dfnsIsToday" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsTodayPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsIsToday' }]
        }] });
class IsTodayPipeModule {
}
IsTodayPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsTodayPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsTodayPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsTodayPipeModule, declarations: [IsTodayPipe], exports: [IsTodayPipe] });
IsTodayPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsTodayPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsTodayPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsTodayPipe],
                    exports: [IsTodayPipe]
                }]
        }] });

class IsWeekendPipe {
    transform(date) {
        return isWeekend(date);
    }
}
IsWeekendPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsWeekendPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsWeekendPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsWeekendPipe, name: "dfnsIsWeekend" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsWeekendPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsIsWeekend' }]
        }] });
class IsWeekendPipeModule {
}
IsWeekendPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsWeekendPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsWeekendPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsWeekendPipeModule, declarations: [IsWeekendPipe], exports: [IsWeekendPipe] });
IsWeekendPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsWeekendPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsWeekendPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsWeekendPipe],
                    exports: [IsWeekendPipe]
                }]
        }] });

class IsSameMonthPipe {
    transform(dateLeft, dateRight) {
        return isSameMonth(dateLeft, dateRight);
    }
}
IsSameMonthPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameMonthPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsSameMonthPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameMonthPipe, name: "dfnsIsSameMonth" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameMonthPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsIsSameMonth' }]
        }] });
class IsSameMonthPipeModule {
}
IsSameMonthPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameMonthPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsSameMonthPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameMonthPipeModule, declarations: [IsSameMonthPipe], exports: [IsSameMonthPipe] });
IsSameMonthPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameMonthPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameMonthPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsSameMonthPipe],
                    exports: [IsSameMonthPipe]
                }]
        }] });

class ParsePipe {
    constructor(config, cd) {
        this.config = config;
        this.cd = cd;
        this.localeChanged$ = this.config.localeChanged.subscribe(_ => this.cd.markForCheck());
    }
    ngOnDestroy() {
        this.localeChanged$.unsubscribe();
    }
    transform(dateString, formatString, backupDate, options) {
        return parse(dateString, formatString, backupDate, calculateLocale(options, this.config));
    }
}
ParsePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ParsePipe, deps: [{ token: DateFnsConfigurationService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Pipe });
ParsePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ParsePipe, name: "dfnsParse", pure: false });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ParsePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsParse', pure: false }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }, { type: i0.ChangeDetectorRef }]; } });
class ParsePipeModule {
}
ParsePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ParsePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ParsePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ParsePipeModule, declarations: [ParsePipe], exports: [ParsePipe] });
ParsePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ParsePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ParsePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [ParsePipe],
                    exports: [ParsePipe]
                }]
        }] });

const formats = {
    x1: 'eeeee',
    x2: 'eeeeee',
    x3: 'eee',
    full: 'eeee'
};
class WeekdayNamePipe {
    constructor(config, cd) {
        this.config = config;
        this.cd = cd;
        this.localeChanged$ = this.config.localeChanged.subscribe(_ => this.cd.markForCheck());
    }
    ngOnDestroy() {
        this.localeChanged$.unsubscribe();
    }
    transform(day, view = 'full', options) {
        const locale = calculateLocale(options, this.config);
        const now = new Date();
        const week = eachDayOfInterval({
            start: startOfWeek(now, locale),
            end: endOfWeek(now, locale)
        });
        return format(week[day], formats[view], locale);
    }
}
WeekdayNamePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: WeekdayNamePipe, deps: [{ token: DateFnsConfigurationService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Pipe });
WeekdayNamePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: WeekdayNamePipe, name: "dfnsWeekdayName", pure: false });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: WeekdayNamePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsWeekdayName', pure: false }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }, { type: i0.ChangeDetectorRef }]; } });
class WeekdayNamePipeModule {
}
WeekdayNamePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: WeekdayNamePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
WeekdayNamePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: WeekdayNamePipeModule, declarations: [WeekdayNamePipe], exports: [WeekdayNamePipe] });
WeekdayNamePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: WeekdayNamePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: WeekdayNamePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [WeekdayNamePipe],
                    exports: [WeekdayNamePipe]
                }]
        }] });

class IsSameYearPipe {
    transform(dateLeft, dateRight) {
        return isSameYear(dateLeft, dateRight);
    }
}
IsSameYearPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameYearPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsSameYearPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameYearPipe, name: "dfnsIsSameYear" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameYearPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsIsSameYear' }]
        }] });
class IsSameYearPipeModule {
}
IsSameYearPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameYearPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsSameYearPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameYearPipeModule, declarations: [IsSameYearPipe], exports: [IsSameYearPipe] });
IsSameYearPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameYearPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameYearPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsSameYearPipe],
                    exports: [IsSameYearPipe]
                }]
        }] });

class DifferenceInCalendarQuartersPipe {
    transform(dateLeft, dateRight) {
        return differenceInCalendarQuarters(dateLeft, dateRight);
    }
}
DifferenceInCalendarQuartersPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarQuartersPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
DifferenceInCalendarQuartersPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarQuartersPipe, name: "dfnsDifferenceInCalendarQuarters" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarQuartersPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsDifferenceInCalendarQuarters' }]
        }] });
class DifferenceInCalendarQuartersPipeModule {
}
DifferenceInCalendarQuartersPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarQuartersPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DifferenceInCalendarQuartersPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarQuartersPipeModule, declarations: [DifferenceInCalendarQuartersPipe], exports: [DifferenceInCalendarQuartersPipe] });
DifferenceInCalendarQuartersPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarQuartersPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarQuartersPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [DifferenceInCalendarQuartersPipe],
                    exports: [DifferenceInCalendarQuartersPipe]
                }]
        }] });

class GetISOWeekYearPipe {
    transform(date) {
        return getISOWeekYear(date);
    }
}
GetISOWeekYearPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetISOWeekYearPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
GetISOWeekYearPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetISOWeekYearPipe, name: "dfnsGetISOWeekYear" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetISOWeekYearPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsGetISOWeekYear' }]
        }] });
class GetISOWeekYearPipeModule {
}
GetISOWeekYearPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetISOWeekYearPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
GetISOWeekYearPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetISOWeekYearPipeModule, declarations: [GetISOWeekYearPipe], exports: [GetISOWeekYearPipe] });
GetISOWeekYearPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetISOWeekYearPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetISOWeekYearPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [GetISOWeekYearPipe],
                    exports: [GetISOWeekYearPipe]
                }]
        }] });

class FormatPurePipe {
    constructor(config) {
        this.config = config;
    }
    transform(date, dateFormat, options) {
        if (isValidDate(date)) {
            return format(date, dateFormat, calculateLocale(options, this.config));
        }
        return '';
    }
}
FormatPurePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatPurePipe, deps: [{ token: DateFnsConfigurationService }], target: i0.ɵɵFactoryTarget.Pipe });
FormatPurePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatPurePipe, name: "dfnsFormatPure" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatPurePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsFormatPure' }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }]; } });
class FormatPurePipeModule {
}
FormatPurePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatPurePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
FormatPurePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatPurePipeModule, declarations: [FormatPurePipe], exports: [FormatPurePipe] });
FormatPurePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatPurePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatPurePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [FormatPurePipe],
                    exports: [FormatPurePipe]
                }]
        }] });

class FormatDistancePurePipe {
    constructor(config) {
        this.config = config;
    }
    transform(date, dateToCompare, options) {
        if (isValidDate(date) && isValidDate(dateToCompare)) {
            return formatDistance(date, dateToCompare, calculateLocale(options, this.config));
        }
        return '';
    }
}
FormatDistancePurePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistancePurePipe, deps: [{ token: DateFnsConfigurationService }], target: i0.ɵɵFactoryTarget.Pipe });
FormatDistancePurePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistancePurePipe, name: "dfnsFormatDistancePure" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistancePurePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsFormatDistancePure' }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }]; } });
class FormatDistancePurePipeModule {
}
FormatDistancePurePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistancePurePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
FormatDistancePurePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistancePurePipeModule, declarations: [FormatDistancePurePipe], exports: [FormatDistancePurePipe] });
FormatDistancePurePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistancePurePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistancePurePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [FormatDistancePurePipe],
                    exports: [FormatDistancePurePipe]
                }]
        }] });

class FormatDistanceStrictPurePipe {
    constructor(config) {
        this.config = config;
    }
    transform(date, dateToCompare, options) {
        if (isValidDate(date) && isValidDate(dateToCompare)) {
            return formatDistanceStrict(date, dateToCompare, calculateLocale(options, this.config));
        }
        return '';
    }
}
FormatDistanceStrictPurePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceStrictPurePipe, deps: [{ token: DateFnsConfigurationService }], target: i0.ɵɵFactoryTarget.Pipe });
FormatDistanceStrictPurePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceStrictPurePipe, name: "dfnsFormatDistanceStrictPure" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceStrictPurePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsFormatDistanceStrictPure' }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }]; } });
class FormatDistanceStrictPurePipeModule {
}
FormatDistanceStrictPurePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceStrictPurePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
FormatDistanceStrictPurePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceStrictPurePipeModule, declarations: [FormatDistanceStrictPurePipe], exports: [FormatDistanceStrictPurePipe] });
FormatDistanceStrictPurePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceStrictPurePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceStrictPurePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [FormatDistanceStrictPurePipe],
                    exports: [FormatDistanceStrictPurePipe]
                }]
        }] });

class FormatDistanceToNowPurePipe {
    constructor(config) {
        this.config = config;
    }
    transform(date, options) {
        if (isValidDate(date)) {
            return formatDistanceToNow(date, calculateLocale(options, this.config));
        }
        return '';
    }
}
FormatDistanceToNowPurePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowPurePipe, deps: [{ token: DateFnsConfigurationService }], target: i0.ɵɵFactoryTarget.Pipe });
FormatDistanceToNowPurePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowPurePipe, name: "dfnsFormatDistanceToNowPure" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowPurePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsFormatDistanceToNowPure' }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }]; } });
class FormatDistanceToNowPurePipeModule {
}
FormatDistanceToNowPurePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowPurePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
FormatDistanceToNowPurePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowPurePipeModule, declarations: [FormatDistanceToNowPurePipe], exports: [FormatDistanceToNowPurePipe] });
FormatDistanceToNowPurePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowPurePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowPurePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [FormatDistanceToNowPurePipe],
                    exports: [FormatDistanceToNowPurePipe]
                }]
        }] });

class GetWeekPurePipe {
    constructor(config) {
        this.config = config;
    }
    transform(date, options) {
        return getWeek(date, calculateLocale(options, this.config));
    }
}
GetWeekPurePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekPurePipe, deps: [{ token: DateFnsConfigurationService }], target: i0.ɵɵFactoryTarget.Pipe });
GetWeekPurePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekPurePipe, name: "dfnsGetWeekPure" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekPurePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsGetWeekPure' }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }]; } });
class GetWeekPurePipeModule {
}
GetWeekPurePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekPurePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
GetWeekPurePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekPurePipeModule, declarations: [GetWeekPurePipe], exports: [GetWeekPurePipe] });
GetWeekPurePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekPurePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekPurePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [GetWeekPurePipe],
                    exports: [GetWeekPurePipe]
                }]
        }] });

class GetWeekOfMonthPurePipe {
    constructor(config) {
        this.config = config;
    }
    transform(date, options) {
        return getWeekOfMonth(date, calculateLocale(options, this.config));
    }
}
GetWeekOfMonthPurePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekOfMonthPurePipe, deps: [{ token: DateFnsConfigurationService }], target: i0.ɵɵFactoryTarget.Pipe });
GetWeekOfMonthPurePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekOfMonthPurePipe, name: "dfnsGetWeekOfMonthPure" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekOfMonthPurePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsGetWeekOfMonthPure' }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }]; } });
class GetWeekOfMonthPurePipeModule {
}
GetWeekOfMonthPurePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekOfMonthPurePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
GetWeekOfMonthPurePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekOfMonthPurePipeModule, declarations: [GetWeekOfMonthPurePipe], exports: [GetWeekOfMonthPurePipe] });
GetWeekOfMonthPurePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekOfMonthPurePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekOfMonthPurePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [GetWeekOfMonthPurePipe],
                    exports: [GetWeekOfMonthPurePipe]
                }]
        }] });

class GetWeeksInMonthPurePipe {
    constructor(config) {
        this.config = config;
    }
    transform(date, options) {
        return getWeeksInMonth(date, calculateLocale(options, this.config));
    }
}
GetWeeksInMonthPurePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeeksInMonthPurePipe, deps: [{ token: DateFnsConfigurationService }], target: i0.ɵɵFactoryTarget.Pipe });
GetWeeksInMonthPurePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeeksInMonthPurePipe, name: "dfnsGetWeeksInMonthPure" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeeksInMonthPurePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsGetWeeksInMonthPure' }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }]; } });
class GetWeeksInMonthPurePipeModule {
}
GetWeeksInMonthPurePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeeksInMonthPurePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
GetWeeksInMonthPurePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeeksInMonthPurePipeModule, declarations: [GetWeeksInMonthPurePipe], exports: [GetWeeksInMonthPurePipe] });
GetWeeksInMonthPurePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeeksInMonthPurePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeeksInMonthPurePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [GetWeeksInMonthPurePipe],
                    exports: [GetWeeksInMonthPurePipe]
                }]
        }] });

class GetWeekYearPurePipe {
    constructor(config) {
        this.config = config;
    }
    transform(date, options) {
        return getWeekYear(date, calculateLocale(options, this.config));
    }
}
GetWeekYearPurePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekYearPurePipe, deps: [{ token: DateFnsConfigurationService }], target: i0.ɵɵFactoryTarget.Pipe });
GetWeekYearPurePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekYearPurePipe, name: "dfnsGetWeekYearPure" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekYearPurePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsGetWeekYearPure' }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }]; } });
class GetWeekYearPurePipeModule {
}
GetWeekYearPurePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekYearPurePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
GetWeekYearPurePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekYearPurePipeModule, declarations: [GetWeekYearPurePipe], exports: [GetWeekYearPurePipe] });
GetWeekYearPurePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekYearPurePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: GetWeekYearPurePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [GetWeekYearPurePipe],
                    exports: [GetWeekYearPurePipe]
                }]
        }] });

class StartOfWeekPurePipe {
    constructor(config) {
        this.config = config;
    }
    transform(date, options) {
        return startOfWeek(date, calculateLocale(options, this.config));
    }
}
StartOfWeekPurePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekPurePipe, deps: [{ token: DateFnsConfigurationService }], target: i0.ɵɵFactoryTarget.Pipe });
StartOfWeekPurePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekPurePipe, name: "dfnsStartOfWeekPure" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekPurePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsStartOfWeekPure' }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }]; } });
class StartOfWeekPurePipeModule {
}
StartOfWeekPurePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekPurePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
StartOfWeekPurePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekPurePipeModule, declarations: [StartOfWeekPurePipe], exports: [StartOfWeekPurePipe] });
StartOfWeekPurePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekPurePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekPurePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [StartOfWeekPurePipe],
                    exports: [StartOfWeekPurePipe]
                }]
        }] });

class StartOfWeekYearPurePipe {
    constructor(config) {
        this.config = config;
    }
    transform(date, options) {
        return startOfWeekYear(date, calculateLocale(options, this.config));
    }
}
StartOfWeekYearPurePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekYearPurePipe, deps: [{ token: DateFnsConfigurationService }], target: i0.ɵɵFactoryTarget.Pipe });
StartOfWeekYearPurePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekYearPurePipe, name: "dfnsStartOfWeekYearPure" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekYearPurePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsStartOfWeekYearPure' }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }]; } });
class StartOfWeekYearPurePipeModule {
}
StartOfWeekYearPurePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekYearPurePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
StartOfWeekYearPurePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekYearPurePipeModule, declarations: [StartOfWeekYearPurePipe], exports: [StartOfWeekYearPurePipe] });
StartOfWeekYearPurePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekYearPurePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekYearPurePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [StartOfWeekYearPurePipe],
                    exports: [StartOfWeekYearPurePipe]
                }]
        }] });

class LastDayOfWeekPurePipe {
    constructor(config) {
        this.config = config;
    }
    transform(date, options) {
        return lastDayOfWeek(date, calculateLocale(options, this.config));
    }
}
LastDayOfWeekPurePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfWeekPurePipe, deps: [{ token: DateFnsConfigurationService }], target: i0.ɵɵFactoryTarget.Pipe });
LastDayOfWeekPurePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfWeekPurePipe, name: "dfnsLastDayOfWeekPure" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfWeekPurePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsLastDayOfWeekPure' }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }]; } });
class LastDayOfWeekPurePipeModule {
}
LastDayOfWeekPurePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfWeekPurePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
LastDayOfWeekPurePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfWeekPurePipeModule, declarations: [LastDayOfWeekPurePipe], exports: [LastDayOfWeekPurePipe] });
LastDayOfWeekPurePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfWeekPurePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: LastDayOfWeekPurePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [LastDayOfWeekPurePipe],
                    exports: [LastDayOfWeekPurePipe]
                }]
        }] });

class ParsePurePipe {
    constructor(config) {
        this.config = config;
    }
    transform(dateString, formatString, backupDate, options) {
        return parse(dateString, formatString, backupDate, calculateLocale(options, this.config));
    }
}
ParsePurePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ParsePurePipe, deps: [{ token: DateFnsConfigurationService }], target: i0.ɵɵFactoryTarget.Pipe });
ParsePurePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ParsePurePipe, name: "dfnsParsePure" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ParsePurePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsParsePure' }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }]; } });
class ParsePurePipeModule {
}
ParsePurePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ParsePurePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ParsePurePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ParsePurePipeModule, declarations: [ParsePurePipe], exports: [ParsePurePipe] });
ParsePurePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ParsePurePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ParsePurePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [ParsePurePipe],
                    exports: [ParsePurePipe]
                }]
        }] });

class ParseIsoPipe {
    transform(dateString, options) {
        return parseISO(dateString, options);
    }
}
ParseIsoPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ParseIsoPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
ParseIsoPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ParseIsoPipe, name: "dfnsParseIso" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ParseIsoPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsParseIso' }]
        }] });
class ParseIsoPipeModule {
}
ParseIsoPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ParseIsoPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ParseIsoPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ParseIsoPipeModule, declarations: [ParseIsoPipe], exports: [ParseIsoPipe] });
ParseIsoPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ParseIsoPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ParseIsoPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [ParseIsoPipe],
                    exports: [ParseIsoPipe]
                }]
        }] });

class FormatDurationPurePipe {
    constructor(config) {
        this.config = config;
    }
    transform(duration, options) {
        return formatDuration(duration, calculateLocale(options, this.config));
    }
}
FormatDurationPurePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDurationPurePipe, deps: [{ token: DateFnsConfigurationService }], target: i0.ɵɵFactoryTarget.Pipe });
FormatDurationPurePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDurationPurePipe, name: "dfnsFormatDurationPure" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDurationPurePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsFormatDurationPure' }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }]; } });
class FormatDurationPurePipeModule {
}
FormatDurationPurePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDurationPurePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
FormatDurationPurePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDurationPurePipeModule, declarations: [FormatDurationPurePipe], exports: [FormatDurationPurePipe] });
FormatDurationPurePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDurationPurePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDurationPurePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [FormatDurationPurePipe],
                    exports: [FormatDurationPurePipe]
                }]
        }] });

class FormatDurationPipe {
    constructor(config, cd) {
        this.config = config;
        this.cd = cd;
        this.localeChanged$ = this.config.localeChanged.subscribe(_ => this.cd.markForCheck());
    }
    ngOnDestroy() {
        this.localeChanged$.unsubscribe();
    }
    transform(duration, options) {
        return formatDuration(duration, calculateLocale(options, this.config));
    }
}
FormatDurationPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDurationPipe, deps: [{ token: DateFnsConfigurationService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Pipe });
FormatDurationPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDurationPipe, name: "dfnsFormatDuration", pure: false });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDurationPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsFormatDuration', pure: false }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }, { type: i0.ChangeDetectorRef }]; } });
class FormatDurationPipeModule {
}
FormatDurationPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDurationPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
FormatDurationPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDurationPipeModule, declarations: [FormatDurationPipe], exports: [FormatDurationPipe] });
FormatDurationPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDurationPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDurationPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [FormatDurationPipe],
                    exports: [FormatDurationPipe]
                }]
        }] });

class IsExistsPipe {
    transform(year, month, day) {
        return isExists(year, month, day);
    }
}
IsExistsPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsExistsPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsExistsPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsExistsPipe, name: "dfnsIsExists" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsExistsPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsExists'
                }]
        }] });
class IsExistsPipeModule {
}
IsExistsPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsExistsPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsExistsPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsExistsPipeModule, declarations: [IsExistsPipe], exports: [IsExistsPipe] });
IsExistsPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsExistsPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsExistsPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsExistsPipe],
                    exports: [IsExistsPipe]
                }]
        }] });

class IsFirstDayOfMonthPipe {
    transform(date) {
        return isFirstDayOfMonth(date);
    }
}
IsFirstDayOfMonthPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsFirstDayOfMonthPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsFirstDayOfMonthPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsFirstDayOfMonthPipe, name: "dfnsIsFirstDayOfMonth" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsFirstDayOfMonthPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsFirstDayOfMonth'
                }]
        }] });
class IsFirstDayOfMonthPipeModule {
}
IsFirstDayOfMonthPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsFirstDayOfMonthPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsFirstDayOfMonthPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsFirstDayOfMonthPipeModule, declarations: [IsFirstDayOfMonthPipe], exports: [IsFirstDayOfMonthPipe] });
IsFirstDayOfMonthPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsFirstDayOfMonthPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsFirstDayOfMonthPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsFirstDayOfMonthPipe],
                    exports: [IsFirstDayOfMonthPipe]
                }]
        }] });

class IsFridayPipe {
    transform(date) {
        return isFriday(date);
    }
}
IsFridayPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsFridayPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsFridayPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsFridayPipe, name: "dfnsIsFriday" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsFridayPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsFriday'
                }]
        }] });
class IsFridayPipeModule {
}
IsFridayPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsFridayPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsFridayPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsFridayPipeModule, declarations: [IsFridayPipe], exports: [IsFridayPipe] });
IsFridayPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsFridayPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsFridayPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsFridayPipe],
                    exports: [IsFridayPipe]
                }]
        }] });

class IsLastDayOfMonthPipe {
    transform(date) {
        return isLastDayOfMonth(date);
    }
}
IsLastDayOfMonthPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsLastDayOfMonthPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsLastDayOfMonthPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsLastDayOfMonthPipe, name: "dfnsIsLastDayOfMonth" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsLastDayOfMonthPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsLastDayOfMonth'
                }]
        }] });
class IsLastDayOfMonthPipeModule {
}
IsLastDayOfMonthPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsLastDayOfMonthPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsLastDayOfMonthPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsLastDayOfMonthPipeModule, declarations: [IsLastDayOfMonthPipe], exports: [IsLastDayOfMonthPipe] });
IsLastDayOfMonthPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsLastDayOfMonthPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsLastDayOfMonthPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsLastDayOfMonthPipe],
                    exports: [IsLastDayOfMonthPipe]
                }]
        }] });

class IsLeapYearPipe {
    transform(date) {
        return isLeapYear(date);
    }
}
IsLeapYearPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsLeapYearPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsLeapYearPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsLeapYearPipe, name: "dfnsIsLeapYear" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsLeapYearPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsLeapYear'
                }]
        }] });
class IsLeapYearPipeModule {
}
IsLeapYearPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsLeapYearPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsLeapYearPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsLeapYearPipeModule, declarations: [IsLeapYearPipe], exports: [IsLeapYearPipe] });
IsLeapYearPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsLeapYearPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsLeapYearPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsLeapYearPipe],
                    exports: [IsLeapYearPipe]
                }]
        }] });

class IsMatchPipe {
    constructor(config, cd) {
        this.config = config;
        this.cd = cd;
        this.localeChanged$ = this.config.localeChanged.subscribe(_ => this.cd.markForCheck());
    }
    ngOnDestroy() {
        this.localeChanged$.unsubscribe();
    }
    transform(dateString, formatString, options) {
        return isMatch(dateString, formatString, calculateLocale(options, this.config));
    }
}
IsMatchPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsMatchPipe, deps: [{ token: DateFnsConfigurationService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Pipe });
IsMatchPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsMatchPipe, name: "dfnsIsMatch", pure: false });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsMatchPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsIsMatch', pure: false }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }, { type: i0.ChangeDetectorRef }]; } });
class IsMatchPipeModule {
}
IsMatchPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsMatchPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsMatchPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsMatchPipeModule, declarations: [IsMatchPipe], exports: [IsMatchPipe] });
IsMatchPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsMatchPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsMatchPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsMatchPipe],
                    exports: [IsMatchPipe]
                }]
        }] });

class IsMatchPurePipe {
    constructor(config) {
        this.config = config;
    }
    transform(dateString, formatString, options) {
        return isMatch$1(dateString, formatString, calculateLocale(options, this.config));
    }
}
IsMatchPurePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsMatchPurePipe, deps: [{ token: DateFnsConfigurationService }], target: i0.ɵɵFactoryTarget.Pipe });
IsMatchPurePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsMatchPurePipe, name: "dfnsIsMatchPure" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsMatchPurePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsIsMatchPure' }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }]; } });
class IsMatchPurePipeModule {
}
IsMatchPurePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsMatchPurePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsMatchPurePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsMatchPurePipeModule, declarations: [IsMatchPurePipe], exports: [IsMatchPurePipe] });
IsMatchPurePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsMatchPurePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsMatchPurePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsMatchPurePipe],
                    exports: [IsMatchPurePipe]
                }]
        }] });

class IsMondayPipe {
    transform(date) {
        return isMonday(date);
    }
}
IsMondayPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsMondayPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsMondayPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsMondayPipe, name: "dfnsIsMonday" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsMondayPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsMonday'
                }]
        }] });
class IsMondayPipeModule {
}
IsMondayPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsMondayPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsMondayPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsMondayPipeModule, declarations: [IsMondayPipe], exports: [IsMondayPipe] });
IsMondayPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsMondayPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsMondayPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsMondayPipe],
                    exports: [IsMondayPipe]
                }]
        }] });

class IsSameDayPipe {
    transform(dateLeft, dateRight) {
        return isSameDay(dateLeft, dateRight);
    }
}
IsSameDayPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameDayPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsSameDayPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameDayPipe, name: "dfnsIsSameDay" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameDayPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsSameDay'
                }]
        }] });
class IsSameDayPipeModule {
}
IsSameDayPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameDayPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsSameDayPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameDayPipeModule, declarations: [IsSameDayPipe], exports: [IsSameDayPipe] });
IsSameDayPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameDayPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameDayPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsSameDayPipe],
                    exports: [IsSameDayPipe]
                }]
        }] });

class IsSameHourPipe {
    transform(dateLeft, dateRight) {
        return isSameHour(dateLeft, dateRight);
    }
}
IsSameHourPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameHourPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsSameHourPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameHourPipe, name: "dfnsIsSameHour" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameHourPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsSameHour'
                }]
        }] });
class IsSameHourPipeModule {
}
IsSameHourPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameHourPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsSameHourPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameHourPipeModule, declarations: [IsSameHourPipe], exports: [IsSameHourPipe] });
IsSameHourPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameHourPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameHourPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsSameHourPipe],
                    exports: [IsSameHourPipe]
                }]
        }] });

class IsSameISOWeekYearPipe {
    transform(dateLeft, dateRight) {
        return isSameISOWeekYear(dateLeft, dateRight);
    }
}
IsSameISOWeekYearPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameISOWeekYearPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsSameISOWeekYearPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameISOWeekYearPipe, name: "dfnsIsSameISOWeekYear" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameISOWeekYearPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsSameISOWeekYear'
                }]
        }] });
class IsSameISOWeekYearPipeModule {
}
IsSameISOWeekYearPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameISOWeekYearPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsSameISOWeekYearPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameISOWeekYearPipeModule, declarations: [IsSameISOWeekYearPipe], exports: [IsSameISOWeekYearPipe] });
IsSameISOWeekYearPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameISOWeekYearPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameISOWeekYearPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsSameISOWeekYearPipe],
                    exports: [IsSameISOWeekYearPipe]
                }]
        }] });

class IsSameISOWeekPipe {
    transform(dateLeft, dateRight) {
        return isSameISOWeek(dateLeft, dateRight);
    }
}
IsSameISOWeekPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameISOWeekPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsSameISOWeekPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameISOWeekPipe, name: "dfnsIsSameISOWeek" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameISOWeekPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsSameISOWeek'
                }]
        }] });
class IsSameISOWeekPipeModule {
}
IsSameISOWeekPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameISOWeekPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsSameISOWeekPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameISOWeekPipeModule, declarations: [IsSameISOWeekPipe], exports: [IsSameISOWeekPipe] });
IsSameISOWeekPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameISOWeekPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameISOWeekPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsSameISOWeekPipe],
                    exports: [IsSameISOWeekPipe]
                }]
        }] });

class IsSameMinutePipe {
    transform(dateLeft, dateRight) {
        return isSameDay$1(dateLeft, dateRight);
    }
}
IsSameMinutePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameMinutePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsSameMinutePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameMinutePipe, name: "dfnsIsSameMinute" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameMinutePipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsSameMinute'
                }]
        }] });
class IsSameMinutePipeModule {
}
IsSameMinutePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameMinutePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsSameMinutePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameMinutePipeModule, declarations: [IsSameMinutePipe], exports: [IsSameMinutePipe] });
IsSameMinutePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameMinutePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameMinutePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsSameMinutePipe],
                    exports: [IsSameMinutePipe]
                }]
        }] });

class IsSameQuarterPipe {
    transform(dateLeft, dateRight) {
        return isSameQuarter(dateLeft, dateRight);
    }
}
IsSameQuarterPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameQuarterPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsSameQuarterPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameQuarterPipe, name: "dfnsIsSameQuarter" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameQuarterPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsSameQuarter'
                }]
        }] });
class IsSameQuarterPipeModule {
}
IsSameQuarterPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameQuarterPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsSameQuarterPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameQuarterPipeModule, declarations: [IsSameQuarterPipe], exports: [IsSameQuarterPipe] });
IsSameQuarterPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameQuarterPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameQuarterPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsSameQuarterPipe],
                    exports: [IsSameQuarterPipe]
                }]
        }] });

class IsSameSecondPipe {
    transform(dateLeft, dateRight) {
        return isSameSecond(dateLeft, dateRight);
    }
}
IsSameSecondPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameSecondPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsSameSecondPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameSecondPipe, name: "dfnsIsSameSecond" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameSecondPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsSameSecond'
                }]
        }] });
class IsSameSecondPipeModule {
}
IsSameSecondPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameSecondPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsSameSecondPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameSecondPipeModule, declarations: [IsSameSecondPipe], exports: [IsSameSecondPipe] });
IsSameSecondPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameSecondPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameSecondPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsSameSecondPipe],
                    exports: [IsSameSecondPipe]
                }]
        }] });

class IsSameWeekPipe {
    constructor(config, cd) {
        this.config = config;
        this.cd = cd;
        this.localeChanged$ = this.config.localeChanged.subscribe(_ => this.cd.markForCheck());
    }
    ngOnDestroy() {
        this.localeChanged$.unsubscribe();
    }
    transform(dateLeft, dateRight, options) {
        return isSameWeek(dateLeft, dateRight, calculateLocale(options, this.config));
    }
}
IsSameWeekPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameWeekPipe, deps: [{ token: DateFnsConfigurationService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Pipe });
IsSameWeekPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameWeekPipe, name: "dfnsIsSameWeek", pure: false });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameWeekPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsIsSameWeek', pure: false }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }, { type: i0.ChangeDetectorRef }]; } });
class IsSameWeekPipeModule {
}
IsSameWeekPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameWeekPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsSameWeekPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameWeekPipeModule, declarations: [IsSameWeekPipe], exports: [IsSameWeekPipe] });
IsSameWeekPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameWeekPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameWeekPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsSameWeekPipe],
                    exports: [IsSameWeekPipe]
                }]
        }] });

class IsSameWeekPurePipe {
    constructor(config) {
        this.config = config;
    }
    transform(dateLeft, dateRight, options) {
        return isSameWeek(dateLeft, dateRight, calculateLocale(options, this.config));
    }
}
IsSameWeekPurePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameWeekPurePipe, deps: [{ token: DateFnsConfigurationService }], target: i0.ɵɵFactoryTarget.Pipe });
IsSameWeekPurePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameWeekPurePipe, name: "dfnsIsSameWeekPure" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameWeekPurePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsIsSameWeekPure' }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }]; } });
class IsSameWeekPurePipeModule {
}
IsSameWeekPurePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameWeekPurePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsSameWeekPurePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameWeekPurePipeModule, declarations: [IsSameWeekPurePipe], exports: [IsSameWeekPurePipe] });
IsSameWeekPurePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameWeekPurePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameWeekPurePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsSameWeekPurePipe],
                    exports: [IsSameWeekPurePipe]
                }]
        }] });

class IsSaturdayPipe {
    transform(date) {
        return isSaturday(date);
    }
}
IsSaturdayPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSaturdayPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsSaturdayPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSaturdayPipe, name: "dfnsIsSaturday" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSaturdayPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsSaturday'
                }]
        }] });
class IsSaturdayPipeModule {
}
IsSaturdayPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSaturdayPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsSaturdayPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSaturdayPipeModule, declarations: [IsSaturdayPipe], exports: [IsSaturdayPipe] });
IsSaturdayPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSaturdayPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSaturdayPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsSaturdayPipe],
                    exports: [IsSaturdayPipe]
                }]
        }] });

class IsSundayPipe {
    transform(date) {
        return isSunday(date);
    }
}
IsSundayPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSundayPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsSundayPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSundayPipe, name: "dfnsIsSunday" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSundayPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsSunday'
                }]
        }] });
class IsSundayPipeModule {
}
IsSundayPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSundayPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsSundayPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSundayPipeModule, declarations: [IsSundayPipe], exports: [IsSundayPipe] });
IsSundayPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSundayPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSundayPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsSundayPipe],
                    exports: [IsSundayPipe]
                }]
        }] });

class IsThisHourPipe {
    transform(date) {
        return isThisHour(date);
    }
}
IsThisHourPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisHourPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsThisHourPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisHourPipe, name: "dfnsIsThisHour" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisHourPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsThisHour'
                }]
        }] });
class IsThisHourPipeModule {
}
IsThisHourPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisHourPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsThisHourPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisHourPipeModule, declarations: [IsThisHourPipe], exports: [IsThisHourPipe] });
IsThisHourPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisHourPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisHourPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsThisHourPipe],
                    exports: [IsThisHourPipe]
                }]
        }] });

class IsThisISOWeekPipe {
    transform(date) {
        return isThisISOWeek(date);
    }
}
IsThisISOWeekPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisISOWeekPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsThisISOWeekPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisISOWeekPipe, name: "dfnsIsThisISOWeek" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisISOWeekPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsThisISOWeek'
                }]
        }] });
class IsThisISOWeekPipeModule {
}
IsThisISOWeekPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisISOWeekPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsThisISOWeekPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisISOWeekPipeModule, declarations: [IsThisISOWeekPipe], exports: [IsThisISOWeekPipe] });
IsThisISOWeekPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisISOWeekPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisISOWeekPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsThisISOWeekPipe],
                    exports: [IsThisISOWeekPipe]
                }]
        }] });

class IsThisMinutePipe {
    transform(date) {
        return isThisMinute(date);
    }
}
IsThisMinutePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisMinutePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsThisMinutePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisMinutePipe, name: "dfnsIsThisMinute" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisMinutePipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsThisMinute'
                }]
        }] });
class IsThisMinutePipeModule {
}
IsThisMinutePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisMinutePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsThisMinutePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisMinutePipeModule, declarations: [IsThisMinutePipe], exports: [IsThisMinutePipe] });
IsThisMinutePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisMinutePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisMinutePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsThisMinutePipe],
                    exports: [IsThisMinutePipe]
                }]
        }] });

class IsThisMonthPipe {
    transform(date) {
        return isThisMonth(date);
    }
}
IsThisMonthPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisMonthPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsThisMonthPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisMonthPipe, name: "dfnsIsThisMonth" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisMonthPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsThisMonth'
                }]
        }] });
class IsThisMonthPipeModule {
}
IsThisMonthPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisMonthPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsThisMonthPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisMonthPipeModule, declarations: [IsThisMonthPipe], exports: [IsThisMonthPipe] });
IsThisMonthPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisMonthPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisMonthPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsThisMonthPipe],
                    exports: [IsThisMonthPipe]
                }]
        }] });

class IsThisQuarterPipe {
    transform(date) {
        return isThisQuarter(date);
    }
}
IsThisQuarterPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisQuarterPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsThisQuarterPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisQuarterPipe, name: "dfnsIsThisQuarter" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisQuarterPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsThisQuarter'
                }]
        }] });
class IsThisQuarterPipeModule {
}
IsThisQuarterPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisQuarterPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsThisQuarterPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisQuarterPipeModule, declarations: [IsThisQuarterPipe], exports: [IsThisQuarterPipe] });
IsThisQuarterPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisQuarterPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisQuarterPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsThisQuarterPipe],
                    exports: [IsThisQuarterPipe]
                }]
        }] });

class IsThisSecondPipe {
    transform(date) {
        return isThisSecond(date);
    }
}
IsThisSecondPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisSecondPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsThisSecondPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisSecondPipe, name: "dfnsIsThisSecond" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisSecondPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsThisSecond'
                }]
        }] });
class IsThisSecondPipeModule {
}
IsThisSecondPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisSecondPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsThisSecondPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisSecondPipeModule, declarations: [IsThisSecondPipe], exports: [IsThisSecondPipe] });
IsThisSecondPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisSecondPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisSecondPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsThisSecondPipe],
                    exports: [IsThisSecondPipe]
                }]
        }] });

class IsThisWeekPipe {
    constructor(config, cd) {
        this.config = config;
        this.cd = cd;
        this.localeChanged$ = this.config.localeChanged.subscribe(_ => this.cd.markForCheck());
    }
    ngOnDestroy() {
        this.localeChanged$.unsubscribe();
    }
    transform(date, options) {
        return isThisWeek(date, calculateLocale(options, this.config));
    }
}
IsThisWeekPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisWeekPipe, deps: [{ token: DateFnsConfigurationService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Pipe });
IsThisWeekPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisWeekPipe, name: "dfnsIsThisWeek", pure: false });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisWeekPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsIsThisWeek', pure: false }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }, { type: i0.ChangeDetectorRef }]; } });
class IsThisWeekPipeModule {
}
IsThisWeekPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisWeekPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsThisWeekPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisWeekPipeModule, declarations: [IsThisWeekPipe], exports: [IsThisWeekPipe] });
IsThisWeekPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisWeekPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisWeekPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsThisWeekPipe],
                    exports: [IsThisWeekPipe]
                }]
        }] });

class IsThisWeekPurePipe {
    constructor(config) {
        this.config = config;
    }
    transform(date, options) {
        return isThisWeek$1(date, calculateLocale(options, this.config));
    }
}
IsThisWeekPurePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisWeekPurePipe, deps: [{ token: DateFnsConfigurationService }], target: i0.ɵɵFactoryTarget.Pipe });
IsThisWeekPurePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisWeekPurePipe, name: "dfnsIsThisWeekPure" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisWeekPurePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsIsThisWeekPure' }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }]; } });
class IsThisWeekPurePipeModule {
}
IsThisWeekPurePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisWeekPurePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsThisWeekPurePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisWeekPurePipeModule, declarations: [IsThisWeekPurePipe], exports: [IsThisWeekPurePipe] });
IsThisWeekPurePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisWeekPurePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisWeekPurePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsThisWeekPurePipe],
                    exports: [IsThisWeekPurePipe]
                }]
        }] });

class IsThisYearPipe {
    transform(date) {
        return isThisYear(date);
    }
}
IsThisYearPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisYearPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsThisYearPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisYearPipe, name: "dfnsIsThisYear" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisYearPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsThisYear'
                }]
        }] });
class IsThisYearPipeModule {
}
IsThisYearPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisYearPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsThisYearPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisYearPipeModule, declarations: [IsThisYearPipe], exports: [IsThisYearPipe] });
IsThisYearPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisYearPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisYearPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsThisYearPipe],
                    exports: [IsThisYearPipe]
                }]
        }] });

class IsThursdayPipe {
    transform(date) {
        return isThursday(date);
    }
}
IsThursdayPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThursdayPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsThursdayPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThursdayPipe, name: "dfnsIsThursday" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThursdayPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsThursday'
                }]
        }] });
class IsThursdayPipeModule {
}
IsThursdayPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThursdayPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsThursdayPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThursdayPipeModule, declarations: [IsThursdayPipe], exports: [IsThursdayPipe] });
IsThursdayPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThursdayPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThursdayPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsThursdayPipe],
                    exports: [IsThursdayPipe]
                }]
        }] });

class IsTomorrowPipe {
    transform(date) {
        return isTomorrow(date);
    }
}
IsTomorrowPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsTomorrowPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsTomorrowPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsTomorrowPipe, name: "dfnsIsTomorrow" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsTomorrowPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsTomorrow'
                }]
        }] });
class IsTomorrowPipeModule {
}
IsTomorrowPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsTomorrowPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsTomorrowPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsTomorrowPipeModule, declarations: [IsTomorrowPipe], exports: [IsTomorrowPipe] });
IsTomorrowPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsTomorrowPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsTomorrowPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsTomorrowPipe],
                    exports: [IsTomorrowPipe]
                }]
        }] });

class IsTuesdayPipe {
    transform(date) {
        return isTuesday(date);
    }
}
IsTuesdayPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsTuesdayPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsTuesdayPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsTuesdayPipe, name: "dfnsIsTuesday" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsTuesdayPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsTuesday'
                }]
        }] });
class IsTuesdayPipeModule {
}
IsTuesdayPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsTuesdayPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsTuesdayPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsTuesdayPipeModule, declarations: [IsTuesdayPipe], exports: [IsTuesdayPipe] });
IsTuesdayPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsTuesdayPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsTuesdayPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsTuesdayPipe],
                    exports: [IsTuesdayPipe]
                }]
        }] });

class IsWednesdayPipe {
    transform(date) {
        return isWednesday(date);
    }
}
IsWednesdayPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsWednesdayPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsWednesdayPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsWednesdayPipe, name: "dfnsIsWednesday" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsWednesdayPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsWednesday'
                }]
        }] });
class IsWednesdayPipeModule {
}
IsWednesdayPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsWednesdayPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsWednesdayPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsWednesdayPipeModule, declarations: [IsWednesdayPipe], exports: [IsWednesdayPipe] });
IsWednesdayPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsWednesdayPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsWednesdayPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsWednesdayPipe],
                    exports: [IsWednesdayPipe]
                }]
        }] });

class IsWithinIntervalPipe {
    transform(date, interval) {
        return isWithinInterval(date, interval);
    }
}
IsWithinIntervalPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsWithinIntervalPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsWithinIntervalPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsWithinIntervalPipe, name: "dfnsIsWithinInterval" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsWithinIntervalPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsWithinInterval'
                }]
        }] });
class IsWithinIntervalPipeModule {
}
IsWithinIntervalPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsWithinIntervalPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsWithinIntervalPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsWithinIntervalPipeModule, declarations: [IsWithinIntervalPipe], exports: [IsWithinIntervalPipe] });
IsWithinIntervalPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsWithinIntervalPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsWithinIntervalPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsWithinIntervalPipe],
                    exports: [IsWithinIntervalPipe]
                }]
        }] });

class IsYesterdayPipe {
    transform(date) {
        return isYesterday(date);
    }
}
IsYesterdayPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsYesterdayPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsYesterdayPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsYesterdayPipe, name: "dfnsIsYesterday" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsYesterdayPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsYesterday'
                }]
        }] });
class IsYesterdayPipeModule {
}
IsYesterdayPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsYesterdayPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsYesterdayPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsYesterdayPipeModule, declarations: [IsYesterdayPipe], exports: [IsYesterdayPipe] });
IsYesterdayPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsYesterdayPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsYesterdayPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsYesterdayPipe],
                    exports: [IsYesterdayPipe]
                }]
        }] });

class FormatRelativePurePipe {
    constructor(config) {
        this.config = config;
    }
    transform(date, dateToCompare, options) {
        if (isValidDate(date) && isValidDate(dateToCompare)) {
            return formatRelative(date, dateToCompare, calculateLocale(options, this.config));
        }
        return '';
    }
}
FormatRelativePurePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativePurePipe, deps: [{ token: DateFnsConfigurationService }], target: i0.ɵɵFactoryTarget.Pipe });
FormatRelativePurePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativePurePipe, name: "dfnsFormatRelativePure" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativePurePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsFormatRelativePure' }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }]; } });
class FormatRelativePurePipeModule {
}
FormatRelativePurePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativePurePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
FormatRelativePurePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativePurePipeModule, declarations: [FormatRelativePurePipe], exports: [FormatRelativePurePipe] });
FormatRelativePurePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativePurePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativePurePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [FormatRelativePurePipe],
                    exports: [FormatRelativePurePipe]
                }]
        }] });

class FormatDistanceToNowStrictPurePipe {
    constructor(config) {
        this.config = config;
    }
    transform(date, options) {
        if (isValidDate(date)) {
            return formatDistanceToNowStrict(date, calculateLocale(options, this.config));
        }
        return '';
    }
}
FormatDistanceToNowStrictPurePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowStrictPurePipe, deps: [{ token: DateFnsConfigurationService }], target: i0.ɵɵFactoryTarget.Pipe });
FormatDistanceToNowStrictPurePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowStrictPurePipe, name: "dfnsFormatDistanceToNowStrictPure" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowStrictPurePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsFormatDistanceToNowStrictPure' }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }]; } });
class FormatDistanceToNowStrictPurePipeModule {
}
FormatDistanceToNowStrictPurePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowStrictPurePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
FormatDistanceToNowStrictPurePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowStrictPurePipeModule, declarations: [FormatDistanceToNowStrictPurePipe], exports: [FormatDistanceToNowStrictPurePipe] });
FormatDistanceToNowStrictPurePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowStrictPurePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowStrictPurePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [FormatDistanceToNowStrictPurePipe],
                    exports: [FormatDistanceToNowStrictPurePipe]
                }]
        }] });

class FormatRelativeToNowPipe {
    constructor(config, cd) {
        this.config = config;
        this.cd = cd;
        this.localeChanged$ = this.config.localeChanged.subscribe(_ => this.cd.markForCheck());
    }
    ngOnDestroy() {
        this.localeChanged$.unsubscribe();
    }
    transform(date, options) {
        if (isValidDate(date)) {
            const dateToCompare = Date.now();
            return formatRelative(date, dateToCompare, calculateLocale(options, this.config));
        }
        return '';
    }
}
FormatRelativeToNowPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativeToNowPipe, deps: [{ token: DateFnsConfigurationService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Pipe });
FormatRelativeToNowPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativeToNowPipe, name: "dfnsFormatRelativeToNow", pure: false });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativeToNowPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsFormatRelativeToNow', pure: false }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }, { type: i0.ChangeDetectorRef }]; } });
class FormatRelativeToNowPipeModule {
}
FormatRelativeToNowPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativeToNowPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
FormatRelativeToNowPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativeToNowPipeModule, declarations: [FormatRelativeToNowPipe], exports: [FormatRelativeToNowPipe] });
FormatRelativeToNowPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativeToNowPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativeToNowPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [FormatRelativeToNowPipe],
                    exports: [FormatRelativeToNowPipe]
                }]
        }] });

class FormatRelativeToNowPurePipe {
    constructor(config) {
        this.config = config;
    }
    transform(date, options) {
        if (isValidDate(date)) {
            const dateToCompare = Date.now();
            return formatRelative(date, dateToCompare, calculateLocale(options, this.config));
        }
        return '';
    }
}
FormatRelativeToNowPurePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativeToNowPurePipe, deps: [{ token: DateFnsConfigurationService }], target: i0.ɵɵFactoryTarget.Pipe });
FormatRelativeToNowPurePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativeToNowPurePipe, name: "dfnsFormatRelativeToNowPure" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativeToNowPurePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsFormatRelativeToNowPure' }]
        }], ctorParameters: function () { return [{ type: DateFnsConfigurationService }]; } });
class FormatRelativeToNowPurePipeModule {
}
FormatRelativeToNowPurePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativeToNowPurePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
FormatRelativeToNowPurePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativeToNowPurePipeModule, declarations: [FormatRelativeToNowPurePipe], exports: [FormatRelativeToNowPurePipe] });
FormatRelativeToNowPurePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativeToNowPurePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativeToNowPurePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [FormatRelativeToNowPurePipe],
                    exports: [FormatRelativeToNowPurePipe]
                }]
        }] });

const PIPES = [
    AddBusinessDaysPipeModule,
    AddDaysPipeModule,
    AddHoursPipeModule,
    AddISOWeekYearsPipeModule,
    AddMillisecondsPipeModule,
    AddMinutesPipeModule,
    AddMonthsPipeModule,
    AddQuartersPipeModule,
    AddSecondsPipeModule,
    AddWeeksPipeModule,
    AddYearsPipeModule,
    ClosestToPipeModule,
    FormatPipeModule,
    FormatRelativePipeModule,
    DifferenceInCalendarDaysPipeModule,
    DifferenceInCalendarISOWeeksPipeModule,
    DifferenceInCalendarISOWeekYearsPipeModule,
    DifferenceInCalendarQuartersPipeModule,
    DifferenceInCalendarMonthsPipeModule,
    DifferenceInCalendarWeeksPipeModule,
    DifferenceInCalendarYearsPipeModule,
    DifferenceInDaysPipeModule,
    DifferenceInHoursPipeModule,
    DifferenceInISOWeekYearsPipeModule,
    DifferenceInMillisecondsPipeModule,
    DifferenceInMinutesPipeModule,
    DifferenceInMonthsPipeModule,
    DifferenceInQuartersPipeModule,
    DifferenceInSecondsPipeModule,
    DifferenceInWeeksPipeModule,
    DifferenceInYearsPipeModule,
    DifferenceInBusinessDaysPipeModule,
    FormatDistancePipeModule,
    FormatDistanceStrictPipeModule,
    FormatDistanceToNowPipeModule,
    FormatDistanceToNowStrictPipeModule,
    EndOfDayPipeModule,
    EndOfHourPipeModule,
    EndOfISOWeekYearPipeModule,
    EndOfISOWeekPipeModule,
    EndOfMinutePipeModule,
    EndOfMonthPipeModule,
    EndOfQuarterPipeModule,
    EndOfSecondPipeModule,
    EndOfTodayPipeModule,
    EndOfTomorrowPipeModule,
    EndOfWeekPipeModule,
    EndOfYearPipeModule,
    EndOfYesterdayPipeModule,
    GetDatePipeModule,
    GetDayOfYearPipeModule,
    GetDayPipeModule,
    GetDaysInMonthPipeModule,
    GetDaysInYearPipeModule,
    GetHoursPipeModule,
    GetISODayPipeModule,
    GetISOWeekPipeModule,
    GetISOWeeksInYearPipeModule,
    GetISOWeekYearPipeModule,
    GetMillisecondsPipeModule,
    GetMinutesPipeModule,
    GetMonthPipeModule,
    GetOverlappingDaysInIntervalsPipeModule,
    GetQuarterPipeModule,
    GetSecondsPipeModule,
    GetTimePipeModule,
    GetUnixTimePipeModule,
    GetYearPipeModule,
    GetWeekPipeModule,
    GetWeekOfMonthPipeModule,
    GetWeeksInMonthPipeModule,
    GetDecadePipeModule,
    GetWeekYearPipeModule,
    LastDayOfISOWeekPipeModule,
    LastDayOfISOWeekYearPipeModule,
    LastDayOfMonthPipeModule,
    LastDayOfQuarterPipeModule,
    LastDayOfWeekPipeModule,
    LastDayOfYearPipeModule,
    LastDayOfDecadePipeModule,
    MaxPipeModule,
    MinPipeModule,
    StartOfDayPipeModule,
    StartOfHourPipeModule,
    StartOfISOWeekPipeModule,
    StartOfISOWeekYearPipeModule,
    StartOfMinutePipeModule,
    StartOfMonthPipeModule,
    StartOfQuarterPipeModule,
    StartOfSecondPipeModule,
    StartOfTodayPipeModule,
    StartOfTomorrowPipeModule,
    StartOfWeekPipeModule,
    StartOfYearPipeModule,
    StartOfYesterdayPipeModule,
    StartOfDecadePipeModule,
    StartOfWeekYearPipeModule,
    SubDaysPipeModule,
    SubHoursPipeModule,
    SubISOWeekYearsPipeModule,
    SubMillisecondsPipeModule,
    SubMinutesPipeModule,
    SubMonthsPipeModule,
    SubQuartersPipeModule,
    SubSecondsPipeModule,
    SubWeeksPipeModule,
    SubYearsPipeModule,
    IsAfterPipeModule,
    IsBeforePipeModule,
    IsDatePipeModule,
    IsEqualPipeModule,
    IsFuturePipeModule,
    IsPastPipeModule,
    IsValidPipeModule,
    IsTodayPipeModule,
    IsWeekendPipeModule,
    IsSameMonthPipeModule,
    IsExistsPipeModule,
    IsFirstDayOfMonthPipeModule,
    IsFridayPipeModule,
    IsLastDayOfMonthPipeModule,
    IsLeapYearPipeModule,
    IsMatchPipeModule,
    IsMondayPipeModule,
    IsSameDayPipeModule,
    IsSameHourPipeModule,
    IsSameISOWeekPipeModule,
    IsSameISOWeekYearPipeModule,
    IsSameMinutePipeModule,
    IsSameQuarterPipeModule,
    IsSameSecondPipeModule,
    IsSameWeekPipeModule,
    IsSaturdayPipeModule,
    IsSundayPipeModule,
    IsThisHourPipeModule,
    IsThisISOWeekPipeModule,
    IsThisMinutePipeModule,
    IsThisMonthPipeModule,
    IsThisQuarterPipeModule,
    IsThisSecondPipeModule,
    IsThisWeekPipeModule,
    IsThisYearPipeModule,
    IsThursdayPipeModule,
    IsTomorrowPipeModule,
    IsTuesdayPipeModule,
    IsWednesdayPipeModule,
    IsWithinIntervalPipeModule,
    IsYesterdayPipeModule,
    ParsePipeModule,
    WeekdayNamePipeModule,
    IsSameYearPipeModule,
    FormatPurePipeModule,
    FormatRelativePurePipeModule,
    FormatDistancePurePipeModule,
    FormatDistanceStrictPurePipeModule,
    FormatDistanceToNowPurePipeModule,
    FormatDistanceToNowStrictPurePipeModule,
    GetWeekPurePipeModule,
    GetWeekOfMonthPurePipeModule,
    GetWeeksInMonthPurePipeModule,
    GetWeekYearPurePipeModule,
    StartOfWeekPurePipeModule,
    StartOfWeekYearPurePipeModule,
    LastDayOfWeekPurePipeModule,
    ParsePurePipeModule,
    ParseIsoPipeModule,
    FormatDurationPipeModule,
    FormatDurationPurePipeModule,
    FormatRelativeToNowPipeModule,
    FormatRelativeToNowPurePipeModule
];
class DateFnsModule {
    static forRoot() {
        return {
            ngModule: DateFnsModule,
            providers: [DateFnsConfigurationService]
        };
    }
}
DateFnsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DateFnsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DateFnsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DateFnsModule, exports: [AddBusinessDaysPipeModule,
        AddDaysPipeModule,
        AddHoursPipeModule,
        AddISOWeekYearsPipeModule,
        AddMillisecondsPipeModule,
        AddMinutesPipeModule,
        AddMonthsPipeModule,
        AddQuartersPipeModule,
        AddSecondsPipeModule,
        AddWeeksPipeModule,
        AddYearsPipeModule,
        ClosestToPipeModule,
        FormatPipeModule,
        FormatRelativePipeModule,
        DifferenceInCalendarDaysPipeModule,
        DifferenceInCalendarISOWeeksPipeModule,
        DifferenceInCalendarISOWeekYearsPipeModule,
        DifferenceInCalendarQuartersPipeModule,
        DifferenceInCalendarMonthsPipeModule,
        DifferenceInCalendarWeeksPipeModule,
        DifferenceInCalendarYearsPipeModule,
        DifferenceInDaysPipeModule,
        DifferenceInHoursPipeModule,
        DifferenceInISOWeekYearsPipeModule,
        DifferenceInMillisecondsPipeModule,
        DifferenceInMinutesPipeModule,
        DifferenceInMonthsPipeModule,
        DifferenceInQuartersPipeModule,
        DifferenceInSecondsPipeModule,
        DifferenceInWeeksPipeModule,
        DifferenceInYearsPipeModule,
        DifferenceInBusinessDaysPipeModule,
        FormatDistancePipeModule,
        FormatDistanceStrictPipeModule,
        FormatDistanceToNowPipeModule,
        FormatDistanceToNowStrictPipeModule,
        EndOfDayPipeModule,
        EndOfHourPipeModule,
        EndOfISOWeekYearPipeModule,
        EndOfISOWeekPipeModule,
        EndOfMinutePipeModule,
        EndOfMonthPipeModule,
        EndOfQuarterPipeModule,
        EndOfSecondPipeModule,
        EndOfTodayPipeModule,
        EndOfTomorrowPipeModule,
        EndOfWeekPipeModule,
        EndOfYearPipeModule,
        EndOfYesterdayPipeModule,
        GetDatePipeModule,
        GetDayOfYearPipeModule,
        GetDayPipeModule,
        GetDaysInMonthPipeModule,
        GetDaysInYearPipeModule,
        GetHoursPipeModule,
        GetISODayPipeModule,
        GetISOWeekPipeModule,
        GetISOWeeksInYearPipeModule,
        GetISOWeekYearPipeModule,
        GetMillisecondsPipeModule,
        GetMinutesPipeModule,
        GetMonthPipeModule,
        GetOverlappingDaysInIntervalsPipeModule,
        GetQuarterPipeModule,
        GetSecondsPipeModule,
        GetTimePipeModule,
        GetUnixTimePipeModule,
        GetYearPipeModule,
        GetWeekPipeModule,
        GetWeekOfMonthPipeModule,
        GetWeeksInMonthPipeModule,
        GetDecadePipeModule,
        GetWeekYearPipeModule,
        LastDayOfISOWeekPipeModule,
        LastDayOfISOWeekYearPipeModule,
        LastDayOfMonthPipeModule,
        LastDayOfQuarterPipeModule,
        LastDayOfWeekPipeModule,
        LastDayOfYearPipeModule,
        LastDayOfDecadePipeModule,
        MaxPipeModule,
        MinPipeModule,
        StartOfDayPipeModule,
        StartOfHourPipeModule,
        StartOfISOWeekPipeModule,
        StartOfISOWeekYearPipeModule,
        StartOfMinutePipeModule,
        StartOfMonthPipeModule,
        StartOfQuarterPipeModule,
        StartOfSecondPipeModule,
        StartOfTodayPipeModule,
        StartOfTomorrowPipeModule,
        StartOfWeekPipeModule,
        StartOfYearPipeModule,
        StartOfYesterdayPipeModule,
        StartOfDecadePipeModule,
        StartOfWeekYearPipeModule,
        SubDaysPipeModule,
        SubHoursPipeModule,
        SubISOWeekYearsPipeModule,
        SubMillisecondsPipeModule,
        SubMinutesPipeModule,
        SubMonthsPipeModule,
        SubQuartersPipeModule,
        SubSecondsPipeModule,
        SubWeeksPipeModule,
        SubYearsPipeModule,
        IsAfterPipeModule,
        IsBeforePipeModule,
        IsDatePipeModule,
        IsEqualPipeModule,
        IsFuturePipeModule,
        IsPastPipeModule,
        IsValidPipeModule,
        IsTodayPipeModule,
        IsWeekendPipeModule,
        IsSameMonthPipeModule,
        IsExistsPipeModule,
        IsFirstDayOfMonthPipeModule,
        IsFridayPipeModule,
        IsLastDayOfMonthPipeModule,
        IsLeapYearPipeModule,
        IsMatchPipeModule,
        IsMondayPipeModule,
        IsSameDayPipeModule,
        IsSameHourPipeModule,
        IsSameISOWeekPipeModule,
        IsSameISOWeekYearPipeModule,
        IsSameMinutePipeModule,
        IsSameQuarterPipeModule,
        IsSameSecondPipeModule,
        IsSameWeekPipeModule,
        IsSaturdayPipeModule,
        IsSundayPipeModule,
        IsThisHourPipeModule,
        IsThisISOWeekPipeModule,
        IsThisMinutePipeModule,
        IsThisMonthPipeModule,
        IsThisQuarterPipeModule,
        IsThisSecondPipeModule,
        IsThisWeekPipeModule,
        IsThisYearPipeModule,
        IsThursdayPipeModule,
        IsTomorrowPipeModule,
        IsTuesdayPipeModule,
        IsWednesdayPipeModule,
        IsWithinIntervalPipeModule,
        IsYesterdayPipeModule,
        ParsePipeModule,
        WeekdayNamePipeModule,
        IsSameYearPipeModule,
        FormatPurePipeModule,
        FormatRelativePurePipeModule,
        FormatDistancePurePipeModule,
        FormatDistanceStrictPurePipeModule,
        FormatDistanceToNowPurePipeModule,
        FormatDistanceToNowStrictPurePipeModule,
        GetWeekPurePipeModule,
        GetWeekOfMonthPurePipeModule,
        GetWeeksInMonthPurePipeModule,
        GetWeekYearPurePipeModule,
        StartOfWeekPurePipeModule,
        StartOfWeekYearPurePipeModule,
        LastDayOfWeekPurePipeModule,
        ParsePurePipeModule,
        ParseIsoPipeModule,
        FormatDurationPipeModule,
        FormatDurationPurePipeModule,
        FormatRelativeToNowPipeModule,
        FormatRelativeToNowPurePipeModule] });
DateFnsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DateFnsModule, imports: [AddBusinessDaysPipeModule,
        AddDaysPipeModule,
        AddHoursPipeModule,
        AddISOWeekYearsPipeModule,
        AddMillisecondsPipeModule,
        AddMinutesPipeModule,
        AddMonthsPipeModule,
        AddQuartersPipeModule,
        AddSecondsPipeModule,
        AddWeeksPipeModule,
        AddYearsPipeModule,
        ClosestToPipeModule,
        FormatPipeModule,
        FormatRelativePipeModule,
        DifferenceInCalendarDaysPipeModule,
        DifferenceInCalendarISOWeeksPipeModule,
        DifferenceInCalendarISOWeekYearsPipeModule,
        DifferenceInCalendarQuartersPipeModule,
        DifferenceInCalendarMonthsPipeModule,
        DifferenceInCalendarWeeksPipeModule,
        DifferenceInCalendarYearsPipeModule,
        DifferenceInDaysPipeModule,
        DifferenceInHoursPipeModule,
        DifferenceInISOWeekYearsPipeModule,
        DifferenceInMillisecondsPipeModule,
        DifferenceInMinutesPipeModule,
        DifferenceInMonthsPipeModule,
        DifferenceInQuartersPipeModule,
        DifferenceInSecondsPipeModule,
        DifferenceInWeeksPipeModule,
        DifferenceInYearsPipeModule,
        DifferenceInBusinessDaysPipeModule,
        FormatDistancePipeModule,
        FormatDistanceStrictPipeModule,
        FormatDistanceToNowPipeModule,
        FormatDistanceToNowStrictPipeModule,
        EndOfDayPipeModule,
        EndOfHourPipeModule,
        EndOfISOWeekYearPipeModule,
        EndOfISOWeekPipeModule,
        EndOfMinutePipeModule,
        EndOfMonthPipeModule,
        EndOfQuarterPipeModule,
        EndOfSecondPipeModule,
        EndOfTodayPipeModule,
        EndOfTomorrowPipeModule,
        EndOfWeekPipeModule,
        EndOfYearPipeModule,
        EndOfYesterdayPipeModule,
        GetDatePipeModule,
        GetDayOfYearPipeModule,
        GetDayPipeModule,
        GetDaysInMonthPipeModule,
        GetDaysInYearPipeModule,
        GetHoursPipeModule,
        GetISODayPipeModule,
        GetISOWeekPipeModule,
        GetISOWeeksInYearPipeModule,
        GetISOWeekYearPipeModule,
        GetMillisecondsPipeModule,
        GetMinutesPipeModule,
        GetMonthPipeModule,
        GetOverlappingDaysInIntervalsPipeModule,
        GetQuarterPipeModule,
        GetSecondsPipeModule,
        GetTimePipeModule,
        GetUnixTimePipeModule,
        GetYearPipeModule,
        GetWeekPipeModule,
        GetWeekOfMonthPipeModule,
        GetWeeksInMonthPipeModule,
        GetDecadePipeModule,
        GetWeekYearPipeModule,
        LastDayOfISOWeekPipeModule,
        LastDayOfISOWeekYearPipeModule,
        LastDayOfMonthPipeModule,
        LastDayOfQuarterPipeModule,
        LastDayOfWeekPipeModule,
        LastDayOfYearPipeModule,
        LastDayOfDecadePipeModule,
        MaxPipeModule,
        MinPipeModule,
        StartOfDayPipeModule,
        StartOfHourPipeModule,
        StartOfISOWeekPipeModule,
        StartOfISOWeekYearPipeModule,
        StartOfMinutePipeModule,
        StartOfMonthPipeModule,
        StartOfQuarterPipeModule,
        StartOfSecondPipeModule,
        StartOfTodayPipeModule,
        StartOfTomorrowPipeModule,
        StartOfWeekPipeModule,
        StartOfYearPipeModule,
        StartOfYesterdayPipeModule,
        StartOfDecadePipeModule,
        StartOfWeekYearPipeModule,
        SubDaysPipeModule,
        SubHoursPipeModule,
        SubISOWeekYearsPipeModule,
        SubMillisecondsPipeModule,
        SubMinutesPipeModule,
        SubMonthsPipeModule,
        SubQuartersPipeModule,
        SubSecondsPipeModule,
        SubWeeksPipeModule,
        SubYearsPipeModule,
        IsAfterPipeModule,
        IsBeforePipeModule,
        IsDatePipeModule,
        IsEqualPipeModule,
        IsFuturePipeModule,
        IsPastPipeModule,
        IsValidPipeModule,
        IsTodayPipeModule,
        IsWeekendPipeModule,
        IsSameMonthPipeModule,
        IsExistsPipeModule,
        IsFirstDayOfMonthPipeModule,
        IsFridayPipeModule,
        IsLastDayOfMonthPipeModule,
        IsLeapYearPipeModule,
        IsMatchPipeModule,
        IsMondayPipeModule,
        IsSameDayPipeModule,
        IsSameHourPipeModule,
        IsSameISOWeekPipeModule,
        IsSameISOWeekYearPipeModule,
        IsSameMinutePipeModule,
        IsSameQuarterPipeModule,
        IsSameSecondPipeModule,
        IsSameWeekPipeModule,
        IsSaturdayPipeModule,
        IsSundayPipeModule,
        IsThisHourPipeModule,
        IsThisISOWeekPipeModule,
        IsThisMinutePipeModule,
        IsThisMonthPipeModule,
        IsThisQuarterPipeModule,
        IsThisSecondPipeModule,
        IsThisWeekPipeModule,
        IsThisYearPipeModule,
        IsThursdayPipeModule,
        IsTomorrowPipeModule,
        IsTuesdayPipeModule,
        IsWednesdayPipeModule,
        IsWithinIntervalPipeModule,
        IsYesterdayPipeModule,
        ParsePipeModule,
        WeekdayNamePipeModule,
        IsSameYearPipeModule,
        FormatPurePipeModule,
        FormatRelativePurePipeModule,
        FormatDistancePurePipeModule,
        FormatDistanceStrictPurePipeModule,
        FormatDistanceToNowPurePipeModule,
        FormatDistanceToNowStrictPurePipeModule,
        GetWeekPurePipeModule,
        GetWeekOfMonthPurePipeModule,
        GetWeeksInMonthPurePipeModule,
        GetWeekYearPurePipeModule,
        StartOfWeekPurePipeModule,
        StartOfWeekYearPurePipeModule,
        LastDayOfWeekPurePipeModule,
        ParsePurePipeModule,
        ParseIsoPipeModule,
        FormatDurationPipeModule,
        FormatDurationPurePipeModule,
        FormatRelativeToNowPipeModule,
        FormatRelativeToNowPurePipeModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DateFnsModule, decorators: [{
            type: NgModule,
            args: [{
                    exports: PIPES
                }]
        }] });

// TODO: add exports from module imports

/**
 * Generated bundle index. Do not edit.
 */

export { AddBusinessDaysPipe, AddBusinessDaysPipeModule, AddDaysPipe, AddDaysPipeModule, AddHoursPipe, AddHoursPipeModule, AddISOWeekYearsPipe, AddISOWeekYearsPipeModule, AddMillisecondsPipe, AddMillisecondsPipeModule, AddMinutesPipe, AddMinutesPipeModule, AddMonthsPipe, AddMonthsPipeModule, AddQuartersPipe, AddQuartersPipeModule, AddSecondsPipe, AddSecondsPipeModule, AddWeeksPipe, AddWeeksPipeModule, AddYearsPipe, AddYearsPipeModule, ClosestToPipe, ClosestToPipeModule, DateFnsConfigurationService, DateFnsModule, DifferenceInBusinessDaysPipe, DifferenceInBusinessDaysPipeModule, DifferenceInCalendarDaysPipe, DifferenceInCalendarDaysPipeModule, DifferenceInCalendarISOWeekYearsPipe, DifferenceInCalendarISOWeekYearsPipeModule, DifferenceInCalendarISOWeeksPipe, DifferenceInCalendarISOWeeksPipeModule, DifferenceInCalendarMonthsPipe, DifferenceInCalendarMonthsPipeModule, DifferenceInCalendarQuartersPipe, DifferenceInCalendarQuartersPipeModule, DifferenceInCalendarWeeksPipe, DifferenceInCalendarWeeksPipeModule, DifferenceInCalendarYearsPipe, DifferenceInCalendarYearsPipeModule, DifferenceInDaysPipe, DifferenceInDaysPipeModule, DifferenceInHoursPipe, DifferenceInHoursPipeModule, DifferenceInISOWeekYearsPipe, DifferenceInISOWeekYearsPipeModule, DifferenceInMillisecondsPipe, DifferenceInMillisecondsPipeModule, DifferenceInMinutesPipe, DifferenceInMinutesPipeModule, DifferenceInMonthsPipe, DifferenceInMonthsPipeModule, DifferenceInQuartersPipe, DifferenceInQuartersPipeModule, DifferenceInSecondsPipe, DifferenceInSecondsPipeModule, DifferenceInWeeksPipe, DifferenceInWeeksPipeModule, DifferenceInYearsPipe, DifferenceInYearsPipeModule, EndOfDayPipe, EndOfDayPipeModule, EndOfHourPipe, EndOfHourPipeModule, EndOfISOWeekPipe, EndOfISOWeekPipeModule, EndOfISOWeekYearPipe, EndOfISOWeekYearPipeModule, EndOfMinutePipe, EndOfMinutePipeModule, EndOfMonthPipe, EndOfMonthPipeModule, EndOfQuarterPipe, EndOfQuarterPipeModule, EndOfSecondPipe, EndOfSecondPipeModule, EndOfTodayPipe, EndOfTodayPipeModule, EndOfTomorrowPipe, EndOfTomorrowPipeModule, EndOfWeekPipe, EndOfWeekPipeModule, EndOfYearPipe, EndOfYearPipeModule, EndOfYesterdayPipe, EndOfYesterdayPipeModule, FormatDistancePipe, FormatDistancePipeModule, FormatDistancePurePipe, FormatDistancePurePipeModule, FormatDistanceStrictPipe, FormatDistanceStrictPipeModule, FormatDistanceStrictPurePipe, FormatDistanceStrictPurePipeModule, FormatDistanceToNowPipe, FormatDistanceToNowPipeModule, FormatDistanceToNowPurePipe, FormatDistanceToNowPurePipeModule, FormatDistanceToNowStrictPipe, FormatDistanceToNowStrictPipeModule, FormatDistanceToNowStrictPurePipe, FormatDistanceToNowStrictPurePipeModule, FormatDurationPipe, FormatDurationPipeModule, FormatDurationPurePipe, FormatDurationPurePipeModule, FormatPipe, FormatPipeModule, FormatPurePipe, FormatPurePipeModule, FormatRelativePipe, FormatRelativePipeModule, FormatRelativePurePipe, FormatRelativePurePipeModule, FormatRelativeToNowPipe, FormatRelativeToNowPipeModule, FormatRelativeToNowPurePipe, FormatRelativeToNowPurePipeModule, GetDatePipe, GetDatePipeModule, GetDayOfYearPipe, GetDayOfYearPipeModule, GetDayPipe, GetDayPipeModule, GetDaysInMonthPipe, GetDaysInMonthPipeModule, GetDaysInYearPipe, GetDaysInYearPipeModule, GetDecadePipe, GetDecadePipeModule, GetHoursPipe, GetHoursPipeModule, GetISODayPipe, GetISODayPipeModule, GetISOWeekPipe, GetISOWeekPipeModule, GetISOWeekYearPipe, GetISOWeekYearPipeModule, GetISOWeeksInYearPipe, GetISOWeeksInYearPipeModule, GetMillisecondsPipe, GetMillisecondsPipeModule, GetMinutesPipe, GetMinutesPipeModule, GetMonthPipe, GetMonthPipeModule, GetOverlappingDaysInIntervalsPipe, GetOverlappingDaysInIntervalsPipeModule, GetQuarterPipe, GetQuarterPipeModule, GetSecondsPipe, GetSecondsPipeModule, GetTimePipe, GetTimePipeModule, GetUnixTimePipe, GetUnixTimePipeModule, GetWeekOfMonthPipe, GetWeekOfMonthPipeModule, GetWeekOfMonthPurePipe, GetWeekOfMonthPurePipeModule, GetWeekPipe, GetWeekPipeModule, GetWeekPurePipe, GetWeekPurePipeModule, GetWeekYearPipe, GetWeekYearPipeModule, GetWeekYearPurePipe, GetWeekYearPurePipeModule, GetWeeksInMonthPipe, GetWeeksInMonthPipeModule, GetWeeksInMonthPurePipe, GetWeeksInMonthPurePipeModule, GetYearPipe, GetYearPipeModule, IsAfterPipe, IsAfterPipeModule, IsBeforePipe, IsBeforePipeModule, IsDatePipe, IsDatePipeModule, IsEqualPipe, IsEqualPipeModule, IsExistsPipe, IsExistsPipeModule, IsFirstDayOfMonthPipe, IsFirstDayOfMonthPipeModule, IsFridayPipe, IsFridayPipeModule, IsFuturePipe, IsFuturePipeModule, IsLastDayOfMonthPipe, IsLastDayOfMonthPipeModule, IsLeapYearPipe, IsLeapYearPipeModule, IsMatchPipe, IsMatchPipeModule, IsMatchPurePipe, IsMatchPurePipeModule, IsMondayPipe, IsMondayPipeModule, IsPastPipe, IsPastPipeModule, IsSameDayPipe, IsSameDayPipeModule, IsSameHourPipe, IsSameHourPipeModule, IsSameISOWeekPipe, IsSameISOWeekPipeModule, IsSameISOWeekYearPipe, IsSameISOWeekYearPipeModule, IsSameMinutePipe, IsSameMinutePipeModule, IsSameMonthPipe, IsSameMonthPipeModule, IsSameQuarterPipe, IsSameQuarterPipeModule, IsSameSecondPipe, IsSameSecondPipeModule, IsSameWeekPipe, IsSameWeekPipeModule, IsSameWeekPurePipe, IsSameWeekPurePipeModule, IsSameYearPipe, IsSameYearPipeModule, IsSaturdayPipe, IsSaturdayPipeModule, IsSundayPipe, IsSundayPipeModule, IsThisHourPipe, IsThisHourPipeModule, IsThisISOWeekPipe, IsThisISOWeekPipeModule, IsThisMinutePipe, IsThisMinutePipeModule, IsThisMonthPipe, IsThisMonthPipeModule, IsThisQuarterPipe, IsThisQuarterPipeModule, IsThisSecondPipe, IsThisSecondPipeModule, IsThisWeekPipe, IsThisWeekPipeModule, IsThisWeekPurePipe, IsThisWeekPurePipeModule, IsThisYearPipe, IsThisYearPipeModule, IsThursdayPipe, IsThursdayPipeModule, IsTodayPipe, IsTodayPipeModule, IsTomorrowPipe, IsTomorrowPipeModule, IsTuesdayPipe, IsTuesdayPipeModule, IsValidPipe, IsValidPipeModule, IsWednesdayPipe, IsWednesdayPipeModule, IsWeekendPipe, IsWeekendPipeModule, IsWithinIntervalPipe, IsWithinIntervalPipeModule, IsYesterdayPipe, IsYesterdayPipeModule, LastDayOfDecadePipe, LastDayOfDecadePipeModule, LastDayOfISOWeekPipe, LastDayOfISOWeekPipeModule, LastDayOfISOWeekYearPipe, LastDayOfISOWeekYearPipeModule, LastDayOfMonthPipe, LastDayOfMonthPipeModule, LastDayOfQuarterPipe, LastDayOfQuarterPipeModule, LastDayOfWeekPipe, LastDayOfWeekPipeModule, LastDayOfWeekPurePipe, LastDayOfWeekPurePipeModule, LastDayOfYearPipe, LastDayOfYearPipeModule, MaxPipe, MaxPipeModule, MinPipe, MinPipeModule, ParseIsoPipe, ParseIsoPipeModule, ParsePipe, ParsePipeModule, ParsePurePipe, ParsePurePipeModule, StartOfDayPipe, StartOfDayPipeModule, StartOfDecadePipe, StartOfDecadePipeModule, StartOfHourPipe, StartOfHourPipeModule, StartOfISOWeekPipe, StartOfISOWeekPipeModule, StartOfISOWeekYearPipe, StartOfISOWeekYearPipeModule, StartOfMinutePipe, StartOfMinutePipeModule, StartOfMonthPipe, StartOfMonthPipeModule, StartOfQuarterPipe, StartOfQuarterPipeModule, StartOfSecondPipe, StartOfSecondPipeModule, StartOfTodayPipe, StartOfTodayPipeModule, StartOfTomorrowPipe, StartOfTomorrowPipeModule, StartOfWeekPipe, StartOfWeekPipeModule, StartOfWeekPurePipe, StartOfWeekPurePipeModule, StartOfWeekYearPipe, StartOfWeekYearPipeModule, StartOfWeekYearPurePipe, StartOfWeekYearPurePipeModule, StartOfYearPipe, StartOfYearPipeModule, StartOfYesterdayPipe, StartOfYesterdayPipeModule, SubDaysPipe, SubDaysPipeModule, SubHoursPipe, SubHoursPipeModule, SubISOWeekYearsPipe, SubISOWeekYearsPipeModule, SubMillisecondsPipe, SubMillisecondsPipeModule, SubMinutesPipe, SubMinutesPipeModule, SubMonthsPipe, SubMonthsPipeModule, SubQuartersPipe, SubQuartersPipeModule, SubSecondsPipe, SubSecondsPipeModule, SubWeeksPipe, SubWeeksPipeModule, SubYearsPipe, SubYearsPipeModule, WeekdayNamePipe, WeekdayNamePipeModule, calculateLocale };
//# sourceMappingURL=ngx-date-fns.mjs.map
