import { NgModule, Pipe } from '@angular/core';
import isPast from 'date-fns/isPast';
import * as i0 from "@angular/core";
export class IsPastPipe {
    transform(date) {
        return isPast(date);
    }
}
IsPastPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsPastPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsPastPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsPastPipe, name: "dfnsIsPast" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsPastPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsIsPast' }]
        }] });
export class IsPastPipeModule {
}
IsPastPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsPastPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsPastPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsPastPipeModule, declarations: [IsPastPipe], exports: [IsPastPipe] });
IsPastPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsPastPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsPastPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsPastPipe],
                    exports: [IsPastPipe]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtcGFzdC5waXBlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbGliL3NyYy9saWIvaXMtcGFzdC5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUU5RCxPQUFPLE1BQU0sTUFBTSxpQkFBaUIsQ0FBQzs7QUFHckMsTUFBTSxPQUFPLFVBQVU7SUFDckIsU0FBUyxDQUFDLElBQXNCO1FBQzlCLE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3RCLENBQUM7O3VHQUhVLFVBQVU7cUdBQVYsVUFBVTsyRkFBVixVQUFVO2tCQUR0QixJQUFJO21CQUFDLEVBQUUsSUFBSSxFQUFFLFlBQVksRUFBRTs7QUFXNUIsTUFBTSxPQUFPLGdCQUFnQjs7NkdBQWhCLGdCQUFnQjs4R0FBaEIsZ0JBQWdCLGlCQVZoQixVQUFVLGFBQVYsVUFBVTs4R0FVVixnQkFBZ0I7MkZBQWhCLGdCQUFnQjtrQkFKNUIsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsQ0FBQyxVQUFVLENBQUM7b0JBQzFCLE9BQU8sRUFBRSxDQUFDLFVBQVUsQ0FBQztpQkFDdEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRGF0ZUZuc0lucHV0RGF0ZSB9IGZyb20gJy4vdHlwZXMnO1xuaW1wb3J0IGlzUGFzdCBmcm9tICdkYXRlLWZucy9pc1Bhc3QnO1xuXG5AUGlwZSh7IG5hbWU6ICdkZm5zSXNQYXN0JyB9KVxuZXhwb3J0IGNsYXNzIElzUGFzdFBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgdHJhbnNmb3JtKGRhdGU6IERhdGVGbnNJbnB1dERhdGUpOiBib29sZWFuIHtcbiAgICByZXR1cm4gaXNQYXN0KGRhdGUpO1xuICB9XG59XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW0lzUGFzdFBpcGVdLFxuICBleHBvcnRzOiBbSXNQYXN0UGlwZV1cbn0pXG5leHBvcnQgY2xhc3MgSXNQYXN0UGlwZU1vZHVsZSB7fVxuIl19