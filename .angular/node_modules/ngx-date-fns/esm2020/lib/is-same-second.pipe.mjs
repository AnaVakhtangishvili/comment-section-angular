import { NgModule, Pipe } from '@angular/core';
import isSameSecond from 'date-fns/isSameSecond';
import * as i0 from "@angular/core";
export class IsSameSecondPipe {
    transform(dateLeft, dateRight) {
        return isSameSecond(dateLeft, dateRight);
    }
}
IsSameSecondPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameSecondPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsSameSecondPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameSecondPipe, name: "dfnsIsSameSecond" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameSecondPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsSameSecond'
                }]
        }] });
export class IsSameSecondPipeModule {
}
IsSameSecondPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameSecondPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsSameSecondPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameSecondPipeModule, declarations: [IsSameSecondPipe], exports: [IsSameSecondPipe] });
IsSameSecondPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameSecondPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameSecondPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsSameSecondPipe],
                    exports: [IsSameSecondPipe]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtc2FtZS1zZWNvbmQucGlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2xpYi9zcmMvbGliL2lzLXNhbWUtc2Vjb25kLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBRTlELE9BQU8sWUFBWSxNQUFNLHVCQUF1QixDQUFDOztBQUtqRCxNQUFNLE9BQU8sZ0JBQWdCO0lBRTNCLFNBQVMsQ0FBQyxRQUEwQixFQUFFLFNBQTJCO1FBQy9ELE9BQU8sWUFBWSxDQUFDLFFBQVEsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUMzQyxDQUFDOzs2R0FKVSxnQkFBZ0I7MkdBQWhCLGdCQUFnQjsyRkFBaEIsZ0JBQWdCO2tCQUg1QixJQUFJO21CQUFDO29CQUNKLElBQUksRUFBRSxrQkFBa0I7aUJBQ3pCOztBQWFELE1BQU0sT0FBTyxzQkFBc0I7O21IQUF0QixzQkFBc0I7b0hBQXRCLHNCQUFzQixpQkFadEIsZ0JBQWdCLGFBQWhCLGdCQUFnQjtvSEFZaEIsc0JBQXNCOzJGQUF0QixzQkFBc0I7a0JBSmxDLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFLENBQUMsZ0JBQWdCLENBQUM7b0JBQ2hDLE9BQU8sRUFBRSxDQUFDLGdCQUFnQixDQUFDO2lCQUM1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEYXRlRm5zSW5wdXREYXRlIH0gZnJvbSAnLi90eXBlcyc7XG5pbXBvcnQgaXNTYW1lU2Vjb25kIGZyb20gJ2RhdGUtZm5zL2lzU2FtZVNlY29uZCc7XG5cbkBQaXBlKHtcbiAgbmFtZTogJ2RmbnNJc1NhbWVTZWNvbmQnXG59KVxuZXhwb3J0IGNsYXNzIElzU2FtZVNlY29uZFBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcblxuICB0cmFuc2Zvcm0oZGF0ZUxlZnQ6IERhdGVGbnNJbnB1dERhdGUsIGRhdGVSaWdodDogRGF0ZUZuc0lucHV0RGF0ZSk6IGJvb2xlYW4ge1xuICAgIHJldHVybiBpc1NhbWVTZWNvbmQoZGF0ZUxlZnQsIGRhdGVSaWdodCk7XG4gIH1cblxufVxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtJc1NhbWVTZWNvbmRQaXBlXSxcbiAgZXhwb3J0czogW0lzU2FtZVNlY29uZFBpcGVdXG59KVxuZXhwb3J0IGNsYXNzIElzU2FtZVNlY29uZFBpcGVNb2R1bGUgeyB9XG4iXX0=