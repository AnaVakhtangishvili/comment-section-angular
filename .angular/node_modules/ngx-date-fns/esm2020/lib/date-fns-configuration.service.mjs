import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
export class DateFnsConfigurationService {
    constructor() {
        this.localeChanged = new Subject();
    }
    locale() {
        return this.locale$;
    }
    setLocale(locale) {
        this.locale$ = locale;
        this.localeChanged.next();
    }
}
DateFnsConfigurationService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DateFnsConfigurationService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
DateFnsConfigurationService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DateFnsConfigurationService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DateFnsConfigurationService, decorators: [{
            type: Injectable,
            args: [{ providedIn: 'root' }]
        }] });
/**
 * Helper function used by all pipes to calculate locale
 */
export const calculateLocale = (options, config) => {
    const configLocale = config.locale();
    if (!options && configLocale) {
        return { locale: configLocale };
    }
    if (options && !options.locale && configLocale) {
        return {
            ...options,
            locale: configLocale
        };
    }
    return options;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1mbnMtY29uZmlndXJhdGlvbi5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbGliL3NyYy9saWIvZGF0ZS1mbnMtY29uZmlndXJhdGlvbi5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQzs7QUFzQi9CLE1BQU0sT0FBTywyQkFBMkI7SUFEeEM7UUFFUyxrQkFBYSxHQUFrQixJQUFJLE9BQU8sRUFBRSxDQUFDO0tBV3JEO0lBUkMsTUFBTTtRQUNKLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUN0QixDQUFDO0lBRUQsU0FBUyxDQUFDLE1BQTBCO1FBQ2xDLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDNUIsQ0FBQzs7d0hBWFUsMkJBQTJCOzRIQUEzQiwyQkFBMkIsY0FEZCxNQUFNOzJGQUNuQiwyQkFBMkI7a0JBRHZDLFVBQVU7bUJBQUMsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFOztBQWVsQzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FBRyxDQUM3QixPQUF3QyxFQUN4QyxNQUE0QixFQUNLLEVBQUU7SUFDbkMsTUFBTSxZQUFZLEdBQUcsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBRXJDLElBQUksQ0FBQyxPQUFPLElBQUksWUFBWSxFQUFFO1FBQzVCLE9BQU8sRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLENBQUM7S0FDakM7SUFFRCxJQUFJLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLElBQUksWUFBWSxFQUFFO1FBQzlDLE9BQU87WUFDTCxHQUFHLE9BQU87WUFDVixNQUFNLEVBQUUsWUFBWTtTQUNyQixDQUFDO0tBQ0g7SUFFRCxPQUFPLE9BQU8sQ0FBQztBQUNqQixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBMb2NhbGUgfSBmcm9tICdkYXRlLWZucyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGF0ZUZuc0NvbmZpZ3VyYXRpb24ge1xuICAvKipcbiAgICogT2JzZXJ2YWJsZSBsYW5ndWFnZS1hd2FyZSBwaXBlcyBzdWJzY3JpYmUgdG8gZ2V0IG5vdGlmaWVkIHdoZW4gdGhlIGxvY2FsZSBjaGFuZ2VzLFxuICAgKiB0aGlzIGlzIHVzZWZ1bCB3aGVuIHBpcGVzIGxpdmUgaW4gYW4gT25QdXNoIGNvbXBvbmVudC5cbiAgICovXG4gIGxvY2FsZUNoYW5nZWQ6IFN1YmplY3Q8dm9pZD47XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIGRlZmF1bHQgbG9jYWxlIHVzZWQgYnkgZGF0ZS1mbnNcbiAgICovXG4gIGxvY2FsZSgpOiBMb2NhbGUgfCB1bmRlZmluZWQ7XG5cbiAgLyoqXG4gICAqIFNldHMgdGhlIGRlZmF1bHQgbG9jYWxlIHVzZWQgYnkgZGF0ZS1mbnNcbiAgICovXG4gIHNldExvY2FsZShsb2NhbGU6IExvY2FsZSB8IHVuZGVmaW5lZCk6IHZvaWQ7XG59XG5cbkBJbmplY3RhYmxlKHsgcHJvdmlkZWRJbjogJ3Jvb3QnIH0pXG5leHBvcnQgY2xhc3MgRGF0ZUZuc0NvbmZpZ3VyYXRpb25TZXJ2aWNlIGltcGxlbWVudHMgRGF0ZUZuc0NvbmZpZ3VyYXRpb24ge1xuICBwdWJsaWMgbG9jYWxlQ2hhbmdlZDogU3ViamVjdDx2b2lkPiA9IG5ldyBTdWJqZWN0KCk7XG4gIHByaXZhdGUgbG9jYWxlJDogTG9jYWxlIHwgdW5kZWZpbmVkO1xuXG4gIGxvY2FsZSgpOiBMb2NhbGUgfCB1bmRlZmluZWQge1xuICAgIHJldHVybiB0aGlzLmxvY2FsZSQ7XG4gIH1cblxuICBzZXRMb2NhbGUobG9jYWxlOiBMb2NhbGUgfCB1bmRlZmluZWQpOiB2b2lkIHtcbiAgICB0aGlzLmxvY2FsZSQgPSBsb2NhbGU7XG4gICAgdGhpcy5sb2NhbGVDaGFuZ2VkLm5leHQoKTtcbiAgfVxufVxuXG4vKipcbiAqIEhlbHBlciBmdW5jdGlvbiB1c2VkIGJ5IGFsbCBwaXBlcyB0byBjYWxjdWxhdGUgbG9jYWxlXG4gKi9cbmV4cG9ydCBjb25zdCBjYWxjdWxhdGVMb2NhbGUgPSAoXG4gIG9wdGlvbnM6IHsgbG9jYWxlPzogTG9jYWxlIH0gfCB1bmRlZmluZWQsXG4gIGNvbmZpZzogRGF0ZUZuc0NvbmZpZ3VyYXRpb25cbik6IHsgbG9jYWxlPzogTG9jYWxlIH0gfCB1bmRlZmluZWQgPT4ge1xuICBjb25zdCBjb25maWdMb2NhbGUgPSBjb25maWcubG9jYWxlKCk7XG5cbiAgaWYgKCFvcHRpb25zICYmIGNvbmZpZ0xvY2FsZSkge1xuICAgIHJldHVybiB7IGxvY2FsZTogY29uZmlnTG9jYWxlIH07XG4gIH1cblxuICBpZiAob3B0aW9ucyAmJiAhb3B0aW9ucy5sb2NhbGUgJiYgY29uZmlnTG9jYWxlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLm9wdGlvbnMsXG4gICAgICBsb2NhbGU6IGNvbmZpZ0xvY2FsZVxuICAgIH07XG4gIH1cblxuICByZXR1cm4gb3B0aW9ucztcbn07XG4iXX0=