import { NgModule, Pipe } from '@angular/core';
import startOfMonth from 'date-fns/startOfMonth';
import * as i0 from "@angular/core";
export class StartOfMonthPipe {
    transform(date) {
        return startOfMonth(date);
    }
}
StartOfMonthPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfMonthPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
StartOfMonthPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfMonthPipe, name: "dfnsStartOfMonth" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfMonthPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsStartOfMonth' }]
        }] });
export class StartOfMonthPipeModule {
}
StartOfMonthPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfMonthPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
StartOfMonthPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfMonthPipeModule, declarations: [StartOfMonthPipe], exports: [StartOfMonthPipe] });
StartOfMonthPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfMonthPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfMonthPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [StartOfMonthPipe],
                    exports: [StartOfMonthPipe]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhcnQtb2YtbW9udGgucGlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2xpYi9zcmMvbGliL3N0YXJ0LW9mLW1vbnRoLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBRTlELE9BQU8sWUFBWSxNQUFNLHVCQUF1QixDQUFDOztBQUdqRCxNQUFNLE9BQU8sZ0JBQWdCO0lBQzNCLFNBQVMsQ0FBQyxJQUFzQjtRQUM5QixPQUFPLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM1QixDQUFDOzs2R0FIVSxnQkFBZ0I7MkdBQWhCLGdCQUFnQjsyRkFBaEIsZ0JBQWdCO2tCQUQ1QixJQUFJO21CQUFDLEVBQUUsSUFBSSxFQUFFLGtCQUFrQixFQUFFOztBQVdsQyxNQUFNLE9BQU8sc0JBQXNCOzttSEFBdEIsc0JBQXNCO29IQUF0QixzQkFBc0IsaUJBVnRCLGdCQUFnQixhQUFoQixnQkFBZ0I7b0hBVWhCLHNCQUFzQjsyRkFBdEIsc0JBQXNCO2tCQUpsQyxRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRSxDQUFDLGdCQUFnQixDQUFDO29CQUNoQyxPQUFPLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQztpQkFDNUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRGF0ZUZuc0lucHV0RGF0ZSB9IGZyb20gJy4vdHlwZXMnO1xuaW1wb3J0IHN0YXJ0T2ZNb250aCBmcm9tICdkYXRlLWZucy9zdGFydE9mTW9udGgnO1xuXG5AUGlwZSh7IG5hbWU6ICdkZm5zU3RhcnRPZk1vbnRoJyB9KVxuZXhwb3J0IGNsYXNzIFN0YXJ0T2ZNb250aFBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgdHJhbnNmb3JtKGRhdGU6IERhdGVGbnNJbnB1dERhdGUpOiBEYXRlIHtcbiAgICByZXR1cm4gc3RhcnRPZk1vbnRoKGRhdGUpO1xuICB9XG59XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1N0YXJ0T2ZNb250aFBpcGVdLFxuICBleHBvcnRzOiBbU3RhcnRPZk1vbnRoUGlwZV1cbn0pXG5leHBvcnQgY2xhc3MgU3RhcnRPZk1vbnRoUGlwZU1vZHVsZSB7fVxuIl19