import { NgModule, Pipe } from '@angular/core';
import formatDistance from 'date-fns/formatDistance';
import { calculateLocale } from './date-fns-configuration.service';
import { isValidDate } from './utils';
import * as i0 from "@angular/core";
import * as i1 from "./date-fns-configuration.service";
export class FormatDistancePurePipe {
    constructor(config) {
        this.config = config;
    }
    transform(date, dateToCompare, options) {
        if (isValidDate(date) && isValidDate(dateToCompare)) {
            return formatDistance(date, dateToCompare, calculateLocale(options, this.config));
        }
        return '';
    }
}
FormatDistancePurePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistancePurePipe, deps: [{ token: i1.DateFnsConfigurationService }], target: i0.ɵɵFactoryTarget.Pipe });
FormatDistancePurePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistancePurePipe, name: "dfnsFormatDistancePure" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistancePurePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsFormatDistancePure' }]
        }], ctorParameters: function () { return [{ type: i1.DateFnsConfigurationService }]; } });
export class FormatDistancePurePipeModule {
}
FormatDistancePurePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistancePurePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
FormatDistancePurePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistancePurePipeModule, declarations: [FormatDistancePurePipe], exports: [FormatDistancePurePipe] });
FormatDistancePurePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistancePurePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistancePurePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [FormatDistancePurePipe],
                    exports: [FormatDistancePurePipe]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWF0LWRpc3RhbmNlLnB1cmUucGlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2xpYi9zcmMvbGliL2Zvcm1hdC1kaXN0YW5jZS5wdXJlLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBRTlELE9BQU8sY0FBYyxNQUFNLHlCQUF5QixDQUFDO0FBQ3JELE9BQU8sRUFDTCxlQUFlLEVBRWhCLE1BQU0sa0NBQWtDLENBQUM7QUFFMUMsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLFNBQVMsQ0FBQzs7O0FBR3RDLE1BQU0sT0FBTyxzQkFBc0I7SUFDakMsWUFBbUIsTUFBbUM7UUFBbkMsV0FBTSxHQUFOLE1BQU0sQ0FBNkI7SUFBRyxDQUFDO0lBRTFELFNBQVMsQ0FDUCxJQUF5QyxFQUN6QyxhQUFrRCxFQUNsRCxPQUlDO1FBRUQsSUFBSSxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksV0FBVyxDQUFDLGFBQWEsQ0FBQyxFQUFFO1lBQ25ELE9BQU8sY0FBYyxDQUNuQixJQUFJLEVBQ0osYUFBYSxFQUNiLGVBQWUsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUN0QyxDQUFDO1NBQ0g7UUFDRCxPQUFPLEVBQUUsQ0FBQztJQUNaLENBQUM7O21IQXBCVSxzQkFBc0I7aUhBQXRCLHNCQUFzQjsyRkFBdEIsc0JBQXNCO2tCQURsQyxJQUFJO21CQUFDLEVBQUUsSUFBSSxFQUFFLHdCQUF3QixFQUFFOztBQTRCeEMsTUFBTSxPQUFPLDRCQUE0Qjs7eUhBQTVCLDRCQUE0QjswSEFBNUIsNEJBQTRCLGlCQTNCNUIsc0JBQXNCLGFBQXRCLHNCQUFzQjswSEEyQnRCLDRCQUE0QjsyRkFBNUIsNEJBQTRCO2tCQUp4QyxRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRSxDQUFDLHNCQUFzQixDQUFDO29CQUN0QyxPQUFPLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQztpQkFDbEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTG9jYWxlIH0gZnJvbSAnZGF0ZS1mbnMnO1xuaW1wb3J0IGZvcm1hdERpc3RhbmNlIGZyb20gJ2RhdGUtZm5zL2Zvcm1hdERpc3RhbmNlJztcbmltcG9ydCB7XG4gIGNhbGN1bGF0ZUxvY2FsZSxcbiAgRGF0ZUZuc0NvbmZpZ3VyYXRpb25TZXJ2aWNlXG59IGZyb20gJy4vZGF0ZS1mbnMtY29uZmlndXJhdGlvbi5zZXJ2aWNlJztcbmltcG9ydCB7IERhdGVGbnNJbnB1dERhdGUgfSBmcm9tICcuL3R5cGVzJztcbmltcG9ydCB7IGlzVmFsaWREYXRlIH0gZnJvbSAnLi91dGlscyc7XG5cbkBQaXBlKHsgbmFtZTogJ2RmbnNGb3JtYXREaXN0YW5jZVB1cmUnIH0pXG5leHBvcnQgY2xhc3MgRm9ybWF0RGlzdGFuY2VQdXJlUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgY29uZmlnOiBEYXRlRm5zQ29uZmlndXJhdGlvblNlcnZpY2UpIHt9XG5cbiAgdHJhbnNmb3JtKFxuICAgIGRhdGU6IERhdGVGbnNJbnB1dERhdGUgfCBudWxsIHwgdW5kZWZpbmVkLFxuICAgIGRhdGVUb0NvbXBhcmU6IERhdGVGbnNJbnB1dERhdGUgfCBudWxsIHwgdW5kZWZpbmVkLFxuICAgIG9wdGlvbnM/OiB7XG4gICAgICBpbmNsdWRlU2Vjb25kcz86IGJvb2xlYW47XG4gICAgICBhZGRTdWZmaXg/OiBib29sZWFuO1xuICAgICAgbG9jYWxlPzogTG9jYWxlO1xuICAgIH1cbiAgKTogc3RyaW5nIHtcbiAgICBpZiAoaXNWYWxpZERhdGUoZGF0ZSkgJiYgaXNWYWxpZERhdGUoZGF0ZVRvQ29tcGFyZSkpIHtcbiAgICAgIHJldHVybiBmb3JtYXREaXN0YW5jZShcbiAgICAgICAgZGF0ZSxcbiAgICAgICAgZGF0ZVRvQ29tcGFyZSxcbiAgICAgICAgY2FsY3VsYXRlTG9jYWxlKG9wdGlvbnMsIHRoaXMuY29uZmlnKVxuICAgICAgKTtcbiAgICB9XG4gICAgcmV0dXJuICcnO1xuICB9XG59XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW0Zvcm1hdERpc3RhbmNlUHVyZVBpcGVdLFxuICBleHBvcnRzOiBbRm9ybWF0RGlzdGFuY2VQdXJlUGlwZV1cbn0pXG5leHBvcnQgY2xhc3MgRm9ybWF0RGlzdGFuY2VQdXJlUGlwZU1vZHVsZSB7fVxuIl19