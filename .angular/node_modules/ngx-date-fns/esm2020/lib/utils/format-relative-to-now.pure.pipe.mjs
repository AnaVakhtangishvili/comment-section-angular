import { NgModule, Pipe } from '@angular/core';
import formatRelative from 'date-fns/formatRelative';
import { calculateLocale } from '../date-fns-configuration.service';
import { isValidDate } from '../utils';
import * as i0 from "@angular/core";
import * as i1 from "../date-fns-configuration.service";
export class FormatRelativeToNowPurePipe {
    constructor(config) {
        this.config = config;
    }
    transform(date, options) {
        if (isValidDate(date)) {
            const dateToCompare = Date.now();
            return formatRelative(date, dateToCompare, calculateLocale(options, this.config));
        }
        return '';
    }
}
FormatRelativeToNowPurePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativeToNowPurePipe, deps: [{ token: i1.DateFnsConfigurationService }], target: i0.ɵɵFactoryTarget.Pipe });
FormatRelativeToNowPurePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativeToNowPurePipe, name: "dfnsFormatRelativeToNowPure" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativeToNowPurePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsFormatRelativeToNowPure' }]
        }], ctorParameters: function () { return [{ type: i1.DateFnsConfigurationService }]; } });
export class FormatRelativeToNowPurePipeModule {
}
FormatRelativeToNowPurePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativeToNowPurePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
FormatRelativeToNowPurePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativeToNowPurePipeModule, declarations: [FormatRelativeToNowPurePipe], exports: [FormatRelativeToNowPurePipe] });
FormatRelativeToNowPurePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativeToNowPurePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatRelativeToNowPurePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [FormatRelativeToNowPurePipe],
                    exports: [FormatRelativeToNowPurePipe]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWF0LXJlbGF0aXZlLXRvLW5vdy5wdXJlLnBpcGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9saWIvc3JjL2xpYi91dGlscy9mb3JtYXQtcmVsYXRpdmUtdG8tbm93LnB1cmUucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFFOUQsT0FBTyxjQUFjLE1BQU0seUJBQXlCLENBQUM7QUFFckQsT0FBTyxFQUVMLGVBQWUsRUFDaEIsTUFBTSxtQ0FBbUMsQ0FBQztBQUMzQyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sVUFBVSxDQUFDOzs7QUFHdkMsTUFBTSxPQUFPLDJCQUEyQjtJQUN0QyxZQUFtQixNQUFtQztRQUFuQyxXQUFNLEdBQU4sTUFBTSxDQUE2QjtJQUFHLENBQUM7SUFFMUQsU0FBUyxDQUNQLElBQXlDLEVBQ3pDLE9BR0M7UUFFRCxJQUFJLFdBQVcsQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUNyQixNQUFNLGFBQWEsR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7WUFDakMsT0FBTyxjQUFjLENBQ25CLElBQUksRUFDSixhQUFhLEVBQ2IsZUFBZSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQ3RDLENBQUM7U0FDSDtRQUNELE9BQU8sRUFBRSxDQUFDO0lBQ1osQ0FBQzs7d0hBbkJVLDJCQUEyQjtzSEFBM0IsMkJBQTJCOzJGQUEzQiwyQkFBMkI7a0JBRHZDLElBQUk7bUJBQUMsRUFBRSxJQUFJLEVBQUUsNkJBQTZCLEVBQUU7O0FBMkI3QyxNQUFNLE9BQU8saUNBQWlDOzs4SEFBakMsaUNBQWlDOytIQUFqQyxpQ0FBaUMsaUJBMUJqQywyQkFBMkIsYUFBM0IsMkJBQTJCOytIQTBCM0IsaUNBQWlDOzJGQUFqQyxpQ0FBaUM7a0JBSjdDLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFLENBQUMsMkJBQTJCLENBQUM7b0JBQzNDLE9BQU8sRUFBRSxDQUFDLDJCQUEyQixDQUFDO2lCQUN2QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBMb2NhbGUgfSBmcm9tICdkYXRlLWZucyc7XG5pbXBvcnQgZm9ybWF0UmVsYXRpdmUgZnJvbSAnZGF0ZS1mbnMvZm9ybWF0UmVsYXRpdmUnO1xuaW1wb3J0IHsgRGF0ZUZuc0lucHV0RGF0ZSB9IGZyb20gJy4uL3R5cGVzJztcbmltcG9ydCB7XG4gIERhdGVGbnNDb25maWd1cmF0aW9uU2VydmljZSxcbiAgY2FsY3VsYXRlTG9jYWxlXG59IGZyb20gJy4uL2RhdGUtZm5zLWNvbmZpZ3VyYXRpb24uc2VydmljZSc7XG5pbXBvcnQgeyBpc1ZhbGlkRGF0ZSB9IGZyb20gJy4uL3V0aWxzJztcblxuQFBpcGUoeyBuYW1lOiAnZGZuc0Zvcm1hdFJlbGF0aXZlVG9Ob3dQdXJlJyB9KVxuZXhwb3J0IGNsYXNzIEZvcm1hdFJlbGF0aXZlVG9Ob3dQdXJlUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgY29uZmlnOiBEYXRlRm5zQ29uZmlndXJhdGlvblNlcnZpY2UpIHt9XG5cbiAgdHJhbnNmb3JtKFxuICAgIGRhdGU6IERhdGVGbnNJbnB1dERhdGUgfCBudWxsIHwgdW5kZWZpbmVkLFxuICAgIG9wdGlvbnM/OiB7XG4gICAgICBsb2NhbGU/OiBMb2NhbGU7XG4gICAgICB3ZWVrU3RhcnRzT24/OiAwIHwgMSB8IDIgfCAzIHwgNCB8IDUgfCA2O1xuICAgIH1cbiAgKTogc3RyaW5nIHtcbiAgICBpZiAoaXNWYWxpZERhdGUoZGF0ZSkpIHtcbiAgICAgIGNvbnN0IGRhdGVUb0NvbXBhcmUgPSBEYXRlLm5vdygpO1xuICAgICAgcmV0dXJuIGZvcm1hdFJlbGF0aXZlKFxuICAgICAgICBkYXRlLFxuICAgICAgICBkYXRlVG9Db21wYXJlLFxuICAgICAgICBjYWxjdWxhdGVMb2NhbGUob3B0aW9ucywgdGhpcy5jb25maWcpXG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm4gJyc7XG4gIH1cbn1cblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbRm9ybWF0UmVsYXRpdmVUb05vd1B1cmVQaXBlXSxcbiAgZXhwb3J0czogW0Zvcm1hdFJlbGF0aXZlVG9Ob3dQdXJlUGlwZV1cbn0pXG5leHBvcnQgY2xhc3MgRm9ybWF0UmVsYXRpdmVUb05vd1B1cmVQaXBlTW9kdWxlIHt9XG4iXX0=