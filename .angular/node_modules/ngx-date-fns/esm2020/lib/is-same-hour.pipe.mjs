import { NgModule, Pipe } from '@angular/core';
import isSameHour from 'date-fns/isSameHour';
import * as i0 from "@angular/core";
export class IsSameHourPipe {
    transform(dateLeft, dateRight) {
        return isSameHour(dateLeft, dateRight);
    }
}
IsSameHourPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameHourPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsSameHourPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameHourPipe, name: "dfnsIsSameHour" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameHourPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsSameHour'
                }]
        }] });
export class IsSameHourPipeModule {
}
IsSameHourPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameHourPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsSameHourPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameHourPipeModule, declarations: [IsSameHourPipe], exports: [IsSameHourPipe] });
IsSameHourPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameHourPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameHourPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsSameHourPipe],
                    exports: [IsSameHourPipe]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtc2FtZS1ob3VyLnBpcGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9saWIvc3JjL2xpYi9pcy1zYW1lLWhvdXIucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFFOUQsT0FBTyxVQUFVLE1BQU0scUJBQXFCLENBQUM7O0FBSzdDLE1BQU0sT0FBTyxjQUFjO0lBRXpCLFNBQVMsQ0FBQyxRQUEwQixFQUFFLFNBQTJCO1FBQy9ELE9BQU8sVUFBVSxDQUFDLFFBQVEsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUN6QyxDQUFDOzsyR0FKVSxjQUFjO3lHQUFkLGNBQWM7MkZBQWQsY0FBYztrQkFIMUIsSUFBSTttQkFBQztvQkFDSixJQUFJLEVBQUUsZ0JBQWdCO2lCQUN2Qjs7QUFhRCxNQUFNLE9BQU8sb0JBQW9COztpSEFBcEIsb0JBQW9CO2tIQUFwQixvQkFBb0IsaUJBWnBCLGNBQWMsYUFBZCxjQUFjO2tIQVlkLG9CQUFvQjsyRkFBcEIsb0JBQW9CO2tCQUpoQyxRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRSxDQUFDLGNBQWMsQ0FBQztvQkFDOUIsT0FBTyxFQUFFLENBQUMsY0FBYyxDQUFDO2lCQUMxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEYXRlRm5zSW5wdXREYXRlIH0gZnJvbSAnLi90eXBlcyc7XG5pbXBvcnQgaXNTYW1lSG91ciBmcm9tICdkYXRlLWZucy9pc1NhbWVIb3VyJztcblxuQFBpcGUoe1xuICBuYW1lOiAnZGZuc0lzU2FtZUhvdXInXG59KVxuZXhwb3J0IGNsYXNzIElzU2FtZUhvdXJQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG5cbiAgdHJhbnNmb3JtKGRhdGVMZWZ0OiBEYXRlRm5zSW5wdXREYXRlLCBkYXRlUmlnaHQ6IERhdGVGbnNJbnB1dERhdGUpOiBib29sZWFuIHtcbiAgICByZXR1cm4gaXNTYW1lSG91cihkYXRlTGVmdCwgZGF0ZVJpZ2h0KTtcbiAgfVxuXG59XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW0lzU2FtZUhvdXJQaXBlXSxcbiAgZXhwb3J0czogW0lzU2FtZUhvdXJQaXBlXVxufSlcbmV4cG9ydCBjbGFzcyBJc1NhbWVIb3VyUGlwZU1vZHVsZSB7IH1cbiJdfQ==