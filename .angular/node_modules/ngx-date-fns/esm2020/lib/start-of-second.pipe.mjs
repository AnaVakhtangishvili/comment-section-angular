import { NgModule, Pipe } from '@angular/core';
import startOfSecond from 'date-fns/startOfSecond';
import * as i0 from "@angular/core";
export class StartOfSecondPipe {
    transform(date) {
        return startOfSecond(date);
    }
}
StartOfSecondPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfSecondPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
StartOfSecondPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfSecondPipe, name: "dfnsStartOfSecond" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfSecondPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsStartOfSecond' }]
        }] });
export class StartOfSecondPipeModule {
}
StartOfSecondPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfSecondPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
StartOfSecondPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfSecondPipeModule, declarations: [StartOfSecondPipe], exports: [StartOfSecondPipe] });
StartOfSecondPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfSecondPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfSecondPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [StartOfSecondPipe],
                    exports: [StartOfSecondPipe]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhcnQtb2Ytc2Vjb25kLnBpcGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9saWIvc3JjL2xpYi9zdGFydC1vZi1zZWNvbmQucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFFOUQsT0FBTyxhQUFhLE1BQU0sd0JBQXdCLENBQUM7O0FBR25ELE1BQU0sT0FBTyxpQkFBaUI7SUFDNUIsU0FBUyxDQUFDLElBQXNCO1FBQzlCLE9BQU8sYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzdCLENBQUM7OzhHQUhVLGlCQUFpQjs0R0FBakIsaUJBQWlCOzJGQUFqQixpQkFBaUI7a0JBRDdCLElBQUk7bUJBQUMsRUFBRSxJQUFJLEVBQUUsbUJBQW1CLEVBQUU7O0FBV25DLE1BQU0sT0FBTyx1QkFBdUI7O29IQUF2Qix1QkFBdUI7cUhBQXZCLHVCQUF1QixpQkFWdkIsaUJBQWlCLGFBQWpCLGlCQUFpQjtxSEFVakIsdUJBQXVCOzJGQUF2Qix1QkFBdUI7a0JBSm5DLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFLENBQUMsaUJBQWlCLENBQUM7b0JBQ2pDLE9BQU8sRUFBRSxDQUFDLGlCQUFpQixDQUFDO2lCQUM3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEYXRlRm5zSW5wdXREYXRlIH0gZnJvbSAnLi90eXBlcyc7XG5pbXBvcnQgc3RhcnRPZlNlY29uZCBmcm9tICdkYXRlLWZucy9zdGFydE9mU2Vjb25kJztcblxuQFBpcGUoeyBuYW1lOiAnZGZuc1N0YXJ0T2ZTZWNvbmQnIH0pXG5leHBvcnQgY2xhc3MgU3RhcnRPZlNlY29uZFBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgdHJhbnNmb3JtKGRhdGU6IERhdGVGbnNJbnB1dERhdGUpOiBEYXRlIHtcbiAgICByZXR1cm4gc3RhcnRPZlNlY29uZChkYXRlKTtcbiAgfVxufVxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtTdGFydE9mU2Vjb25kUGlwZV0sXG4gIGV4cG9ydHM6IFtTdGFydE9mU2Vjb25kUGlwZV1cbn0pXG5leHBvcnQgY2xhc3MgU3RhcnRPZlNlY29uZFBpcGVNb2R1bGUge31cbiJdfQ==