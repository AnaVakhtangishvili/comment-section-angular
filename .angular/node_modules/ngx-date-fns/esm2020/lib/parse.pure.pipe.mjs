import { NgModule, Pipe } from '@angular/core';
import parse from 'date-fns/parse';
import { calculateLocale } from './date-fns-configuration.service';
import * as i0 from "@angular/core";
import * as i1 from "./date-fns-configuration.service";
export class ParsePurePipe {
    constructor(config) {
        this.config = config;
    }
    transform(dateString, formatString, backupDate, options) {
        return parse(dateString, formatString, backupDate, calculateLocale(options, this.config));
    }
}
ParsePurePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ParsePurePipe, deps: [{ token: i1.DateFnsConfigurationService }], target: i0.ɵɵFactoryTarget.Pipe });
ParsePurePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ParsePurePipe, name: "dfnsParsePure" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ParsePurePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsParsePure' }]
        }], ctorParameters: function () { return [{ type: i1.DateFnsConfigurationService }]; } });
export class ParsePurePipeModule {
}
ParsePurePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ParsePurePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ParsePurePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ParsePurePipeModule, declarations: [ParsePurePipe], exports: [ParsePurePipe] });
ParsePurePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ParsePurePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: ParsePurePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [ParsePurePipe],
                    exports: [ParsePurePipe]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2UucHVyZS5waXBlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbGliL3NyYy9saWIvcGFyc2UucHVyZS5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUU5RCxPQUFPLEtBQUssTUFBTSxnQkFBZ0IsQ0FBQztBQUNuQyxPQUFPLEVBQ0wsZUFBZSxFQUVoQixNQUFNLGtDQUFrQyxDQUFDOzs7QUFJMUMsTUFBTSxPQUFPLGFBQWE7SUFDeEIsWUFBbUIsTUFBbUM7UUFBbkMsV0FBTSxHQUFOLE1BQU0sQ0FBNkI7SUFBRyxDQUFDO0lBRTFELFNBQVMsQ0FDUCxVQUFrQixFQUNsQixZQUFvQixFQUNwQixVQUE0QixFQUM1QixPQU1DO1FBRUQsT0FBTyxLQUFLLENBQ1YsVUFBVSxFQUNWLFlBQVksRUFDWixVQUFVLEVBQ1YsZUFBZSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQ3RDLENBQUM7SUFDSixDQUFDOzswR0FyQlUsYUFBYTt3R0FBYixhQUFhOzJGQUFiLGFBQWE7a0JBRHpCLElBQUk7bUJBQUMsRUFBRSxJQUFJLEVBQUUsZUFBZSxFQUFFOztBQTZCL0IsTUFBTSxPQUFPLG1CQUFtQjs7Z0hBQW5CLG1CQUFtQjtpSEFBbkIsbUJBQW1CLGlCQTVCbkIsYUFBYSxhQUFiLGFBQWE7aUhBNEJiLG1CQUFtQjsyRkFBbkIsbUJBQW1CO2tCQUovQixRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRSxDQUFDLGFBQWEsQ0FBQztvQkFDN0IsT0FBTyxFQUFFLENBQUMsYUFBYSxDQUFDO2lCQUN6QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBMb2NhbGUgfSBmcm9tICdkYXRlLWZucyc7XG5pbXBvcnQgcGFyc2UgZnJvbSAnZGF0ZS1mbnMvcGFyc2UnO1xuaW1wb3J0IHtcbiAgY2FsY3VsYXRlTG9jYWxlLFxuICBEYXRlRm5zQ29uZmlndXJhdGlvblNlcnZpY2Vcbn0gZnJvbSAnLi9kYXRlLWZucy1jb25maWd1cmF0aW9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgRGF0ZUZuc0lucHV0RGF0ZSB9IGZyb20gJy4vdHlwZXMnO1xuXG5AUGlwZSh7IG5hbWU6ICdkZm5zUGFyc2VQdXJlJyB9KVxuZXhwb3J0IGNsYXNzIFBhcnNlUHVyZVBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgY29uc3RydWN0b3IocHVibGljIGNvbmZpZzogRGF0ZUZuc0NvbmZpZ3VyYXRpb25TZXJ2aWNlKSB7fVxuXG4gIHRyYW5zZm9ybShcbiAgICBkYXRlU3RyaW5nOiBzdHJpbmcsXG4gICAgZm9ybWF0U3RyaW5nOiBzdHJpbmcsXG4gICAgYmFja3VwRGF0ZTogRGF0ZUZuc0lucHV0RGF0ZSxcbiAgICBvcHRpb25zPzoge1xuICAgICAgbG9jYWxlPzogTG9jYWxlO1xuICAgICAgd2Vla1N0YXJ0c09uPzogMCB8IDEgfCAyIHwgMyB8IDQgfCA1IHwgNjtcbiAgICAgIGZpcnN0V2Vla0NvbnRhaW5zRGF0ZT86IG51bWJlcjtcbiAgICAgIHVzZUFkZGl0aW9uYWxXZWVrWWVhclRva2Vucz86IGJvb2xlYW47XG4gICAgICB1c2VBZGRpdGlvbmFsRGF5T2ZZZWFyVG9rZW5zPzogYm9vbGVhbjtcbiAgICB9XG4gICk6IERhdGUge1xuICAgIHJldHVybiBwYXJzZShcbiAgICAgIGRhdGVTdHJpbmcsXG4gICAgICBmb3JtYXRTdHJpbmcsXG4gICAgICBiYWNrdXBEYXRlLFxuICAgICAgY2FsY3VsYXRlTG9jYWxlKG9wdGlvbnMsIHRoaXMuY29uZmlnKVxuICAgICk7XG4gIH1cbn1cblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbUGFyc2VQdXJlUGlwZV0sXG4gIGV4cG9ydHM6IFtQYXJzZVB1cmVQaXBlXVxufSlcbmV4cG9ydCBjbGFzcyBQYXJzZVB1cmVQaXBlTW9kdWxlIHt9XG4iXX0=