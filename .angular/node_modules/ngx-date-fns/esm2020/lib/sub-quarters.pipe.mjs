import { NgModule, Pipe } from '@angular/core';
import subQuarters from 'date-fns/subQuarters';
import * as i0 from "@angular/core";
export class SubQuartersPipe {
    transform(date, amount) {
        return subQuarters(date, amount);
    }
}
SubQuartersPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubQuartersPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
SubQuartersPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubQuartersPipe, name: "dfnsSubQuarters" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubQuartersPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsSubQuarters' }]
        }] });
export class SubQuartersPipeModule {
}
SubQuartersPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubQuartersPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
SubQuartersPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubQuartersPipeModule, declarations: [SubQuartersPipe], exports: [SubQuartersPipe] });
SubQuartersPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubQuartersPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubQuartersPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [SubQuartersPipe],
                    exports: [SubQuartersPipe]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLXF1YXJ0ZXJzLnBpcGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9saWIvc3JjL2xpYi9zdWItcXVhcnRlcnMucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFFOUQsT0FBTyxXQUFXLE1BQU0sc0JBQXNCLENBQUM7O0FBRy9DLE1BQU0sT0FBTyxlQUFlO0lBQzFCLFNBQVMsQ0FBQyxJQUFzQixFQUFFLE1BQWM7UUFDOUMsT0FBTyxXQUFXLENBQUMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ25DLENBQUM7OzRHQUhVLGVBQWU7MEdBQWYsZUFBZTsyRkFBZixlQUFlO2tCQUQzQixJQUFJO21CQUFDLEVBQUUsSUFBSSxFQUFFLGlCQUFpQixFQUFFOztBQVdqQyxNQUFNLE9BQU8scUJBQXFCOztrSEFBckIscUJBQXFCO21IQUFyQixxQkFBcUIsaUJBVnJCLGVBQWUsYUFBZixlQUFlO21IQVVmLHFCQUFxQjsyRkFBckIscUJBQXFCO2tCQUpqQyxRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRSxDQUFDLGVBQWUsQ0FBQztvQkFDL0IsT0FBTyxFQUFFLENBQUMsZUFBZSxDQUFDO2lCQUMzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEYXRlRm5zSW5wdXREYXRlIH0gZnJvbSAnLi90eXBlcyc7XG5pbXBvcnQgc3ViUXVhcnRlcnMgZnJvbSAnZGF0ZS1mbnMvc3ViUXVhcnRlcnMnO1xuXG5AUGlwZSh7IG5hbWU6ICdkZm5zU3ViUXVhcnRlcnMnIH0pXG5leHBvcnQgY2xhc3MgU3ViUXVhcnRlcnNQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gIHRyYW5zZm9ybShkYXRlOiBEYXRlRm5zSW5wdXREYXRlLCBhbW91bnQ6IG51bWJlcik6IERhdGUge1xuICAgIHJldHVybiBzdWJRdWFydGVycyhkYXRlLCBhbW91bnQpO1xuICB9XG59XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1N1YlF1YXJ0ZXJzUGlwZV0sXG4gIGV4cG9ydHM6IFtTdWJRdWFydGVyc1BpcGVdXG59KVxuZXhwb3J0IGNsYXNzIFN1YlF1YXJ0ZXJzUGlwZU1vZHVsZSB7fVxuIl19