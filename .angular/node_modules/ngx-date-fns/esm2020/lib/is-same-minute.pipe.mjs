import { NgModule, Pipe } from '@angular/core';
import isSameDay from 'date-fns/isSameMinute';
import * as i0 from "@angular/core";
export class IsSameMinutePipe {
    transform(dateLeft, dateRight) {
        return isSameDay(dateLeft, dateRight);
    }
}
IsSameMinutePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameMinutePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsSameMinutePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameMinutePipe, name: "dfnsIsSameMinute" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameMinutePipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsSameMinute'
                }]
        }] });
export class IsSameMinutePipeModule {
}
IsSameMinutePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameMinutePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsSameMinutePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameMinutePipeModule, declarations: [IsSameMinutePipe], exports: [IsSameMinutePipe] });
IsSameMinutePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameMinutePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameMinutePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsSameMinutePipe],
                    exports: [IsSameMinutePipe]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtc2FtZS1taW51dGUucGlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2xpYi9zcmMvbGliL2lzLXNhbWUtbWludXRlLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBRTlELE9BQU8sU0FBUyxNQUFNLHVCQUF1QixDQUFDOztBQUs5QyxNQUFNLE9BQU8sZ0JBQWdCO0lBRTNCLFNBQVMsQ0FBQyxRQUEwQixFQUFFLFNBQTJCO1FBQy9ELE9BQU8sU0FBUyxDQUFDLFFBQVEsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUN4QyxDQUFDOzs2R0FKVSxnQkFBZ0I7MkdBQWhCLGdCQUFnQjsyRkFBaEIsZ0JBQWdCO2tCQUg1QixJQUFJO21CQUFDO29CQUNKLElBQUksRUFBRSxrQkFBa0I7aUJBQ3pCOztBQWFELE1BQU0sT0FBTyxzQkFBc0I7O21IQUF0QixzQkFBc0I7b0hBQXRCLHNCQUFzQixpQkFadEIsZ0JBQWdCLGFBQWhCLGdCQUFnQjtvSEFZaEIsc0JBQXNCOzJGQUF0QixzQkFBc0I7a0JBSmxDLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFLENBQUMsZ0JBQWdCLENBQUM7b0JBQ2hDLE9BQU8sRUFBRSxDQUFDLGdCQUFnQixDQUFDO2lCQUM1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEYXRlRm5zSW5wdXREYXRlIH0gZnJvbSAnLi90eXBlcyc7XG5pbXBvcnQgaXNTYW1lRGF5IGZyb20gJ2RhdGUtZm5zL2lzU2FtZU1pbnV0ZSc7XG5cbkBQaXBlKHtcbiAgbmFtZTogJ2RmbnNJc1NhbWVNaW51dGUnXG59KVxuZXhwb3J0IGNsYXNzIElzU2FtZU1pbnV0ZVBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcblxuICB0cmFuc2Zvcm0oZGF0ZUxlZnQ6IERhdGVGbnNJbnB1dERhdGUsIGRhdGVSaWdodDogRGF0ZUZuc0lucHV0RGF0ZSk6IGJvb2xlYW4ge1xuICAgIHJldHVybiBpc1NhbWVEYXkoZGF0ZUxlZnQsIGRhdGVSaWdodCk7XG4gIH1cblxufVxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtJc1NhbWVNaW51dGVQaXBlXSxcbiAgZXhwb3J0czogW0lzU2FtZU1pbnV0ZVBpcGVdXG59KVxuZXhwb3J0IGNsYXNzIElzU2FtZU1pbnV0ZVBpcGVNb2R1bGUgeyB9XG4iXX0=