import { NgModule, Pipe } from '@angular/core';
import { calculateLocale } from './date-fns-configuration.service';
import isSameWeek from 'date-fns/isSameWeek';
import * as i0 from "@angular/core";
import * as i1 from "./date-fns-configuration.service";
export class IsSameWeekPipe {
    constructor(config, cd) {
        this.config = config;
        this.cd = cd;
        this.localeChanged$ = this.config.localeChanged.subscribe(_ => this.cd.markForCheck());
    }
    ngOnDestroy() {
        this.localeChanged$.unsubscribe();
    }
    transform(dateLeft, dateRight, options) {
        return isSameWeek(dateLeft, dateRight, calculateLocale(options, this.config));
    }
}
IsSameWeekPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameWeekPipe, deps: [{ token: i1.DateFnsConfigurationService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Pipe });
IsSameWeekPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameWeekPipe, name: "dfnsIsSameWeek", pure: false });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameWeekPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsIsSameWeek', pure: false }]
        }], ctorParameters: function () { return [{ type: i1.DateFnsConfigurationService }, { type: i0.ChangeDetectorRef }]; } });
export class IsSameWeekPipeModule {
}
IsSameWeekPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameWeekPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsSameWeekPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameWeekPipeModule, declarations: [IsSameWeekPipe], exports: [IsSameWeekPipe] });
IsSameWeekPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameWeekPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameWeekPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsSameWeekPipe],
                    exports: [IsSameWeekPipe]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtc2FtZS13ZWVrLnBpcGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9saWIvc3JjL2xpYi9pcy1zYW1lLXdlZWsucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBRUwsUUFBUSxFQUVSLElBQUksRUFFTCxNQUFNLGVBQWUsQ0FBQztBQUd2QixPQUFPLEVBQ0wsZUFBZSxFQUVoQixNQUFNLGtDQUFrQyxDQUFDO0FBQzFDLE9BQU8sVUFBVSxNQUFNLHFCQUFxQixDQUFDOzs7QUFHN0MsTUFBTSxPQUFPLGNBQWM7SUFHekIsWUFDUyxNQUFtQyxFQUNuQyxFQUFxQjtRQURyQixXQUFNLEdBQU4sTUFBTSxDQUE2QjtRQUNuQyxPQUFFLEdBQUYsRUFBRSxDQUFtQjtRQUU1QixJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUM1RCxJQUFJLENBQUMsRUFBRSxDQUFDLFlBQVksRUFBRSxDQUN2QixDQUFDO0lBQ0osQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsY0FBYyxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ3BDLENBQUM7SUFFRCxTQUFTLENBQ1AsUUFBMEIsRUFDMUIsU0FBMkIsRUFDM0IsT0FHQztRQUVELE9BQU8sVUFBVSxDQUNmLFFBQVEsRUFDUixTQUFTLEVBQ1QsZUFBZSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQ3RDLENBQUM7SUFDSixDQUFDOzsyR0E3QlUsY0FBYzt5R0FBZCxjQUFjOzJGQUFkLGNBQWM7a0JBRDFCLElBQUk7bUJBQUMsRUFBRSxJQUFJLEVBQUUsZ0JBQWdCLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRTs7QUFxQzdDLE1BQU0sT0FBTyxvQkFBb0I7O2lIQUFwQixvQkFBb0I7a0hBQXBCLG9CQUFvQixpQkFwQ3BCLGNBQWMsYUFBZCxjQUFjO2tIQW9DZCxvQkFBb0I7MkZBQXBCLG9CQUFvQjtrQkFKaEMsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsQ0FBQyxjQUFjLENBQUM7b0JBQzlCLE9BQU8sRUFBRSxDQUFDLGNBQWMsQ0FBQztpQkFDMUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDaGFuZ2VEZXRlY3RvclJlZixcbiAgTmdNb2R1bGUsXG4gIE9uRGVzdHJveSxcbiAgUGlwZSxcbiAgUGlwZVRyYW5zZm9ybVxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERhdGVGbnNJbnB1dERhdGUsIERhdGVGbnNXZWVrSW5kZXggfSBmcm9tICcuL3R5cGVzJztcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHtcbiAgY2FsY3VsYXRlTG9jYWxlLFxuICBEYXRlRm5zQ29uZmlndXJhdGlvblNlcnZpY2Vcbn0gZnJvbSAnLi9kYXRlLWZucy1jb25maWd1cmF0aW9uLnNlcnZpY2UnO1xuaW1wb3J0IGlzU2FtZVdlZWsgZnJvbSAnZGF0ZS1mbnMvaXNTYW1lV2Vlayc7XG5cbkBQaXBlKHsgbmFtZTogJ2RmbnNJc1NhbWVXZWVrJywgcHVyZTogZmFsc2UgfSlcbmV4cG9ydCBjbGFzcyBJc1NhbWVXZWVrUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0sIE9uRGVzdHJveSB7XG4gIHByaXZhdGUgbG9jYWxlQ2hhbmdlZCQ6IFN1YnNjcmlwdGlvbjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgY29uZmlnOiBEYXRlRm5zQ29uZmlndXJhdGlvblNlcnZpY2UsXG4gICAgcHVibGljIGNkOiBDaGFuZ2VEZXRlY3RvclJlZlxuICApIHtcbiAgICB0aGlzLmxvY2FsZUNoYW5nZWQkID0gdGhpcy5jb25maWcubG9jYWxlQ2hhbmdlZC5zdWJzY3JpYmUoXyA9PlxuICAgICAgdGhpcy5jZC5tYXJrRm9yQ2hlY2soKVxuICAgICk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcbiAgICB0aGlzLmxvY2FsZUNoYW5nZWQkLnVuc3Vic2NyaWJlKCk7XG4gIH1cblxuICB0cmFuc2Zvcm0oXG4gICAgZGF0ZUxlZnQ6IERhdGVGbnNJbnB1dERhdGUsXG4gICAgZGF0ZVJpZ2h0OiBEYXRlRm5zSW5wdXREYXRlLFxuICAgIG9wdGlvbnM/OiB7XG4gICAgICBsb2NhbGU/OiBMb2NhbGU7XG4gICAgICB3ZWVrU3RhcnRzT24/OiBEYXRlRm5zV2Vla0luZGV4O1xuICAgIH1cbiAgKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIGlzU2FtZVdlZWsoXG4gICAgICBkYXRlTGVmdCxcbiAgICAgIGRhdGVSaWdodCxcbiAgICAgIGNhbGN1bGF0ZUxvY2FsZShvcHRpb25zLCB0aGlzLmNvbmZpZylcbiAgICApO1xuICB9XG59XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW0lzU2FtZVdlZWtQaXBlXSxcbiAgZXhwb3J0czogW0lzU2FtZVdlZWtQaXBlXVxufSlcbmV4cG9ydCBjbGFzcyBJc1NhbWVXZWVrUGlwZU1vZHVsZSB7fVxuIl19