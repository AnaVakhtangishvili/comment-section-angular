import { NgModule, Pipe } from '@angular/core';
import startOfHour from 'date-fns/startOfHour';
import * as i0 from "@angular/core";
export class StartOfHourPipe {
    transform(date) {
        return startOfHour(date);
    }
}
StartOfHourPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfHourPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
StartOfHourPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfHourPipe, name: "dfnsStartOfHour" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfHourPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsStartOfHour' }]
        }] });
export class StartOfHourPipeModule {
}
StartOfHourPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfHourPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
StartOfHourPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfHourPipeModule, declarations: [StartOfHourPipe], exports: [StartOfHourPipe] });
StartOfHourPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfHourPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfHourPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [StartOfHourPipe],
                    exports: [StartOfHourPipe]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhcnQtb2YtaG91ci5waXBlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbGliL3NyYy9saWIvc3RhcnQtb2YtaG91ci5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUU5RCxPQUFPLFdBQVcsTUFBTSxzQkFBc0IsQ0FBQzs7QUFHL0MsTUFBTSxPQUFPLGVBQWU7SUFDMUIsU0FBUyxDQUFDLElBQXNCO1FBQzlCLE9BQU8sV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzNCLENBQUM7OzRHQUhVLGVBQWU7MEdBQWYsZUFBZTsyRkFBZixlQUFlO2tCQUQzQixJQUFJO21CQUFDLEVBQUUsSUFBSSxFQUFFLGlCQUFpQixFQUFFOztBQVdqQyxNQUFNLE9BQU8scUJBQXFCOztrSEFBckIscUJBQXFCO21IQUFyQixxQkFBcUIsaUJBVnJCLGVBQWUsYUFBZixlQUFlO21IQVVmLHFCQUFxQjsyRkFBckIscUJBQXFCO2tCQUpqQyxRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRSxDQUFDLGVBQWUsQ0FBQztvQkFDL0IsT0FBTyxFQUFFLENBQUMsZUFBZSxDQUFDO2lCQUMzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEYXRlRm5zSW5wdXREYXRlIH0gZnJvbSAnLi90eXBlcyc7XG5pbXBvcnQgc3RhcnRPZkhvdXIgZnJvbSAnZGF0ZS1mbnMvc3RhcnRPZkhvdXInO1xuXG5AUGlwZSh7IG5hbWU6ICdkZm5zU3RhcnRPZkhvdXInIH0pXG5leHBvcnQgY2xhc3MgU3RhcnRPZkhvdXJQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gIHRyYW5zZm9ybShkYXRlOiBEYXRlRm5zSW5wdXREYXRlKTogRGF0ZSB7XG4gICAgcmV0dXJuIHN0YXJ0T2ZIb3VyKGRhdGUpO1xuICB9XG59XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1N0YXJ0T2ZIb3VyUGlwZV0sXG4gIGV4cG9ydHM6IFtTdGFydE9mSG91clBpcGVdXG59KVxuZXhwb3J0IGNsYXNzIFN0YXJ0T2ZIb3VyUGlwZU1vZHVsZSB7fVxuIl19