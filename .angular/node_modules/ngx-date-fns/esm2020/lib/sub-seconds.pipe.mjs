import { NgModule, Pipe } from '@angular/core';
import subSeconds from 'date-fns/subSeconds';
import * as i0 from "@angular/core";
export class SubSecondsPipe {
    transform(date, amount) {
        return subSeconds(date, amount);
    }
}
SubSecondsPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubSecondsPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
SubSecondsPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubSecondsPipe, name: "dfnsSubSeconds" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubSecondsPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsSubSeconds' }]
        }] });
export class SubSecondsPipeModule {
}
SubSecondsPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubSecondsPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
SubSecondsPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubSecondsPipeModule, declarations: [SubSecondsPipe], exports: [SubSecondsPipe] });
SubSecondsPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubSecondsPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: SubSecondsPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [SubSecondsPipe],
                    exports: [SubSecondsPipe]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLXNlY29uZHMucGlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2xpYi9zcmMvbGliL3N1Yi1zZWNvbmRzLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBRTlELE9BQU8sVUFBVSxNQUFNLHFCQUFxQixDQUFDOztBQUc3QyxNQUFNLE9BQU8sY0FBYztJQUN6QixTQUFTLENBQUMsSUFBc0IsRUFBRSxNQUFjO1FBQzlDLE9BQU8sVUFBVSxDQUFDLElBQUksRUFBRSxNQUFNLENBQUMsQ0FBQztJQUNsQyxDQUFDOzsyR0FIVSxjQUFjO3lHQUFkLGNBQWM7MkZBQWQsY0FBYztrQkFEMUIsSUFBSTttQkFBQyxFQUFFLElBQUksRUFBRSxnQkFBZ0IsRUFBRTs7QUFXaEMsTUFBTSxPQUFPLG9CQUFvQjs7aUhBQXBCLG9CQUFvQjtrSEFBcEIsb0JBQW9CLGlCQVZwQixjQUFjLGFBQWQsY0FBYztrSEFVZCxvQkFBb0I7MkZBQXBCLG9CQUFvQjtrQkFKaEMsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsQ0FBQyxjQUFjLENBQUM7b0JBQzlCLE9BQU8sRUFBRSxDQUFDLGNBQWMsQ0FBQztpQkFDMUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRGF0ZUZuc0lucHV0RGF0ZSB9IGZyb20gJy4vdHlwZXMnO1xuaW1wb3J0IHN1YlNlY29uZHMgZnJvbSAnZGF0ZS1mbnMvc3ViU2Vjb25kcyc7XG5cbkBQaXBlKHsgbmFtZTogJ2RmbnNTdWJTZWNvbmRzJyB9KVxuZXhwb3J0IGNsYXNzIFN1YlNlY29uZHNQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gIHRyYW5zZm9ybShkYXRlOiBEYXRlRm5zSW5wdXREYXRlLCBhbW91bnQ6IG51bWJlcik6IERhdGUge1xuICAgIHJldHVybiBzdWJTZWNvbmRzKGRhdGUsIGFtb3VudCk7XG4gIH1cbn1cblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbU3ViU2Vjb25kc1BpcGVdLFxuICBleHBvcnRzOiBbU3ViU2Vjb25kc1BpcGVdXG59KVxuZXhwb3J0IGNsYXNzIFN1YlNlY29uZHNQaXBlTW9kdWxlIHt9XG4iXX0=