import { NgModule, Pipe } from '@angular/core';
import isAfter from 'date-fns/isAfter';
import * as i0 from "@angular/core";
export class IsAfterPipe {
    transform(date, dateToCompare) {
        return isAfter(date, dateToCompare);
    }
}
IsAfterPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsAfterPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsAfterPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsAfterPipe, name: "dfnsIsAfter" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsAfterPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsIsAfter' }]
        }] });
export class IsAfterPipeModule {
}
IsAfterPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsAfterPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsAfterPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsAfterPipeModule, declarations: [IsAfterPipe], exports: [IsAfterPipe] });
IsAfterPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsAfterPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsAfterPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsAfterPipe],
                    exports: [IsAfterPipe]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtYWZ0ZXIucGlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2xpYi9zcmMvbGliL2lzLWFmdGVyLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBRTlELE9BQU8sT0FBTyxNQUFNLGtCQUFrQixDQUFDOztBQUd2QyxNQUFNLE9BQU8sV0FBVztJQUN0QixTQUFTLENBQUMsSUFBc0IsRUFBRSxhQUErQjtRQUMvRCxPQUFPLE9BQU8sQ0FBQyxJQUFJLEVBQUUsYUFBYSxDQUFDLENBQUM7SUFDdEMsQ0FBQzs7d0dBSFUsV0FBVztzR0FBWCxXQUFXOzJGQUFYLFdBQVc7a0JBRHZCLElBQUk7bUJBQUMsRUFBRSxJQUFJLEVBQUUsYUFBYSxFQUFFOztBQVc3QixNQUFNLE9BQU8saUJBQWlCOzs4R0FBakIsaUJBQWlCOytHQUFqQixpQkFBaUIsaUJBVmpCLFdBQVcsYUFBWCxXQUFXOytHQVVYLGlCQUFpQjsyRkFBakIsaUJBQWlCO2tCQUo3QixRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRSxDQUFDLFdBQVcsQ0FBQztvQkFDM0IsT0FBTyxFQUFFLENBQUMsV0FBVyxDQUFDO2lCQUN2QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEYXRlRm5zSW5wdXREYXRlIH0gZnJvbSAnLi90eXBlcyc7XG5pbXBvcnQgaXNBZnRlciBmcm9tICdkYXRlLWZucy9pc0FmdGVyJztcblxuQFBpcGUoeyBuYW1lOiAnZGZuc0lzQWZ0ZXInIH0pXG5leHBvcnQgY2xhc3MgSXNBZnRlclBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgdHJhbnNmb3JtKGRhdGU6IERhdGVGbnNJbnB1dERhdGUsIGRhdGVUb0NvbXBhcmU6IERhdGVGbnNJbnB1dERhdGUpOiBib29sZWFuIHtcbiAgICByZXR1cm4gaXNBZnRlcihkYXRlLCBkYXRlVG9Db21wYXJlKTtcbiAgfVxufVxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtJc0FmdGVyUGlwZV0sXG4gIGV4cG9ydHM6IFtJc0FmdGVyUGlwZV1cbn0pXG5leHBvcnQgY2xhc3MgSXNBZnRlclBpcGVNb2R1bGUge31cbiJdfQ==