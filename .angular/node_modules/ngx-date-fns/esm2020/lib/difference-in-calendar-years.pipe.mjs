import { NgModule, Pipe } from '@angular/core';
import differenceInCalendarYears from 'date-fns/differenceInCalendarYears';
import * as i0 from "@angular/core";
export class DifferenceInCalendarYearsPipe {
    transform(dateLeft, dateRight) {
        return differenceInCalendarYears(dateLeft, dateRight);
    }
}
DifferenceInCalendarYearsPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarYearsPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
DifferenceInCalendarYearsPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarYearsPipe, name: "dfnsDifferenceInCalendarYears" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarYearsPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsDifferenceInCalendarYears' }]
        }] });
export class DifferenceInCalendarYearsPipeModule {
}
DifferenceInCalendarYearsPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarYearsPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DifferenceInCalendarYearsPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarYearsPipeModule, declarations: [DifferenceInCalendarYearsPipe], exports: [DifferenceInCalendarYearsPipe] });
DifferenceInCalendarYearsPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarYearsPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInCalendarYearsPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [DifferenceInCalendarYearsPipe],
                    exports: [DifferenceInCalendarYearsPipe]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlmZmVyZW5jZS1pbi1jYWxlbmRhci15ZWFycy5waXBlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbGliL3NyYy9saWIvZGlmZmVyZW5jZS1pbi1jYWxlbmRhci15ZWFycy5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUU5RCxPQUFPLHlCQUF5QixNQUFNLG9DQUFvQyxDQUFDOztBQUczRSxNQUFNLE9BQU8sNkJBQTZCO0lBQ3hDLFNBQVMsQ0FBQyxRQUEwQixFQUFFLFNBQTJCO1FBQy9ELE9BQU8seUJBQXlCLENBQUMsUUFBUSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQ3hELENBQUM7OzBIQUhVLDZCQUE2Qjt3SEFBN0IsNkJBQTZCOzJGQUE3Qiw2QkFBNkI7a0JBRHpDLElBQUk7bUJBQUMsRUFBRSxJQUFJLEVBQUUsK0JBQStCLEVBQUU7O0FBVy9DLE1BQU0sT0FBTyxtQ0FBbUM7O2dJQUFuQyxtQ0FBbUM7aUlBQW5DLG1DQUFtQyxpQkFWbkMsNkJBQTZCLGFBQTdCLDZCQUE2QjtpSUFVN0IsbUNBQW1DOzJGQUFuQyxtQ0FBbUM7a0JBSi9DLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFLENBQUMsNkJBQTZCLENBQUM7b0JBQzdDLE9BQU8sRUFBRSxDQUFDLDZCQUE2QixDQUFDO2lCQUN6QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEYXRlRm5zSW5wdXREYXRlIH0gZnJvbSAnLi90eXBlcyc7XG5pbXBvcnQgZGlmZmVyZW5jZUluQ2FsZW5kYXJZZWFycyBmcm9tICdkYXRlLWZucy9kaWZmZXJlbmNlSW5DYWxlbmRhclllYXJzJztcblxuQFBpcGUoeyBuYW1lOiAnZGZuc0RpZmZlcmVuY2VJbkNhbGVuZGFyWWVhcnMnIH0pXG5leHBvcnQgY2xhc3MgRGlmZmVyZW5jZUluQ2FsZW5kYXJZZWFyc1BpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgdHJhbnNmb3JtKGRhdGVMZWZ0OiBEYXRlRm5zSW5wdXREYXRlLCBkYXRlUmlnaHQ6IERhdGVGbnNJbnB1dERhdGUpOiBudW1iZXIge1xuICAgIHJldHVybiBkaWZmZXJlbmNlSW5DYWxlbmRhclllYXJzKGRhdGVMZWZ0LCBkYXRlUmlnaHQpO1xuICB9XG59XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW0RpZmZlcmVuY2VJbkNhbGVuZGFyWWVhcnNQaXBlXSxcbiAgZXhwb3J0czogW0RpZmZlcmVuY2VJbkNhbGVuZGFyWWVhcnNQaXBlXVxufSlcbmV4cG9ydCBjbGFzcyBEaWZmZXJlbmNlSW5DYWxlbmRhclllYXJzUGlwZU1vZHVsZSB7fVxuIl19