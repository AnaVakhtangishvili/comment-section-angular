import { NgModule, Pipe } from '@angular/core';
import startOfTomorrow from 'date-fns/startOfTomorrow';
import * as i0 from "@angular/core";
export class StartOfTomorrowPipe {
    transform() {
        return startOfTomorrow();
    }
}
StartOfTomorrowPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfTomorrowPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
StartOfTomorrowPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfTomorrowPipe, name: "dfnsStartOfTomorrow" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfTomorrowPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsStartOfTomorrow' }]
        }] });
export class StartOfTomorrowPipeModule {
}
StartOfTomorrowPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfTomorrowPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
StartOfTomorrowPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfTomorrowPipeModule, declarations: [StartOfTomorrowPipe], exports: [StartOfTomorrowPipe] });
StartOfTomorrowPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfTomorrowPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfTomorrowPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [StartOfTomorrowPipe],
                    exports: [StartOfTomorrowPipe]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhcnQtb2YtdG9tb3Jyb3cucGlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2xpYi9zcmMvbGliL3N0YXJ0LW9mLXRvbW9ycm93LnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sZUFBZSxNQUFNLDBCQUEwQixDQUFDOztBQUd2RCxNQUFNLE9BQU8sbUJBQW1CO0lBQzlCLFNBQVM7UUFDUCxPQUFPLGVBQWUsRUFBRSxDQUFDO0lBQzNCLENBQUM7O2dIQUhVLG1CQUFtQjs4R0FBbkIsbUJBQW1COzJGQUFuQixtQkFBbUI7a0JBRC9CLElBQUk7bUJBQUMsRUFBRSxJQUFJLEVBQUUscUJBQXFCLEVBQUU7O0FBV3JDLE1BQU0sT0FBTyx5QkFBeUI7O3NIQUF6Qix5QkFBeUI7dUhBQXpCLHlCQUF5QixpQkFWekIsbUJBQW1CLGFBQW5CLG1CQUFtQjt1SEFVbkIseUJBQXlCOzJGQUF6Qix5QkFBeUI7a0JBSnJDLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFLENBQUMsbUJBQW1CLENBQUM7b0JBQ25DLE9BQU8sRUFBRSxDQUFDLG1CQUFtQixDQUFDO2lCQUMvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgc3RhcnRPZlRvbW9ycm93IGZyb20gJ2RhdGUtZm5zL3N0YXJ0T2ZUb21vcnJvdyc7XG5cbkBQaXBlKHsgbmFtZTogJ2RmbnNTdGFydE9mVG9tb3Jyb3cnIH0pXG5leHBvcnQgY2xhc3MgU3RhcnRPZlRvbW9ycm93UGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuICB0cmFuc2Zvcm0oKTogRGF0ZSB7XG4gICAgcmV0dXJuIHN0YXJ0T2ZUb21vcnJvdygpO1xuICB9XG59XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1N0YXJ0T2ZUb21vcnJvd1BpcGVdLFxuICBleHBvcnRzOiBbU3RhcnRPZlRvbW9ycm93UGlwZV1cbn0pXG5leHBvcnQgY2xhc3MgU3RhcnRPZlRvbW9ycm93UGlwZU1vZHVsZSB7fVxuIl19