import { NgModule, Pipe } from '@angular/core';
import isEqual from 'date-fns/isEqual';
import * as i0 from "@angular/core";
export class IsEqualPipe {
    transform(dateLeft, dateRight) {
        return isEqual(dateLeft, dateRight);
    }
}
IsEqualPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsEqualPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsEqualPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsEqualPipe, name: "dfnsIsEqual" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsEqualPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsIsEqual' }]
        }] });
export class IsEqualPipeModule {
}
IsEqualPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsEqualPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsEqualPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsEqualPipeModule, declarations: [IsEqualPipe], exports: [IsEqualPipe] });
IsEqualPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsEqualPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsEqualPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsEqualPipe],
                    exports: [IsEqualPipe]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtZXF1YWwucGlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2xpYi9zcmMvbGliL2lzLWVxdWFsLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBRTlELE9BQU8sT0FBTyxNQUFNLGtCQUFrQixDQUFDOztBQUd2QyxNQUFNLE9BQU8sV0FBVztJQUN0QixTQUFTLENBQUMsUUFBMEIsRUFBRSxTQUEyQjtRQUMvRCxPQUFPLE9BQU8sQ0FBQyxRQUFRLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDdEMsQ0FBQzs7d0dBSFUsV0FBVztzR0FBWCxXQUFXOzJGQUFYLFdBQVc7a0JBRHZCLElBQUk7bUJBQUMsRUFBRSxJQUFJLEVBQUUsYUFBYSxFQUFFOztBQVc3QixNQUFNLE9BQU8saUJBQWlCOzs4R0FBakIsaUJBQWlCOytHQUFqQixpQkFBaUIsaUJBVmpCLFdBQVcsYUFBWCxXQUFXOytHQVVYLGlCQUFpQjsyRkFBakIsaUJBQWlCO2tCQUo3QixRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRSxDQUFDLFdBQVcsQ0FBQztvQkFDM0IsT0FBTyxFQUFFLENBQUMsV0FBVyxDQUFDO2lCQUN2QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEYXRlRm5zSW5wdXREYXRlIH0gZnJvbSAnLi90eXBlcyc7XG5pbXBvcnQgaXNFcXVhbCBmcm9tICdkYXRlLWZucy9pc0VxdWFsJztcblxuQFBpcGUoeyBuYW1lOiAnZGZuc0lzRXF1YWwnIH0pXG5leHBvcnQgY2xhc3MgSXNFcXVhbFBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgdHJhbnNmb3JtKGRhdGVMZWZ0OiBEYXRlRm5zSW5wdXREYXRlLCBkYXRlUmlnaHQ6IERhdGVGbnNJbnB1dERhdGUpOiBib29sZWFuIHtcbiAgICByZXR1cm4gaXNFcXVhbChkYXRlTGVmdCwgZGF0ZVJpZ2h0KTtcbiAgfVxufVxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtJc0VxdWFsUGlwZV0sXG4gIGV4cG9ydHM6IFtJc0VxdWFsUGlwZV1cbn0pXG5leHBvcnQgY2xhc3MgSXNFcXVhbFBpcGVNb2R1bGUge31cbiJdfQ==