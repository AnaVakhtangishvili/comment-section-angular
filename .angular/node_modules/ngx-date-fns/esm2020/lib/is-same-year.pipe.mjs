import { NgModule, Pipe } from '@angular/core';
import isSameYear from 'date-fns/isSameYear';
import * as i0 from "@angular/core";
export class IsSameYearPipe {
    transform(dateLeft, dateRight) {
        return isSameYear(dateLeft, dateRight);
    }
}
IsSameYearPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameYearPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsSameYearPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameYearPipe, name: "dfnsIsSameYear" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameYearPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsIsSameYear' }]
        }] });
export class IsSameYearPipeModule {
}
IsSameYearPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameYearPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsSameYearPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameYearPipeModule, declarations: [IsSameYearPipe], exports: [IsSameYearPipe] });
IsSameYearPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameYearPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameYearPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsSameYearPipe],
                    exports: [IsSameYearPipe]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtc2FtZS15ZWFyLnBpcGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9saWIvc3JjL2xpYi9pcy1zYW1lLXllYXIucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFFOUQsT0FBTyxVQUFVLE1BQU0scUJBQXFCLENBQUM7O0FBRzdDLE1BQU0sT0FBTyxjQUFjO0lBQ3pCLFNBQVMsQ0FBQyxRQUEwQixFQUFFLFNBQTJCO1FBQy9ELE9BQU8sVUFBVSxDQUFDLFFBQVEsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUN6QyxDQUFDOzsyR0FIVSxjQUFjO3lHQUFkLGNBQWM7MkZBQWQsY0FBYztrQkFEMUIsSUFBSTttQkFBQyxFQUFFLElBQUksRUFBRSxnQkFBZ0IsRUFBRTs7QUFXaEMsTUFBTSxPQUFPLG9CQUFvQjs7aUhBQXBCLG9CQUFvQjtrSEFBcEIsb0JBQW9CLGlCQVZwQixjQUFjLGFBQWQsY0FBYztrSEFVZCxvQkFBb0I7MkZBQXBCLG9CQUFvQjtrQkFKaEMsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsQ0FBQyxjQUFjLENBQUM7b0JBQzlCLE9BQU8sRUFBRSxDQUFDLGNBQWMsQ0FBQztpQkFDMUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRGF0ZUZuc0lucHV0RGF0ZSB9IGZyb20gJy4vdHlwZXMnO1xuaW1wb3J0IGlzU2FtZVllYXIgZnJvbSAnZGF0ZS1mbnMvaXNTYW1lWWVhcic7XG5cbkBQaXBlKHsgbmFtZTogJ2RmbnNJc1NhbWVZZWFyJyB9KVxuZXhwb3J0IGNsYXNzIElzU2FtZVllYXJQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gIHRyYW5zZm9ybShkYXRlTGVmdDogRGF0ZUZuc0lucHV0RGF0ZSwgZGF0ZVJpZ2h0OiBEYXRlRm5zSW5wdXREYXRlKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIGlzU2FtZVllYXIoZGF0ZUxlZnQsIGRhdGVSaWdodCk7XG4gIH1cbn1cblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbSXNTYW1lWWVhclBpcGVdLFxuICBleHBvcnRzOiBbSXNTYW1lWWVhclBpcGVdXG59KVxuZXhwb3J0IGNsYXNzIElzU2FtZVllYXJQaXBlTW9kdWxlIHt9XG4iXX0=