import { NgModule, Pipe } from '@angular/core';
import addMonths from 'date-fns/addMonths';
import * as i0 from "@angular/core";
export class AddMonthsPipe {
    transform(date, amount) {
        return addMonths(date, amount);
    }
}
AddMonthsPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddMonthsPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
AddMonthsPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddMonthsPipe, name: "dfnsAddMonths" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddMonthsPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsAddMonths' }]
        }] });
export class AddMonthsPipeModule {
}
AddMonthsPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddMonthsPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
AddMonthsPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddMonthsPipeModule, declarations: [AddMonthsPipe], exports: [AddMonthsPipe] });
AddMonthsPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddMonthsPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddMonthsPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [AddMonthsPipe],
                    exports: [AddMonthsPipe]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkLW1vbnRocy5waXBlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbGliL3NyYy9saWIvYWRkLW1vbnRocy5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUU5RCxPQUFPLFNBQVMsTUFBTSxvQkFBb0IsQ0FBQzs7QUFHM0MsTUFBTSxPQUFPLGFBQWE7SUFDeEIsU0FBUyxDQUFDLElBQXNCLEVBQUUsTUFBYztRQUM5QyxPQUFPLFNBQVMsQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDakMsQ0FBQzs7MEdBSFUsYUFBYTt3R0FBYixhQUFhOzJGQUFiLGFBQWE7a0JBRHpCLElBQUk7bUJBQUMsRUFBRSxJQUFJLEVBQUUsZUFBZSxFQUFFOztBQVcvQixNQUFNLE9BQU8sbUJBQW1COztnSEFBbkIsbUJBQW1CO2lIQUFuQixtQkFBbUIsaUJBVm5CLGFBQWEsYUFBYixhQUFhO2lIQVViLG1CQUFtQjsyRkFBbkIsbUJBQW1CO2tCQUovQixRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRSxDQUFDLGFBQWEsQ0FBQztvQkFDN0IsT0FBTyxFQUFFLENBQUMsYUFBYSxDQUFDO2lCQUN6QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEYXRlRm5zSW5wdXREYXRlIH0gZnJvbSAnLi90eXBlcyc7XG5pbXBvcnQgYWRkTW9udGhzIGZyb20gJ2RhdGUtZm5zL2FkZE1vbnRocyc7XG5cbkBQaXBlKHsgbmFtZTogJ2RmbnNBZGRNb250aHMnIH0pXG5leHBvcnQgY2xhc3MgQWRkTW9udGhzUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuICB0cmFuc2Zvcm0oZGF0ZTogRGF0ZUZuc0lucHV0RGF0ZSwgYW1vdW50OiBudW1iZXIpOiBEYXRlIHtcbiAgICByZXR1cm4gYWRkTW9udGhzKGRhdGUsIGFtb3VudCk7XG4gIH1cbn1cblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbQWRkTW9udGhzUGlwZV0sXG4gIGV4cG9ydHM6IFtBZGRNb250aHNQaXBlXVxufSlcbmV4cG9ydCBjbGFzcyBBZGRNb250aHNQaXBlTW9kdWxlIHt9XG4iXX0=