import { NgModule, Pipe } from '@angular/core';
import differenceInMonths from 'date-fns/differenceInMonths';
import * as i0 from "@angular/core";
export class DifferenceInMonthsPipe {
    transform(dateLeft, dateRight) {
        return differenceInMonths(dateLeft, dateRight);
    }
}
DifferenceInMonthsPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMonthsPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
DifferenceInMonthsPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMonthsPipe, name: "dfnsDifferenceInMonths" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMonthsPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsDifferenceInMonths' }]
        }] });
export class DifferenceInMonthsPipeModule {
}
DifferenceInMonthsPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMonthsPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DifferenceInMonthsPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMonthsPipeModule, declarations: [DifferenceInMonthsPipe], exports: [DifferenceInMonthsPipe] });
DifferenceInMonthsPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMonthsPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: DifferenceInMonthsPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [DifferenceInMonthsPipe],
                    exports: [DifferenceInMonthsPipe]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlmZmVyZW5jZS1pbi1tb250aHMucGlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2xpYi9zcmMvbGliL2RpZmZlcmVuY2UtaW4tbW9udGhzLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBRTlELE9BQU8sa0JBQWtCLE1BQU0sNkJBQTZCLENBQUM7O0FBRzdELE1BQU0sT0FBTyxzQkFBc0I7SUFDakMsU0FBUyxDQUFDLFFBQTBCLEVBQUUsU0FBMkI7UUFDL0QsT0FBTyxrQkFBa0IsQ0FBQyxRQUFRLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDakQsQ0FBQzs7bUhBSFUsc0JBQXNCO2lIQUF0QixzQkFBc0I7MkZBQXRCLHNCQUFzQjtrQkFEbEMsSUFBSTttQkFBQyxFQUFFLElBQUksRUFBRSx3QkFBd0IsRUFBRTs7QUFXeEMsTUFBTSxPQUFPLDRCQUE0Qjs7eUhBQTVCLDRCQUE0QjswSEFBNUIsNEJBQTRCLGlCQVY1QixzQkFBc0IsYUFBdEIsc0JBQXNCOzBIQVV0Qiw0QkFBNEI7MkZBQTVCLDRCQUE0QjtrQkFKeEMsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQztvQkFDdEMsT0FBTyxFQUFFLENBQUMsc0JBQXNCLENBQUM7aUJBQ2xDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERhdGVGbnNJbnB1dERhdGUgfSBmcm9tICcuL3R5cGVzJztcbmltcG9ydCBkaWZmZXJlbmNlSW5Nb250aHMgZnJvbSAnZGF0ZS1mbnMvZGlmZmVyZW5jZUluTW9udGhzJztcblxuQFBpcGUoeyBuYW1lOiAnZGZuc0RpZmZlcmVuY2VJbk1vbnRocycgfSlcbmV4cG9ydCBjbGFzcyBEaWZmZXJlbmNlSW5Nb250aHNQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gIHRyYW5zZm9ybShkYXRlTGVmdDogRGF0ZUZuc0lucHV0RGF0ZSwgZGF0ZVJpZ2h0OiBEYXRlRm5zSW5wdXREYXRlKTogbnVtYmVyIHtcbiAgICByZXR1cm4gZGlmZmVyZW5jZUluTW9udGhzKGRhdGVMZWZ0LCBkYXRlUmlnaHQpO1xuICB9XG59XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW0RpZmZlcmVuY2VJbk1vbnRoc1BpcGVdLFxuICBleHBvcnRzOiBbRGlmZmVyZW5jZUluTW9udGhzUGlwZV1cbn0pXG5leHBvcnQgY2xhc3MgRGlmZmVyZW5jZUluTW9udGhzUGlwZU1vZHVsZSB7fVxuIl19