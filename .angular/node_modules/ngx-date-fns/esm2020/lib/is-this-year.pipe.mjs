import { NgModule, Pipe } from '@angular/core';
import isThisYear from 'date-fns/isThisYear';
import * as i0 from "@angular/core";
export class IsThisYearPipe {
    transform(date) {
        return isThisYear(date);
    }
}
IsThisYearPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisYearPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsThisYearPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisYearPipe, name: "dfnsIsThisYear" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisYearPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsThisYear'
                }]
        }] });
export class IsThisYearPipeModule {
}
IsThisYearPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisYearPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsThisYearPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisYearPipeModule, declarations: [IsThisYearPipe], exports: [IsThisYearPipe] });
IsThisYearPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisYearPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisYearPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsThisYearPipe],
                    exports: [IsThisYearPipe]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtdGhpcy15ZWFyLnBpcGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9saWIvc3JjL2xpYi9pcy10aGlzLXllYXIucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFFOUQsT0FBTyxVQUFVLE1BQU0scUJBQXFCLENBQUM7O0FBSzdDLE1BQU0sT0FBTyxjQUFjO0lBRXpCLFNBQVMsQ0FBQyxJQUFzQjtRQUM5QixPQUFPLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMxQixDQUFDOzsyR0FKVSxjQUFjO3lHQUFkLGNBQWM7MkZBQWQsY0FBYztrQkFIMUIsSUFBSTttQkFBQztvQkFDSixJQUFJLEVBQUUsZ0JBQWdCO2lCQUN2Qjs7QUFhRCxNQUFNLE9BQU8sb0JBQW9COztpSEFBcEIsb0JBQW9CO2tIQUFwQixvQkFBb0IsaUJBWnBCLGNBQWMsYUFBZCxjQUFjO2tIQVlkLG9CQUFvQjsyRkFBcEIsb0JBQW9CO2tCQUpoQyxRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRSxDQUFDLGNBQWMsQ0FBQztvQkFDOUIsT0FBTyxFQUFFLENBQUMsY0FBYyxDQUFDO2lCQUMxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEYXRlRm5zSW5wdXREYXRlIH0gZnJvbSAnLi90eXBlcyc7XG5pbXBvcnQgaXNUaGlzWWVhciBmcm9tICdkYXRlLWZucy9pc1RoaXNZZWFyJztcblxuQFBpcGUoe1xuICBuYW1lOiAnZGZuc0lzVGhpc1llYXInXG59KVxuZXhwb3J0IGNsYXNzIElzVGhpc1llYXJQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG5cbiAgdHJhbnNmb3JtKGRhdGU6IERhdGVGbnNJbnB1dERhdGUpOiBib29sZWFuIHtcbiAgICByZXR1cm4gaXNUaGlzWWVhcihkYXRlKTtcbiAgfVxuXG59XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW0lzVGhpc1llYXJQaXBlXSxcbiAgZXhwb3J0czogW0lzVGhpc1llYXJQaXBlXVxufSlcbmV4cG9ydCBjbGFzcyBJc1RoaXNZZWFyUGlwZU1vZHVsZSB7IH1cbiJdfQ==