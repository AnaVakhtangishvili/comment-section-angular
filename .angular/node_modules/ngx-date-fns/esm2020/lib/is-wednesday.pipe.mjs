import { NgModule, Pipe } from '@angular/core';
import isWednesday from 'date-fns/isWednesday';
import * as i0 from "@angular/core";
export class IsWednesdayPipe {
    transform(date) {
        return isWednesday(date);
    }
}
IsWednesdayPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsWednesdayPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsWednesdayPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsWednesdayPipe, name: "dfnsIsWednesday" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsWednesdayPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsWednesday'
                }]
        }] });
export class IsWednesdayPipeModule {
}
IsWednesdayPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsWednesdayPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsWednesdayPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsWednesdayPipeModule, declarations: [IsWednesdayPipe], exports: [IsWednesdayPipe] });
IsWednesdayPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsWednesdayPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsWednesdayPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsWednesdayPipe],
                    exports: [IsWednesdayPipe]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtd2VkbmVzZGF5LnBpcGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9saWIvc3JjL2xpYi9pcy13ZWRuZXNkYXkucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFFOUQsT0FBTyxXQUFXLE1BQU0sc0JBQXNCLENBQUM7O0FBSy9DLE1BQU0sT0FBTyxlQUFlO0lBRTFCLFNBQVMsQ0FBQyxJQUFzQjtRQUM5QixPQUFPLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMzQixDQUFDOzs0R0FKVSxlQUFlOzBHQUFmLGVBQWU7MkZBQWYsZUFBZTtrQkFIM0IsSUFBSTttQkFBQztvQkFDSixJQUFJLEVBQUUsaUJBQWlCO2lCQUN4Qjs7QUFhRCxNQUFNLE9BQU8scUJBQXFCOztrSEFBckIscUJBQXFCO21IQUFyQixxQkFBcUIsaUJBWnJCLGVBQWUsYUFBZixlQUFlO21IQVlmLHFCQUFxQjsyRkFBckIscUJBQXFCO2tCQUpqQyxRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRSxDQUFDLGVBQWUsQ0FBQztvQkFDL0IsT0FBTyxFQUFFLENBQUMsZUFBZSxDQUFDO2lCQUMzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEYXRlRm5zSW5wdXREYXRlIH0gZnJvbSAnLi90eXBlcyc7XG5pbXBvcnQgaXNXZWRuZXNkYXkgZnJvbSAnZGF0ZS1mbnMvaXNXZWRuZXNkYXknO1xuXG5AUGlwZSh7XG4gIG5hbWU6ICdkZm5zSXNXZWRuZXNkYXknXG59KVxuZXhwb3J0IGNsYXNzIElzV2VkbmVzZGF5UGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuXG4gIHRyYW5zZm9ybShkYXRlOiBEYXRlRm5zSW5wdXREYXRlKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIGlzV2VkbmVzZGF5KGRhdGUpO1xuICB9XG5cbn1cblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbSXNXZWRuZXNkYXlQaXBlXSxcbiAgZXhwb3J0czogW0lzV2VkbmVzZGF5UGlwZV1cbn0pXG5leHBvcnQgY2xhc3MgSXNXZWRuZXNkYXlQaXBlTW9kdWxlIHsgfVxuIl19