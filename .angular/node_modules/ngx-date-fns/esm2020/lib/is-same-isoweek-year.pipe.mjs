import { NgModule, Pipe } from '@angular/core';
import isSameISOWeekYear from 'date-fns/isSameISOWeekYear';
import * as i0 from "@angular/core";
export class IsSameISOWeekYearPipe {
    transform(dateLeft, dateRight) {
        return isSameISOWeekYear(dateLeft, dateRight);
    }
}
IsSameISOWeekYearPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameISOWeekYearPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsSameISOWeekYearPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameISOWeekYearPipe, name: "dfnsIsSameISOWeekYear" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameISOWeekYearPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsSameISOWeekYear'
                }]
        }] });
export class IsSameISOWeekYearPipeModule {
}
IsSameISOWeekYearPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameISOWeekYearPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsSameISOWeekYearPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameISOWeekYearPipeModule, declarations: [IsSameISOWeekYearPipe], exports: [IsSameISOWeekYearPipe] });
IsSameISOWeekYearPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameISOWeekYearPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameISOWeekYearPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsSameISOWeekYearPipe],
                    exports: [IsSameISOWeekYearPipe]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtc2FtZS1pc293ZWVrLXllYXIucGlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2xpYi9zcmMvbGliL2lzLXNhbWUtaXNvd2Vlay15ZWFyLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBRTlELE9BQU8saUJBQWlCLE1BQU0sNEJBQTRCLENBQUM7O0FBSzNELE1BQU0sT0FBTyxxQkFBcUI7SUFFaEMsU0FBUyxDQUFDLFFBQTBCLEVBQUUsU0FBMkI7UUFDL0QsT0FBTyxpQkFBaUIsQ0FBQyxRQUFRLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDaEQsQ0FBQzs7a0hBSlUscUJBQXFCO2dIQUFyQixxQkFBcUI7MkZBQXJCLHFCQUFxQjtrQkFIakMsSUFBSTttQkFBQztvQkFDSixJQUFJLEVBQUUsdUJBQXVCO2lCQUM5Qjs7QUFhRCxNQUFNLE9BQU8sMkJBQTJCOzt3SEFBM0IsMkJBQTJCO3lIQUEzQiwyQkFBMkIsaUJBWjNCLHFCQUFxQixhQUFyQixxQkFBcUI7eUhBWXJCLDJCQUEyQjsyRkFBM0IsMkJBQTJCO2tCQUp2QyxRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRSxDQUFDLHFCQUFxQixDQUFDO29CQUNyQyxPQUFPLEVBQUUsQ0FBQyxxQkFBcUIsQ0FBQztpQkFDakMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRGF0ZUZuc0lucHV0RGF0ZSB9IGZyb20gJy4vdHlwZXMnO1xuaW1wb3J0IGlzU2FtZUlTT1dlZWtZZWFyIGZyb20gJ2RhdGUtZm5zL2lzU2FtZUlTT1dlZWtZZWFyJztcblxuQFBpcGUoe1xuICBuYW1lOiAnZGZuc0lzU2FtZUlTT1dlZWtZZWFyJ1xufSlcbmV4cG9ydCBjbGFzcyBJc1NhbWVJU09XZWVrWWVhclBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcblxuICB0cmFuc2Zvcm0oZGF0ZUxlZnQ6IERhdGVGbnNJbnB1dERhdGUsIGRhdGVSaWdodDogRGF0ZUZuc0lucHV0RGF0ZSk6IGJvb2xlYW4ge1xuICAgIHJldHVybiBpc1NhbWVJU09XZWVrWWVhcihkYXRlTGVmdCwgZGF0ZVJpZ2h0KTtcbiAgfVxuXG59XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW0lzU2FtZUlTT1dlZWtZZWFyUGlwZV0sXG4gIGV4cG9ydHM6IFtJc1NhbWVJU09XZWVrWWVhclBpcGVdXG59KVxuZXhwb3J0IGNsYXNzIElzU2FtZUlTT1dlZWtZZWFyUGlwZU1vZHVsZSB7IH1cbiJdfQ==