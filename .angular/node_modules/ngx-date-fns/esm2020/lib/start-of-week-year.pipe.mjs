import { Pipe, NgModule } from '@angular/core';
import startOfWeekYear from 'date-fns/startOfWeekYear';
import { calculateLocale } from './date-fns-configuration.service';
import * as i0 from "@angular/core";
import * as i1 from "./date-fns-configuration.service";
export class StartOfWeekYearPipe {
    constructor(config, cd) {
        this.config = config;
        this.cd = cd;
        this.localeChanged$ = this.config.localeChanged.subscribe(_ => this.cd.markForCheck());
    }
    ngOnDestroy() {
        this.localeChanged$.unsubscribe();
    }
    transform(date, options) {
        return startOfWeekYear(date, calculateLocale(options, this.config));
    }
}
StartOfWeekYearPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekYearPipe, deps: [{ token: i1.DateFnsConfigurationService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Pipe });
StartOfWeekYearPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekYearPipe, name: "dfnsStartOfWeekYear", pure: false });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekYearPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsStartOfWeekYear', pure: false }]
        }], ctorParameters: function () { return [{ type: i1.DateFnsConfigurationService }, { type: i0.ChangeDetectorRef }]; } });
export class StartOfWeekYearPipeModule {
}
StartOfWeekYearPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekYearPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
StartOfWeekYearPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekYearPipeModule, declarations: [StartOfWeekYearPipe], exports: [StartOfWeekYearPipe] });
StartOfWeekYearPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekYearPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: StartOfWeekYearPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [StartOfWeekYearPipe],
                    exports: [StartOfWeekYearPipe]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhcnQtb2Ytd2Vlay15ZWFyLnBpcGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9saWIvc3JjL2xpYi9zdGFydC1vZi13ZWVrLXllYXIucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsSUFBSSxFQUlKLFFBQVEsRUFDVCxNQUFNLGVBQWUsQ0FBQztBQU92QixPQUFPLGVBQWUsTUFBTSwwQkFBMEIsQ0FBQztBQUV2RCxPQUFPLEVBRUwsZUFBZSxFQUNoQixNQUFNLGtDQUFrQyxDQUFDOzs7QUFHMUMsTUFBTSxPQUFPLG1CQUFtQjtJQUc5QixZQUNTLE1BQW1DLEVBQ25DLEVBQXFCO1FBRHJCLFdBQU0sR0FBTixNQUFNLENBQTZCO1FBQ25DLE9BQUUsR0FBRixFQUFFLENBQW1CO1FBRTVCLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQzVELElBQUksQ0FBQyxFQUFFLENBQUMsWUFBWSxFQUFFLENBQ3ZCLENBQUM7SUFDSixDQUFDO0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxjQUFjLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDcEMsQ0FBQztJQUVELFNBQVMsQ0FDUCxJQUFzQixFQUN0QixPQUlDO1FBRUQsT0FBTyxlQUFlLENBQUMsSUFBSSxFQUFFLGVBQWUsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFDdEUsQ0FBQzs7Z0hBekJVLG1CQUFtQjs4R0FBbkIsbUJBQW1COzJGQUFuQixtQkFBbUI7a0JBRC9CLElBQUk7bUJBQUMsRUFBRSxJQUFJLEVBQUUscUJBQXFCLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRTs7QUFpQ2xELE1BQU0sT0FBTyx5QkFBeUI7O3NIQUF6Qix5QkFBeUI7dUhBQXpCLHlCQUF5QixpQkFoQ3pCLG1CQUFtQixhQUFuQixtQkFBbUI7dUhBZ0NuQix5QkFBeUI7MkZBQXpCLHlCQUF5QjtrQkFKckMsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQztvQkFDbkMsT0FBTyxFQUFFLENBQUMsbUJBQW1CLENBQUM7aUJBQy9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgUGlwZSxcbiAgUGlwZVRyYW5zZm9ybSxcbiAgT25EZXN0cm95LFxuICBDaGFuZ2VEZXRlY3RvclJlZixcbiAgTmdNb2R1bGVcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICBEYXRlRm5zSW5wdXREYXRlLFxuICBEYXRlRm5zV2Vla0luZGV4LFxuICBEYXRlRm5zRmlyc3RXZWVrRGF5c1xufSBmcm9tICcuL3R5cGVzJztcbmltcG9ydCB7IExvY2FsZSB9IGZyb20gJ2RhdGUtZm5zJztcbmltcG9ydCBzdGFydE9mV2Vla1llYXIgZnJvbSAnZGF0ZS1mbnMvc3RhcnRPZldlZWtZZWFyJztcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHtcbiAgRGF0ZUZuc0NvbmZpZ3VyYXRpb25TZXJ2aWNlLFxuICBjYWxjdWxhdGVMb2NhbGVcbn0gZnJvbSAnLi9kYXRlLWZucy1jb25maWd1cmF0aW9uLnNlcnZpY2UnO1xuXG5AUGlwZSh7IG5hbWU6ICdkZm5zU3RhcnRPZldlZWtZZWFyJywgcHVyZTogZmFsc2UgfSlcbmV4cG9ydCBjbGFzcyBTdGFydE9mV2Vla1llYXJQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSwgT25EZXN0cm95IHtcbiAgcHJpdmF0ZSBsb2NhbGVDaGFuZ2VkJDogU3Vic2NyaXB0aW9uO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyBjb25maWc6IERhdGVGbnNDb25maWd1cmF0aW9uU2VydmljZSxcbiAgICBwdWJsaWMgY2Q6IENoYW5nZURldGVjdG9yUmVmXG4gICkge1xuICAgIHRoaXMubG9jYWxlQ2hhbmdlZCQgPSB0aGlzLmNvbmZpZy5sb2NhbGVDaGFuZ2VkLnN1YnNjcmliZShfID0+XG4gICAgICB0aGlzLmNkLm1hcmtGb3JDaGVjaygpXG4gICAgKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCk6IHZvaWQge1xuICAgIHRoaXMubG9jYWxlQ2hhbmdlZCQudW5zdWJzY3JpYmUoKTtcbiAgfVxuXG4gIHRyYW5zZm9ybShcbiAgICBkYXRlOiBEYXRlRm5zSW5wdXREYXRlLFxuICAgIG9wdGlvbnM/OiB7XG4gICAgICBsb2NhbGU/OiBMb2NhbGU7XG4gICAgICB3ZWVrU3RhcnRzT24/OiBEYXRlRm5zV2Vla0luZGV4O1xuICAgICAgZmlyc3RXZWVrQ29udGFpbnNEYXRlPzogRGF0ZUZuc0ZpcnN0V2Vla0RheXM7XG4gICAgfVxuICApOiBEYXRlIHtcbiAgICByZXR1cm4gc3RhcnRPZldlZWtZZWFyKGRhdGUsIGNhbGN1bGF0ZUxvY2FsZShvcHRpb25zLCB0aGlzLmNvbmZpZykpO1xuICB9XG59XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1N0YXJ0T2ZXZWVrWWVhclBpcGVdLFxuICBleHBvcnRzOiBbU3RhcnRPZldlZWtZZWFyUGlwZV1cbn0pXG5leHBvcnQgY2xhc3MgU3RhcnRPZldlZWtZZWFyUGlwZU1vZHVsZSB7fVxuIl19