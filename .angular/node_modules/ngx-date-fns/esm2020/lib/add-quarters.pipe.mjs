import { NgModule, Pipe } from '@angular/core';
import addQuarters from 'date-fns/addQuarters';
import * as i0 from "@angular/core";
export class AddQuartersPipe {
    transform(date, amount) {
        return addQuarters(date, amount);
    }
}
AddQuartersPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddQuartersPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
AddQuartersPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddQuartersPipe, name: "dfnsAddQuarters" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddQuartersPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsAddQuarters' }]
        }] });
export class AddQuartersPipeModule {
}
AddQuartersPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddQuartersPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
AddQuartersPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddQuartersPipeModule, declarations: [AddQuartersPipe], exports: [AddQuartersPipe] });
AddQuartersPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddQuartersPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: AddQuartersPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [AddQuartersPipe],
                    exports: [AddQuartersPipe]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkLXF1YXJ0ZXJzLnBpcGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9saWIvc3JjL2xpYi9hZGQtcXVhcnRlcnMucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFFOUQsT0FBTyxXQUFXLE1BQU0sc0JBQXNCLENBQUM7O0FBRy9DLE1BQU0sT0FBTyxlQUFlO0lBQzFCLFNBQVMsQ0FBQyxJQUFzQixFQUFFLE1BQWM7UUFDOUMsT0FBTyxXQUFXLENBQUMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ25DLENBQUM7OzRHQUhVLGVBQWU7MEdBQWYsZUFBZTsyRkFBZixlQUFlO2tCQUQzQixJQUFJO21CQUFDLEVBQUUsSUFBSSxFQUFFLGlCQUFpQixFQUFFOztBQVdqQyxNQUFNLE9BQU8scUJBQXFCOztrSEFBckIscUJBQXFCO21IQUFyQixxQkFBcUIsaUJBVnJCLGVBQWUsYUFBZixlQUFlO21IQVVmLHFCQUFxQjsyRkFBckIscUJBQXFCO2tCQUpqQyxRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRSxDQUFDLGVBQWUsQ0FBQztvQkFDL0IsT0FBTyxFQUFFLENBQUMsZUFBZSxDQUFDO2lCQUMzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEYXRlRm5zSW5wdXREYXRlIH0gZnJvbSAnLi90eXBlcyc7XG5pbXBvcnQgYWRkUXVhcnRlcnMgZnJvbSAnZGF0ZS1mbnMvYWRkUXVhcnRlcnMnO1xuXG5AUGlwZSh7IG5hbWU6ICdkZm5zQWRkUXVhcnRlcnMnIH0pXG5leHBvcnQgY2xhc3MgQWRkUXVhcnRlcnNQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gIHRyYW5zZm9ybShkYXRlOiBEYXRlRm5zSW5wdXREYXRlLCBhbW91bnQ6IG51bWJlcik6IERhdGUge1xuICAgIHJldHVybiBhZGRRdWFydGVycyhkYXRlLCBhbW91bnQpO1xuICB9XG59XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW0FkZFF1YXJ0ZXJzUGlwZV0sXG4gIGV4cG9ydHM6IFtBZGRRdWFydGVyc1BpcGVdXG59KVxuZXhwb3J0IGNsYXNzIEFkZFF1YXJ0ZXJzUGlwZU1vZHVsZSB7fVxuIl19