import { NgModule, Pipe } from '@angular/core';
import formatDistanceToNow from 'date-fns/formatDistanceToNow';
import { calculateLocale } from './date-fns-configuration.service';
import { isValidDate } from './utils';
import * as i0 from "@angular/core";
import * as i1 from "./date-fns-configuration.service";
export class FormatDistanceToNowPurePipe {
    constructor(config) {
        this.config = config;
    }
    transform(date, options) {
        if (isValidDate(date)) {
            return formatDistanceToNow(date, calculateLocale(options, this.config));
        }
        return '';
    }
}
FormatDistanceToNowPurePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowPurePipe, deps: [{ token: i1.DateFnsConfigurationService }], target: i0.ɵɵFactoryTarget.Pipe });
FormatDistanceToNowPurePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowPurePipe, name: "dfnsFormatDistanceToNowPure" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowPurePipe, decorators: [{
            type: Pipe,
            args: [{ name: 'dfnsFormatDistanceToNowPure' }]
        }], ctorParameters: function () { return [{ type: i1.DateFnsConfigurationService }]; } });
export class FormatDistanceToNowPurePipeModule {
}
FormatDistanceToNowPurePipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowPurePipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
FormatDistanceToNowPurePipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowPurePipeModule, declarations: [FormatDistanceToNowPurePipe], exports: [FormatDistanceToNowPurePipe] });
FormatDistanceToNowPurePipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowPurePipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: FormatDistanceToNowPurePipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [FormatDistanceToNowPurePipe],
                    exports: [FormatDistanceToNowPurePipe]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWF0LWRpc3RhbmNlLXRvLW5vdy5wdXJlLnBpcGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9saWIvc3JjL2xpYi9mb3JtYXQtZGlzdGFuY2UtdG8tbm93LnB1cmUucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFFOUQsT0FBTyxtQkFBbUIsTUFBTSw4QkFBOEIsQ0FBQztBQUMvRCxPQUFPLEVBQ0wsZUFBZSxFQUVoQixNQUFNLGtDQUFrQyxDQUFDO0FBRTFDLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxTQUFTLENBQUM7OztBQUd0QyxNQUFNLE9BQU8sMkJBQTJCO0lBQ3RDLFlBQW1CLE1BQW1DO1FBQW5DLFdBQU0sR0FBTixNQUFNLENBQTZCO0lBQUcsQ0FBQztJQUUxRCxTQUFTLENBQ1AsSUFBeUMsRUFDekMsT0FJQztRQUVELElBQUksV0FBVyxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ3JCLE9BQU8sbUJBQW1CLENBQUMsSUFBSSxFQUFFLGVBQWUsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7U0FDekU7UUFDRCxPQUFPLEVBQUUsQ0FBQztJQUNaLENBQUM7O3dIQWZVLDJCQUEyQjtzSEFBM0IsMkJBQTJCOzJGQUEzQiwyQkFBMkI7a0JBRHZDLElBQUk7bUJBQUMsRUFBRSxJQUFJLEVBQUUsNkJBQTZCLEVBQUU7O0FBdUI3QyxNQUFNLE9BQU8saUNBQWlDOzs4SEFBakMsaUNBQWlDOytIQUFqQyxpQ0FBaUMsaUJBdEJqQywyQkFBMkIsYUFBM0IsMkJBQTJCOytIQXNCM0IsaUNBQWlDOzJGQUFqQyxpQ0FBaUM7a0JBSjdDLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFLENBQUMsMkJBQTJCLENBQUM7b0JBQzNDLE9BQU8sRUFBRSxDQUFDLDJCQUEyQixDQUFDO2lCQUN2QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBMb2NhbGUgfSBmcm9tICdkYXRlLWZucyc7XG5pbXBvcnQgZm9ybWF0RGlzdGFuY2VUb05vdyBmcm9tICdkYXRlLWZucy9mb3JtYXREaXN0YW5jZVRvTm93JztcbmltcG9ydCB7XG4gIGNhbGN1bGF0ZUxvY2FsZSxcbiAgRGF0ZUZuc0NvbmZpZ3VyYXRpb25TZXJ2aWNlXG59IGZyb20gJy4vZGF0ZS1mbnMtY29uZmlndXJhdGlvbi5zZXJ2aWNlJztcbmltcG9ydCB7IERhdGVGbnNJbnB1dERhdGUgfSBmcm9tICcuL3R5cGVzJztcbmltcG9ydCB7IGlzVmFsaWREYXRlIH0gZnJvbSAnLi91dGlscyc7XG5cbkBQaXBlKHsgbmFtZTogJ2RmbnNGb3JtYXREaXN0YW5jZVRvTm93UHVyZScgfSlcbmV4cG9ydCBjbGFzcyBGb3JtYXREaXN0YW5jZVRvTm93UHVyZVBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgY29uc3RydWN0b3IocHVibGljIGNvbmZpZzogRGF0ZUZuc0NvbmZpZ3VyYXRpb25TZXJ2aWNlKSB7fVxuXG4gIHRyYW5zZm9ybShcbiAgICBkYXRlOiBEYXRlRm5zSW5wdXREYXRlIHwgbnVsbCB8IHVuZGVmaW5lZCxcbiAgICBvcHRpb25zPzoge1xuICAgICAgaW5jbHVkZVNlY29uZHM/OiBib29sZWFuO1xuICAgICAgYWRkU3VmZml4PzogYm9vbGVhbjtcbiAgICAgIGxvY2FsZT86IExvY2FsZTtcbiAgICB9XG4gICk6IHN0cmluZyB7XG4gICAgaWYgKGlzVmFsaWREYXRlKGRhdGUpKSB7XG4gICAgICByZXR1cm4gZm9ybWF0RGlzdGFuY2VUb05vdyhkYXRlLCBjYWxjdWxhdGVMb2NhbGUob3B0aW9ucywgdGhpcy5jb25maWcpKTtcbiAgICB9XG4gICAgcmV0dXJuICcnO1xuICB9XG59XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW0Zvcm1hdERpc3RhbmNlVG9Ob3dQdXJlUGlwZV0sXG4gIGV4cG9ydHM6IFtGb3JtYXREaXN0YW5jZVRvTm93UHVyZVBpcGVdXG59KVxuZXhwb3J0IGNsYXNzIEZvcm1hdERpc3RhbmNlVG9Ob3dQdXJlUGlwZU1vZHVsZSB7fVxuIl19