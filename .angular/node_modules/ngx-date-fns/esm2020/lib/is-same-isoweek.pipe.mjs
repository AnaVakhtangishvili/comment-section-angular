import { NgModule, Pipe } from '@angular/core';
import isSameISOWeek from 'date-fns/isSameISOWeek';
import * as i0 from "@angular/core";
export class IsSameISOWeekPipe {
    transform(dateLeft, dateRight) {
        return isSameISOWeek(dateLeft, dateRight);
    }
}
IsSameISOWeekPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameISOWeekPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsSameISOWeekPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameISOWeekPipe, name: "dfnsIsSameISOWeek" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameISOWeekPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsSameISOWeek'
                }]
        }] });
export class IsSameISOWeekPipeModule {
}
IsSameISOWeekPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameISOWeekPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsSameISOWeekPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameISOWeekPipeModule, declarations: [IsSameISOWeekPipe], exports: [IsSameISOWeekPipe] });
IsSameISOWeekPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameISOWeekPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameISOWeekPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsSameISOWeekPipe],
                    exports: [IsSameISOWeekPipe]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtc2FtZS1pc293ZWVrLnBpcGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9saWIvc3JjL2xpYi9pcy1zYW1lLWlzb3dlZWsucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFFOUQsT0FBTyxhQUFhLE1BQU0sd0JBQXdCLENBQUM7O0FBS25ELE1BQU0sT0FBTyxpQkFBaUI7SUFFNUIsU0FBUyxDQUFDLFFBQTBCLEVBQUUsU0FBMkI7UUFDL0QsT0FBTyxhQUFhLENBQUMsUUFBUSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQzVDLENBQUM7OzhHQUpVLGlCQUFpQjs0R0FBakIsaUJBQWlCOzJGQUFqQixpQkFBaUI7a0JBSDdCLElBQUk7bUJBQUM7b0JBQ0osSUFBSSxFQUFFLG1CQUFtQjtpQkFDMUI7O0FBYUQsTUFBTSxPQUFPLHVCQUF1Qjs7b0hBQXZCLHVCQUF1QjtxSEFBdkIsdUJBQXVCLGlCQVp2QixpQkFBaUIsYUFBakIsaUJBQWlCO3FIQVlqQix1QkFBdUI7MkZBQXZCLHVCQUF1QjtrQkFKbkMsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQztvQkFDakMsT0FBTyxFQUFFLENBQUMsaUJBQWlCLENBQUM7aUJBQzdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERhdGVGbnNJbnB1dERhdGUgfSBmcm9tICcuL3R5cGVzJztcbmltcG9ydCBpc1NhbWVJU09XZWVrIGZyb20gJ2RhdGUtZm5zL2lzU2FtZUlTT1dlZWsnO1xuXG5AUGlwZSh7XG4gIG5hbWU6ICdkZm5zSXNTYW1lSVNPV2Vlaydcbn0pXG5leHBvcnQgY2xhc3MgSXNTYW1lSVNPV2Vla1BpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcblxuICB0cmFuc2Zvcm0oZGF0ZUxlZnQ6IERhdGVGbnNJbnB1dERhdGUsIGRhdGVSaWdodDogRGF0ZUZuc0lucHV0RGF0ZSk6IGJvb2xlYW4ge1xuICAgIHJldHVybiBpc1NhbWVJU09XZWVrKGRhdGVMZWZ0LCBkYXRlUmlnaHQpO1xuICB9XG5cbn1cblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbSXNTYW1lSVNPV2Vla1BpcGVdLFxuICBleHBvcnRzOiBbSXNTYW1lSVNPV2Vla1BpcGVdXG59KVxuZXhwb3J0IGNsYXNzIElzU2FtZUlTT1dlZWtQaXBlTW9kdWxlIHsgfVxuIl19