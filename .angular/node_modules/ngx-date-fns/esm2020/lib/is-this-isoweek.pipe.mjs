import { NgModule, Pipe } from '@angular/core';
import isThisISOWeek from 'date-fns/isThisISOWeek';
import * as i0 from "@angular/core";
export class IsThisISOWeekPipe {
    transform(date) {
        return isThisISOWeek(date);
    }
}
IsThisISOWeekPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisISOWeekPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsThisISOWeekPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisISOWeekPipe, name: "dfnsIsThisISOWeek" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisISOWeekPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsThisISOWeek'
                }]
        }] });
export class IsThisISOWeekPipeModule {
}
IsThisISOWeekPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisISOWeekPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsThisISOWeekPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisISOWeekPipeModule, declarations: [IsThisISOWeekPipe], exports: [IsThisISOWeekPipe] });
IsThisISOWeekPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisISOWeekPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsThisISOWeekPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsThisISOWeekPipe],
                    exports: [IsThisISOWeekPipe]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtdGhpcy1pc293ZWVrLnBpcGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9saWIvc3JjL2xpYi9pcy10aGlzLWlzb3dlZWsucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFFOUQsT0FBTyxhQUFhLE1BQU0sd0JBQXdCLENBQUM7O0FBS25ELE1BQU0sT0FBTyxpQkFBaUI7SUFFNUIsU0FBUyxDQUFDLElBQXNCO1FBQzlCLE9BQU8sYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzdCLENBQUM7OzhHQUpVLGlCQUFpQjs0R0FBakIsaUJBQWlCOzJGQUFqQixpQkFBaUI7a0JBSDdCLElBQUk7bUJBQUM7b0JBQ0osSUFBSSxFQUFFLG1CQUFtQjtpQkFDMUI7O0FBYUQsTUFBTSxPQUFPLHVCQUF1Qjs7b0hBQXZCLHVCQUF1QjtxSEFBdkIsdUJBQXVCLGlCQVp2QixpQkFBaUIsYUFBakIsaUJBQWlCO3FIQVlqQix1QkFBdUI7MkZBQXZCLHVCQUF1QjtrQkFKbkMsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQztvQkFDakMsT0FBTyxFQUFFLENBQUMsaUJBQWlCLENBQUM7aUJBQzdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERhdGVGbnNJbnB1dERhdGUgfSBmcm9tICcuL3R5cGVzJztcbmltcG9ydCBpc1RoaXNJU09XZWVrIGZyb20gJ2RhdGUtZm5zL2lzVGhpc0lTT1dlZWsnO1xuXG5AUGlwZSh7XG4gIG5hbWU6ICdkZm5zSXNUaGlzSVNPV2Vlaydcbn0pXG5leHBvcnQgY2xhc3MgSXNUaGlzSVNPV2Vla1BpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcblxuICB0cmFuc2Zvcm0oZGF0ZTogRGF0ZUZuc0lucHV0RGF0ZSk6IGJvb2xlYW4ge1xuICAgIHJldHVybiBpc1RoaXNJU09XZWVrKGRhdGUpO1xuICB9XG5cbn1cblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbSXNUaGlzSVNPV2Vla1BpcGVdLFxuICBleHBvcnRzOiBbSXNUaGlzSVNPV2Vla1BpcGVdXG59KVxuZXhwb3J0IGNsYXNzIElzVGhpc0lTT1dlZWtQaXBlTW9kdWxlIHsgfVxuIl19