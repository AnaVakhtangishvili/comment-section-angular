import { NgModule, Pipe } from '@angular/core';
import isLeapYear from 'date-fns/isLeapYear';
import * as i0 from "@angular/core";
export class IsLeapYearPipe {
    transform(date) {
        return isLeapYear(date);
    }
}
IsLeapYearPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsLeapYearPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsLeapYearPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsLeapYearPipe, name: "dfnsIsLeapYear" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsLeapYearPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsLeapYear'
                }]
        }] });
export class IsLeapYearPipeModule {
}
IsLeapYearPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsLeapYearPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsLeapYearPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsLeapYearPipeModule, declarations: [IsLeapYearPipe], exports: [IsLeapYearPipe] });
IsLeapYearPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsLeapYearPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsLeapYearPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsLeapYearPipe],
                    exports: [IsLeapYearPipe]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtbGVhcC15ZWFyLnBpcGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9saWIvc3JjL2xpYi9pcy1sZWFwLXllYXIucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFFOUQsT0FBTyxVQUFVLE1BQU0scUJBQXFCLENBQUM7O0FBSzdDLE1BQU0sT0FBTyxjQUFjO0lBRXpCLFNBQVMsQ0FBQyxJQUFzQjtRQUM5QixPQUFPLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMxQixDQUFDOzsyR0FKVSxjQUFjO3lHQUFkLGNBQWM7MkZBQWQsY0FBYztrQkFIMUIsSUFBSTttQkFBQztvQkFDSixJQUFJLEVBQUUsZ0JBQWdCO2lCQUN2Qjs7QUFZRCxNQUFNLE9BQU8sb0JBQW9COztpSEFBcEIsb0JBQW9CO2tIQUFwQixvQkFBb0IsaUJBWHBCLGNBQWMsYUFBZCxjQUFjO2tIQVdkLG9CQUFvQjsyRkFBcEIsb0JBQW9CO2tCQUpoQyxRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRSxDQUFDLGNBQWMsQ0FBQztvQkFDOUIsT0FBTyxFQUFFLENBQUMsY0FBYyxDQUFDO2lCQUMxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBEYXRlRm5zSW5wdXREYXRlIH0gZnJvbSAnLi90eXBlcyc7XG5pbXBvcnQgaXNMZWFwWWVhciBmcm9tICdkYXRlLWZucy9pc0xlYXBZZWFyJztcblxuQFBpcGUoe1xuICBuYW1lOiAnZGZuc0lzTGVhcFllYXInXG59KVxuZXhwb3J0IGNsYXNzIElzTGVhcFllYXJQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG5cbiAgdHJhbnNmb3JtKGRhdGU6IERhdGVGbnNJbnB1dERhdGUpOiBib29sZWFuIHtcbiAgICByZXR1cm4gaXNMZWFwWWVhcihkYXRlKTtcbiAgfVxufVxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtJc0xlYXBZZWFyUGlwZV0sXG4gIGV4cG9ydHM6IFtJc0xlYXBZZWFyUGlwZV1cbn0pXG5leHBvcnQgY2xhc3MgSXNMZWFwWWVhclBpcGVNb2R1bGUgeyB9XG4iXX0=