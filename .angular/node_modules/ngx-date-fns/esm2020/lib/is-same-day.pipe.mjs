import { NgModule, Pipe } from '@angular/core';
import isSameDay from 'date-fns/isSameDay';
import * as i0 from "@angular/core";
export class IsSameDayPipe {
    transform(dateLeft, dateRight) {
        return isSameDay(dateLeft, dateRight);
    }
}
IsSameDayPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameDayPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
IsSameDayPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameDayPipe, name: "dfnsIsSameDay" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameDayPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'dfnsIsSameDay'
                }]
        }] });
export class IsSameDayPipeModule {
}
IsSameDayPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameDayPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IsSameDayPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameDayPipeModule, declarations: [IsSameDayPipe], exports: [IsSameDayPipe] });
IsSameDayPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameDayPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.3", ngImport: i0, type: IsSameDayPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IsSameDayPipe],
                    exports: [IsSameDayPipe]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtc2FtZS1kYXkucGlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2xpYi9zcmMvbGliL2lzLXNhbWUtZGF5LnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBRTlELE9BQU8sU0FBUyxNQUFNLG9CQUFvQixDQUFDOztBQUszQyxNQUFNLE9BQU8sYUFBYTtJQUV4QixTQUFTLENBQUMsUUFBMEIsRUFBRSxTQUEyQjtRQUMvRCxPQUFPLFNBQVMsQ0FBQyxRQUFRLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDeEMsQ0FBQzs7MEdBSlUsYUFBYTt3R0FBYixhQUFhOzJGQUFiLGFBQWE7a0JBSHpCLElBQUk7bUJBQUM7b0JBQ0osSUFBSSxFQUFFLGVBQWU7aUJBQ3RCOztBQWFELE1BQU0sT0FBTyxtQkFBbUI7O2dIQUFuQixtQkFBbUI7aUhBQW5CLG1CQUFtQixpQkFabkIsYUFBYSxhQUFiLGFBQWE7aUhBWWIsbUJBQW1COzJGQUFuQixtQkFBbUI7a0JBSi9CLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFLENBQUMsYUFBYSxDQUFDO29CQUM3QixPQUFPLEVBQUUsQ0FBQyxhQUFhLENBQUM7aUJBQ3pCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERhdGVGbnNJbnB1dERhdGUgfSBmcm9tICcuL3R5cGVzJztcbmltcG9ydCBpc1NhbWVEYXkgZnJvbSAnZGF0ZS1mbnMvaXNTYW1lRGF5JztcblxuQFBpcGUoe1xuICBuYW1lOiAnZGZuc0lzU2FtZURheSdcbn0pXG5leHBvcnQgY2xhc3MgSXNTYW1lRGF5UGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuXG4gIHRyYW5zZm9ybShkYXRlTGVmdDogRGF0ZUZuc0lucHV0RGF0ZSwgZGF0ZVJpZ2h0OiBEYXRlRm5zSW5wdXREYXRlKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIGlzU2FtZURheShkYXRlTGVmdCwgZGF0ZVJpZ2h0KTtcbiAgfVxuXG59XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW0lzU2FtZURheVBpcGVdLFxuICBleHBvcnRzOiBbSXNTYW1lRGF5UGlwZV1cbn0pXG5leHBvcnQgY2xhc3MgSXNTYW1lRGF5UGlwZU1vZHVsZSB7IH1cbiJdfQ==